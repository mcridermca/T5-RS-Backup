Option Strict Off
Option Explicit On 
Option Infer On

'$ Application: IGSEST
'$ PartFamily: CAE_Mech_Install_CP_Comps
'$ GenerateDate: 07/01/2025 18:41:32

    Imports Microsoft.VisualBasic
    Imports System
    Imports System.IO
    Imports System.Data
    Imports System.Windows.Forms
    Imports System.Collections
    Imports System.Diagnostics
    Imports System.Math
    Imports System.Xml
    Imports System.Xml.Linq
    Imports RuleStream
    Imports RuleStream.Kernel
    Imports System.Collections.Generic
    Imports RulestreamTCUtilities
    Imports IGSEST.swMateType_e
    Imports IGSEST.swMateAlign_e
    Imports IGSEST.severity

    Public Class [CAE_Mech_Install_CP_Comps]
    
    Inherits RuleStream.Kernel.Part
    Implements RuleStream.IRsPartFormulas

    '*************************************************************************
    '*                                                                       *
    '*   This source code, together with any object or execution files       *
    '*   generated herefrom (whether by compiling, translating, or linking   *
    '*   this source file to any header files, resource files, library       *
    '*   files, other source files or object files) are confidential and     *
    '*   proprietary to Siemens Product Lifecycle Management Software Inc.   *
    '*   No person may sell, offer for sale, copy, use, compile, translate   *
    '*   or link this source                                                 *
    '*   file without the written prior approval of Siemens Product          *
    '*   Lifecycle Management Software Inc.                                  *
    '*                                                                       *
    '*   Copyright (C) 2024 Siemens. All rights reserved.                    *
    '*                                                                       *
    '*************************************************************************

    Private this as CAE_Mech_Install_CP_Comps = me

    #Region " IRsPartFormulas Implementation "

    Public Function GetNormalValue(ByVal Value as Object, ByVal propertyName As String, ByVal context As String) As Double Implements RuleStream.IRsPartFormulas.GetNormalValue
    Dim MethodName as String = string.format("Formula_{0}_NORMALVALUE{1}", propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method, Value)
    End Function

    Public Function GetOptimalPartFamily(ByVal subpartSpecName As String, ByVal context As String) As String Implements RuleStream.IRsPartFormulas.GetOptimalPartFamily
    Dim MethodName as String = string.format("Formula_{0}_OPTIMALPARTFAMILY{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetPartNames(ByVal subpartSpecName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetPartNames
    Dim MethodName as String = string.format("Formula_{0}_PARTNAMES{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetParts(ByVal specName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetParts
    Dim MethodName as String = string.format("Formula_{0}_PARTS{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetProcessStepComment(ByVal processId As String, ByVal processStep As String) As String Implements RuleStream.IRsPartFormulas.GetProcessStepComment
    Dim Result as String = ""
    
    Return Result
    End Function

    Public Function GetProcessStepStatus(ByVal processId As String, ByVal processStep As String) As Integer Implements RuleStream.IRsPartFormulas.GetProcessStepStatus
    Dim Result as Integer 'Long
    
    Return Result
    End Function

    Public Function GetQuantity(ByVal subpartSpecName As String, ByVal context As String) As Integer Implements RuleStream.IRsPartFormulas.GetQuantity
    Dim MethodName as String = string.format("Formula_{0}_QUANTITY{1}",subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResult(ByVal propertyName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetResult
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResultCustomCheckDependancy(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetResultCustomCheckDependancy
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetUserChange(ByVal specName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetUserChange
    Dim MethodName as String = string.format("Formula_{0}_USERCHANGE{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetHideCalculatedValue(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetHideCalculatedValue
    Dim MethodName as String = string.format("Formula_{0}_HIDE_CALCULATED_VALUE{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Sub NewContextInit() Implements RuleStream.IRsPartFormulas.NewContextInit
    NewContextInit_Properties()
    NewContextInit_ValidValues()
    NewContextInit_Subparts()
    NewContextInit_Connections()
    NewContextInit_DB()
    End Sub

    Public Sub OnChanged(ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method)
    Select Case specName & "_" & context
    End Select
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Sub OnChanged(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Function OnChangedStatus(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String)As Boolean Implements RuleStream.IRsPartFormulas.OnChangedStatus
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Dim Status as Boolean = False
    Select Case specName & "_" & context
    Case Else
    Status = False
    End Select
    Return Status
    End Function

    #End Region

    #Region " Properties, Subparts, Connections "
    
          Public Property [a_Sample_Cnvy_Hrs_MDR_Bed_Size]() As Double
      Get
      Return Properties("a_Sample_Cnvy_Hrs_MDR_Bed_Size").Value
      End Get
      Set(ByVal Value As Double)
      Properties("a_Sample_Cnvy_Hrs_MDR_Bed_Size").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [bool_Include_In_Subsystem]() As Boolean
      Get
      Return Properties("bool_Include_In_Subsystem").Value
      End Get
      Set(ByVal Value As Boolean)
      Properties("bool_Include_In_Subsystem").CalculatedValue = Value
      End Set
      End Property
    
          Public Shadows Property [DisplayName]() As String
      Get
      Return Properties("DisplayName").Value
      End Get
      Set(ByVal Value As String)
      Properties("DisplayName").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Anchors_Dollars]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Anchors_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Anchors_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Anchors_Hours]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Anchors_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Anchors_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Anchors_Qty]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Anchors_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Anchors_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Subsystem_Efficiency_Dollars]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Subsystem_Efficiency_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Subsystem_Efficiency_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Subsystem_Efficiency_Hours]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Subsystem_Efficiency_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Subsystem_Efficiency_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Subsystem_Efficiency_Qty]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Subsystem_Efficiency_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Subsystem_Efficiency_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Total_Dollars]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Total_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Total_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Total_Hours]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Add_Hours_Dollars_Total_Qty]() As Double
      Get
      Return Properties("Add_Hours_Dollars_Total_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Add_Hours_Dollars_Total_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_112_inches_pipe]() As Double
      Get
      Return Properties("Air_Piping_112_inches_pipe").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_112_inches_pipe").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_12_inches_pipe]() As Double
      Get
      Return Properties("Air_Piping_12_inches_pipe").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_12_inches_pipe").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_212_inches_pipe]() As Double
      Get
      Return Properties("Air_Piping_212_inches_pipe").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_212_inches_pipe").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_3pipe]() As Double
      Get
      Return Properties("Air_Piping_3pipe").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_3pipe").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_78_inches_pipe]() As Double
      Get
      Return Properties("Air_Piping_78_inches_pipe").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_78_inches_pipe").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_AC]() As Double
      Get
      Return Properties("Air_Piping_AC").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_AC").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_CHAINLUB]() As Double
      Get
      Return Properties("Air_Piping_CHAINLUB").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_CHAINLUB").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_Dryer]() As Double
      Get
      Return Properties("Air_Piping_Dryer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_Dryer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_FILTERREG]() As Double
      Get
      Return Properties("Air_Piping_FILTERREG").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_FILTERREG").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_RedAC]() As Double
      Get
      Return Properties("Air_Piping_RedAC").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_RedAC").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_SUBTOTAL]() As Double
      Get
      Return Properties("Air_Piping_SUBTOTAL").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_SUBTOTAL").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_SUBTOTAL_Hours]() As Double
      Get
      Return Properties("Air_Piping_SUBTOTAL_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_SUBTOTAL_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_SUBTOTAL_Units]() As Double
      Get
      Return Properties("Air_Piping_SUBTOTAL_Units").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_SUBTOTAL_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_Total_Hours]() As Double
      Get
      Return Properties("Air_Piping_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Air_Piping_Tubing]() As Double
      Get
      Return Properties("Air_Piping_Tubing").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Air_Piping_Tubing").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Bottom_Guards_HRS]() As Double
      Get
      Return Properties("Bulk_Flow_Bottom_Guards_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Bottom_Guards_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Bottom_Guards_Metrics]() As Double
      Get
      Return Properties("Bulk_Flow_Bottom_Guards_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Bottom_Guards_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Bottom_Guards_QTY_FT]() As Double
      Get
      Return Properties("Bulk_Flow_Bottom_Guards_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Bottom_Guards_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_BULK_FLOW_FOOTAGE_HRS]() As Double
      Get
      Return Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics]() As Double
      Get
      Return Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT]() As Double
      Get
      Return Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Hand_rail_and_cable_HRS]() As Double
      Get
      Return Properties("Bulk_Flow_Hand_rail_and_cable_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Hand_rail_and_cable_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Hand_rail_and_cable_Metrics]() As Double
      Get
      Return Properties("Bulk_Flow_Hand_rail_and_cable_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Hand_rail_and_cable_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Hand_rail_and_cable_QTY_FT]() As Double
      Get
      Return Properties("Bulk_Flow_Hand_rail_and_cable_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Hand_rail_and_cable_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Mount_Motors_Drives_HRS]() As Double
      Get
      Return Properties("Bulk_Flow_Mount_Motors_Drives_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Mount_Motors_Drives_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Mount_Motors_Drives_Metrics]() As Double
      Get
      Return Properties("Bulk_Flow_Mount_Motors_Drives_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Mount_Motors_Drives_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Mount_Motors_Drives_QTY_FT]() As Double
      Get
      Return Properties("Bulk_Flow_Mount_Motors_Drives_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Mount_Motors_Drives_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Bulk_Flow_Total_HRS]() As Double
      Get
      Return Properties("Bulk_Flow_Total_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Bulk_Flow_Total_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Cost_of_Air_per_Linear_Foot]() As Double
      Get
      Return Properties("Cost_of_Air_per_Linear_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Cost_of_Air_per_Linear_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [DATA_CPNumber]() As String
      Get
      Return Properties("DATA_CPNumber").Value
      End Get
      Set(ByVal Value As String)
      Properties("DATA_CPNumber").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [DATA_Raw]() As String
      Get
      Return Properties("DATA_Raw").Value
      End Get
      Set(ByVal Value As String)
      Properties("DATA_Raw").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Demo_Removed_existing_Ft]() As Double
      Get
      Return Properties("Demo_Removed_existing_Ft").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Demo_Removed_existing_Ft").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Demo_Removed_existing_Hours]() As Double
      Get
      Return Properties("Demo_Removed_existing_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Demo_Removed_existing_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Demo_Removed_existing_Scrap_1_or_Keep_2]() As Double
      Get
      Return Properties("Demo_Removed_existing_Scrap_1_or_Keep_2").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Demo_Removed_existing_Scrap_1_or_Keep_2").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Extra_Filter_Regulators]() As Double
      Get
      Return Properties("Extra_Filter_Regulators").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Extra_Filter_Regulators").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Air_Devices]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Air_Devices").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Air_Devices").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Beds_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Belting_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Layout_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Supports_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Total_Footage]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Total_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Total_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_BeltBrakeMeter_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltBrakeMeter_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltBrakeMeter_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_BeltBrakeMeter_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltBrakeMeter_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Beds_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Belting_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Layout_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Supports_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Total_Footage]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Total_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Total_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonRoller_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonRoller_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonRoller_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_BeltonRoller_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonRoller_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Beds_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Belting_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Layout_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Supports_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Total_Footage]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Total_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Total_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_BeltonSlider_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltonSlider_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltonSlider_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_BeltonSlider_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltonSlider_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Beds_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Belting_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Layout_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_BeltStaging_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Supports_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Total_Footage]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Total_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Total_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_BeltStaging_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_BeltStaging_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_BeltStaging_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_BeltStaging_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_BeltStaging_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Buyout_Footage]() As Double
      Get
      Return Properties("HCAD_Buyout_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Buyout_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Buyout_Total_Footage]() As Double
      Get
      Return Properties("HCAD_Buyout_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Buyout_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_Chutes_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Beds_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Belting_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Layout_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Supports_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Total_Footage]() As Double
      Get
      Return Properties("HCAD_Chutes_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Total_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Total_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_Chutes_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Chutes_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Chutes_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_Chutes_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Chutes_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Belting_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Catwalk_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_Catwalk_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_Catwalk_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Catwalk_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_Catwalk_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_Catwalk_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Layout_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Supports_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Total_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Total_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_Crossovers_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Crossovers_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Crossovers_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_Crossovers_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Crossovers_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Beds_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Belting_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Layout_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Supports_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Total_Footage]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Total_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Total_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_ECCTrashBelt_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ECCTrashBelt_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ECCTrashBelt_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_ECCTrashBelt_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ECCTrashBelt_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Beds_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Belting_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Layout_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Supports_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Total_Footage]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Total_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Total_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_FlatBeltCurves_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_FlatBeltCurves_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_FlatBeltCurves_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_FlatBeltCurves_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_FlatBeltCurves_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_Gravity_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Beds_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Belting_Footage]() As Double
      Get
      Return Properties("HCAD_Gravity_Belting_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Belting_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Belting_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Layout_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_Gravity_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Supports_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Total_Footage]() As Long
      Get
      Return Properties("HCAD_Gravity_Total_Footage").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Total_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Total_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_Gravity_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Gravity_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Gravity_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_Gravity_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Gravity_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Beds_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Belting_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Layout_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Supports_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Total_Hours]() As Double
      Get
      Return Properties("HCAD_GravityTrailerLoader_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_GravityTrailerLoader_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Total_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Unloading_Hours]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_GravityTrailerLoader_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_GravityTrailerLoader_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_GravityTrailerLoader_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Seismic_Factor]() As Double
      Get
      Return Properties("HCAD_Hanger_Seismic_Factor").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Seismic_Factor").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Total_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Total_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Total_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Total_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_A_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_A_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_A_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_A_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_A_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_A_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_B_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_B_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_B_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_B_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_B_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_B_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_C_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_C_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_C_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_C_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_C_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_C_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_D_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_D_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_D_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_D_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_D_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_D_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_E_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_E_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_E_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_E_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_E_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_E_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_F_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_F_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_F_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_F_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_F_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_F_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_G_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_G_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_G_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_G_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_G_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_G_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_K_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_K_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_K_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_K_Qty]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_K_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_K_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_M_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_M_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_M_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_M_Qty]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_M_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_M_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_N_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_N_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_N_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_N_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_N_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_N_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_P_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_P_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_P_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_P_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_P_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_P_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_R_Hours]() As Double
      Get
      Return Properties("HCAD_Hanger_Type_R_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Hanger_Type_R_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Hanger_Type_R_Qty]() As Long
      Get
      Return Properties("HCAD_Hanger_Type_R_Qty").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_Hanger_Type_R_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Header_Steel_and_Hangers_Ea_Total_Hours]() As Double
      Get
      Return Properties("HCAD_Header_Steel_and_Hangers_Ea_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Header_Steel_and_Hangers_Ea_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_Header_Steel_Hangers_Ea_Total_Units]() As Double
      Get
      Return Properties("HCAD_Header_Steel_Hangers_Ea_Total_Units").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_Header_Steel_Hangers_Ea_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Beds_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Belting_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Layout_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Supports_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Total_Footage]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Total_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Total_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliFlow_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliFlow_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliFlow_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_IntelliFlow_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliFlow_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Beds_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Belting_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Layout_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Supports_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Total_Footage]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Total_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Total_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliMerge_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliMerge_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliMerge_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_IntelliMerge_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliMerge_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Beds_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Belting_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Layout_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Supports_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Total_Footage]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Total_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Total_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_IntelliQAccuglide_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_IntelliQAccuglide_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_IntelliQAccuglide_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_IntelliQAccuglide_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_IntelliQAccuglide_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_MDR_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Beds_Units]() As Long
      Get
      Return Properties("HCAD_MDR_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Belting_Units]() As Long
      Get
      Return Properties("HCAD_MDR_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Diverts]() As Double
      Get
      Return Properties("HCAD_MDR_Diverts").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Diverts").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Gates]() As Double
      Get
      Return Properties("HCAD_MDR_Gates").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Gates").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Layout_Units]() As Long
      Get
      Return Properties("HCAD_MDR_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Pneumatic_Diverts]() As Double
      Get
      Return Properties("HCAD_MDR_Pneumatic_Diverts").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Pneumatic_Diverts").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Pneumatic_Transfers]() As Double
      Get
      Return Properties("HCAD_MDR_Pneumatic_Transfers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Pneumatic_Transfers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_MDR_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_MDR_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_MDR_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Supports_Units]() As Long
      Get
      Return Properties("HCAD_MDR_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Total_Footage]() As Double
      Get
      Return Properties("HCAD_MDR_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Total_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Total_Units]() As Long
      Get
      Return Properties("HCAD_MDR_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Transfers]() As Double
      Get
      Return Properties("HCAD_MDR_Transfers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Transfers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_MDR_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_MDR_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_MDR_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_MDR_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_MDR_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Beds_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Belting_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Layout_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Supports_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Total_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Total_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_PoweredTrailerLoader_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_PoweredTrailerLoader_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_PoweredTrailerLoader_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_PoweredTrailerLoader_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersBeds_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersBeds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersBeds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersBeds_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersBeds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersBeds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersBelting_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersBelting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersBelting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersBelting_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersBelting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersBelting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersLayout_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersLayout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersLayout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersLayout_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersLayout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersLayout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersRunIn_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersRunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersRunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersRunIn_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersRunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersRunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersSideGuide_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersSideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersSideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersSupports_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersSupports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersSupports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersSupports_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersSupports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersSupports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersTotal_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersTotal_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersTotal_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersTotal_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersTotal_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersTotal_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersUnloading_Hours]() As Double
      Get
      Return Properties("HCAD_ScalesSealersStrappersUnloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ScalesSealersStrappersUnloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ScalesSealersStrappersUnloading_Units]() As Long
      Get
      Return Properties("HCAD_ScalesSealersStrappersUnloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ScalesSealersStrappersUnloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Beds_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Belting_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Layout_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Supports_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Total_Footage]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Total_Footage").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Total_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Total_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_ServoInductunits_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ServoInductunits_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ServoInductunits_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_ServoInductunits_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ServoInductunits_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Beds_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Belting_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Diverts]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Diverts").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Diverts").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Layout_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Supports_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Total_Footage]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Total_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Total_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_ShoeSorter_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_ShoeSorter_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_ShoeSorter_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_ShoeSorter_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_ShoeSorter_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Beds_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Belting_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Layout_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Supports_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Total_Footage]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Total_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Total_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_SpiralCurvessets_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_SpiralCurvessets_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_SpiralCurvessets_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_SpiralCurvessets_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_SpiralCurvessets_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_VBelt_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Beds_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Belting_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Layout_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_VBelt_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Supports_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Total_Footage]() As Double
      Get
      Return Properties("HCAD_VBelt_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Total_PHours]() As Double
      Get
      Return Properties("HCAD_VBelt_Total_PHours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Total_PHours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Total_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_VBelt_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_VBelt_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_VBelt_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_VBelt_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_VBelt_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Beds_Avg_Height]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Beds_Avg_Height").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Beds_Avg_Height").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Beds_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Beds_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Beds_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Beds_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_Beds_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_Beds_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Belting_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Belting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Belting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Belting_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_Belting_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_Belting_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Layout_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Layout_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Layout_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Layout_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_Layout_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_Layout_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_RunIn_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_RunIn_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_RunIn_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_RunIn_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_RunIn_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_RunIn_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_SideGuide_Footage]() As Double
      Get
      Return Properties("HCAD_WheelDivert_SideGuide_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_SideGuide_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_SideGuide_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_SideGuide_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_SideGuide_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_SideGuide_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_SideGuide_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_SideGuide_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Supports_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Supports_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_Supports_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_Supports_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Total_Footage]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Total_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Total_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_Total_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_Total_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Unloading_Hours]() As Double
      Get
      Return Properties("HCAD_WheelDivert_Unloading_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("HCAD_WheelDivert_Unloading_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [HCAD_WheelDivert_Unloading_Units]() As Long
      Get
      Return Properties("HCAD_WheelDivert_Unloading_Units").Value
      End Get
      Set(ByVal Value As Long)
      Properties("HCAD_WheelDivert_Unloading_Units").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_1_Air]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_1_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_1_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_1_Dollars]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_1_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_1_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_1_Hours]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_1_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_1_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_1_Metric]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_1_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_1_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_1_Qty]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_1_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_1_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_2_Air]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_2_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_2_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_2_Dollars]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_2_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_2_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_2_Hours]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_2_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_2_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_2_Metric]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_2_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_2_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_2_Qty]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_2_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_2_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_3_Air]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_3_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_3_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_3_Dollars]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_3_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_3_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_3_Hours]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_3_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_3_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_3_Metric]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_3_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_3_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Style_3_Qty]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Style_3_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Style_3_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Total_Air]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Total_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Total_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hours_Misc_Chute_Total_Hours]() As Double
      Get
      Return Properties("Hours_Misc_Chute_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hours_Misc_Chute_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_80_20_Guards_Air]() As Double
      Get
      Return Properties("Hrs_Misc_80_20_Guards_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_80_20_Guards_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_80_20_Guards_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_80_20_Guards_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_80_20_Guards_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_80_20_Guards_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_80_20_Guards_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_80_20_Guards_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_80_20_Guards_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_80_20_Guards_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_80_20_Guards_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_80_20_Guards_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_80_20_Guards_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_80_20_Guards_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Angle_Guarding_ft_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Angle_Guarding_ft_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Angle_Guarding_ft_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Angle_Guarding_ft_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Angle_Guarding_ft_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Angle_Guarding_ft_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Angle_Guarding_ft_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Angle_Guarding_ft_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Angle_Guarding_ft_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Angle_Guarding_ft_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Angle_Guarding_ft_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Angle_Guarding_ft_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Angle_Guarding_ft_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Angle_Guarding_ft_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Angle_Guarding_ft_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_AR_Induct_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_AR_Induct_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_AR_Induct_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_AR_Induct_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_AR_Induct_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_AR_Induct_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_AR_Induct_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_AR_Induct_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_AR_Induct_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_AR_Induct_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_AR_Induct_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_AR_Induct_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_AR_Induct_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_AR_Induct_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_AR_Induct_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_ARSAW_ARSTOWS_Air]() As Double
      Get
      Return Properties("Hrs_Misc_ARSAW_ARSTOWS_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_ARSAW_ARSTOWS_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_ARSAW_ARSTOWS_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_ARSAW_ARSTOWS_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_ARSAW_ARSTOWS_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_ARSAW_ARSTOWS_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_ARSAW_ARSTOWS_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_ARSAW_ARSTOWS_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_ARSAW_ARSTOWS_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_ARSAW_ARSTOWS_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_ARSAW_ARSTOWS_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_ARSAW_ARSTOWS_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_ARSAW_ARSTOWS_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_ARSAW_ARSTOWS_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Autobag_850_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Autobag_850_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Autobag_850_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Autobag_850_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Autobag_850_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Autobag_850_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Autobag_850_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Autobag_850_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Autobag_850_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Autobag_850_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Autobag_850_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Autobag_850_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Autobag_850_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Autobag_850_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Autobag_850_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Baffled_Shipping_Chutes_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Baffled_Shipping_Chutes_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Baffled_Shipping_Chutes_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Baffled_Shipping_Chutes_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Baffled_Shipping_Chutes_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Baffled_Shipping_Chutes_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Baffled_Shipping_Chutes_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Baffled_Shipping_Chutes_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Baffled_Shipping_Chutes_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Baffled_Shipping_Chutes_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Baffled_Shipping_Chutes_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Baffled_Shipping_Chutes_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Baffled_Shipping_Chutes_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Baffled_Shipping_Chutes_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Baffled_Shipping_Chutes_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Ball_Transfer_Tables_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Ball_Transfer_Tables_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Ball_Transfer_Tables_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Ball_Transfer_Tables_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Ball_Transfer_Tables_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Ball_Transfer_Tables_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Ball_Transfer_Tables_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Ball_Transfer_Tables_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Ball_Transfer_Tables_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Ball_Transfer_Tables_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Ball_Transfer_Tables_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Ball_Transfer_Tables_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Ball_Transfer_Tables_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Ball_Transfer_Tables_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Ball_Transfer_Tables_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_BangerBarsHtProte_Air]() As Double
      Get
      Return Properties("Hrs_Misc_BangerBarsHtProte_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_BangerBarsHtProte_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_BangerBarsHtProte_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_BangerBarsHtProte_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_BangerBarsHtProte_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_BangerBarsHtProte_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_BangerBarsHtProte_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_BangerBarsHtProte_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_BangerBarsHtProte_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_BangerBarsHtProte_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_BangerBarsHtProte_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_BangerBarsHtProte_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_BangerBarsHtProte_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_BangerBarsHtProte_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Bottom_Pans_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Bottom_Pans_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Bottom_Pans_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Bottom_Pans_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Bottom_Pans_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Bottom_Pans_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Bottom_Pans_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Bottom_Pans_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Bottom_Pans_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Bottom_Pans_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Bottom_Pans_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Bottom_Pans_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Bottom_Pans_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Bottom_Pans_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Bottom_Pans_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Carton_Erector_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Carton_Erector_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Carton_Erector_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Carton_Erector_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Carton_Erector_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Carton_Erector_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Carton_Erector_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Carton_Erector_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Carton_Erector_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Carton_Erector_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Carton_Erector_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Carton_Erector_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Carton_Erector_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Carton_Erector_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Carton_Erector_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Conveyor_Wipe_Down_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Conveyor_Wipe_Down_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Conveyor_Wipe_Down_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Conveyor_Wipe_Down_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Conveyor_Wipe_Down_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Conveyor_Wipe_Down_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Conveyor_Wipe_Down_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Conveyor_Wipe_Down_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Conveyor_Wipe_Down_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Conveyor_Wipe_Down_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Conveyor_Wipe_Down_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Conveyor_Wipe_Down_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Conveyor_Wipe_Down_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Conveyor_Wipe_Down_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Conveyor_Wipe_Down_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_CVG9_Style_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_CVG9_Style_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_CVG9_Style_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_CVG9_Style_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_CVG9_Style_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_CVG9_Style_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_CVG9_Style_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_CVG9_Style_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_CVG9_Style_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_CVG9_Style_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_CVG9_Style_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_CVG9_Style_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_CVG9_Style_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_CVG9_Style_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_CVG9_Style_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Deflector_Plows_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Deflector_Plows_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Deflector_Plows_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Deflector_Plows_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Deflector_Plows_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Deflector_Plows_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Deflector_Plows_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Deflector_Plows_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Deflector_Plows_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Deflector_Plows_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Deflector_Plows_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Deflector_Plows_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Deflector_Plows_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Deflector_Plows_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Deflector_Plows_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dehnco_Work_Tables_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Dehnco_Work_Tables_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dehnco_Work_Tables_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dehnco_Work_Tables_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Dehnco_Work_Tables_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dehnco_Work_Tables_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dehnco_Work_Tables_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Dehnco_Work_Tables_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dehnco_Work_Tables_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dehnco_Work_Tables_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Dehnco_Work_Tables_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dehnco_Work_Tables_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dehnco_Work_Tables_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Dehnco_Work_Tables_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dehnco_Work_Tables_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Descrambler_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Descrambler_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Descrambler_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Descrambler_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Descrambler_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Descrambler_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Descrambler_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Descrambler_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Descrambler_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Descrambler_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Descrambler_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Descrambler_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Descrambler_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Descrambler_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Descrambler_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dual_Inlet_Spiral_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gates_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Gates_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gates_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gates_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Gates_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gates_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gates_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Gates_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gates_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gates_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Gates_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gates_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gates_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Gates_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gates_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gaylord_Tipper_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Gaylord_Tipper_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gaylord_Tipper_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gaylord_Tipper_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Gaylord_Tipper_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gaylord_Tipper_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gaylord_Tipper_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Gaylord_Tipper_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gaylord_Tipper_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gaylord_Tipper_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Gaylord_Tipper_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gaylord_Tipper_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gaylord_Tipper_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Gaylord_Tipper_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gaylord_Tipper_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_GMT_Auto_Unloader_Air]() As Double
      Get
      Return Properties("Hrs_Misc_GMT_Auto_Unloader_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_GMT_Auto_Unloader_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_GMT_Auto_Unloader_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_GMT_Auto_Unloader_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_GMT_Auto_Unloader_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_GMT_Auto_Unloader_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_GMT_Auto_Unloader_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_GMT_Auto_Unloader_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_GMT_Auto_Unloader_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_GMT_Auto_Unloader_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_GMT_Auto_Unloader_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_GMT_Auto_Unloader_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_GMT_Auto_Unloader_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_GMT_Auto_Unloader_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gravity_Spurs_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Gravity_Spurs_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gravity_Spurs_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gravity_Spurs_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Gravity_Spurs_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gravity_Spurs_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gravity_Spurs_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Gravity_Spurs_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gravity_Spurs_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gravity_Spurs_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Gravity_Spurs_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gravity_Spurs_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Gravity_Spurs_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Gravity_Spurs_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Gravity_Spurs_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_HC_Spiral_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_HC_Spiral_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_HC_Spiral_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_HC_Spiral_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_HC_Spiral_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_HC_Spiral_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_HC_Spiral_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_HC_Spiral_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_HC_Spiral_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_HC_Spiral_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_HC_Spiral_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_HC_Spiral_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_HC_Spiral_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_HC_Spiral_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_HC_Spiral_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Highway_Guarding_P_R_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Highway_Guarding_P_R_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Highway_Guarding_P_R_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Highway_Guarding_P_R_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Highway_Guarding_P_R_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Highway_Guarding_P_R_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Highway_Guarding_P_R_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Highway_Guarding_P_R_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Highway_Guarding_P_R_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Highway_Guarding_P_R_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Highway_Guarding_P_R_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Highway_Guarding_P_R_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Highway_Guarding_P_R_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Highway_Guarding_P_R_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Highway_Guarding_P_R_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Intralox_Sorter_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Intralox_Sorter_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Intralox_Sorter_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Intralox_Sorter_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Intralox_Sorter_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Intralox_Sorter_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Intralox_Sorter_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Intralox_Sorter_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Intralox_Sorter_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Intralox_Sorter_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Intralox_Sorter_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Intralox_Sorter_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Intralox_Sorter_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Intralox_Sorter_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Intralox_Sorter_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Merging_Spirals_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Merging_Spirals_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Merging_Spirals_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Merging_Spirals_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Merging_Spirals_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Merging_Spirals_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Merging_Spirals_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Merging_Spirals_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Merging_Spirals_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Merging_Spirals_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Merging_Spirals_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Merging_Spirals_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Merging_Spirals_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Merging_Spirals_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Merging_Spirals_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Netting_linear_ft_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Netting_linear_ft_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Netting_linear_ft_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Netting_linear_ft_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Netting_linear_ft_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Netting_linear_ft_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Netting_linear_ft_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Netting_linear_ft_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Netting_linear_ft_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Netting_linear_ft_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Netting_linear_ft_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Netting_linear_ft_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Netting_linear_ft_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Netting_linear_ft_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Netting_linear_ft_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_PandA_Air]() As Double
      Get
      Return Properties("Hrs_Misc_PandA_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_PandA_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_PandA_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_PandA_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_PandA_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_PandA_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_PandA_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_PandA_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_PandA_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_PandA_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_PandA_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_PandA_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_PandA_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_PandA_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Personnel_Fencing_Temp_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Personnel_Fencing_Temp_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Personnel_Fencing_Temp_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Personnel_Fencing_Temp_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Personnel_Fencing_Temp_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Personnel_Fencing_Temp_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Personnel_Fencing_Temp_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Personnel_Fencing_Temp_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Personnel_Fencing_Temp_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Personnel_Fencing_Temp_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Personnel_Fencing_Temp_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Personnel_Fencing_Temp_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Personnel_Fencing_Temp_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Personnel_Fencing_Temp_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Personnel_Fencing_Temp_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Pick_Mod_Trash_Chutes_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Pick_Mod_Trash_Chutes_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Pick_Mod_Trash_Chutes_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Pick_Mod_Trash_Chutes_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Spirals_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Spirals_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Spirals_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Spirals_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Spirals_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Spirals_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Spirals_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Spirals_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Spirals_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Spirals_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Spirals_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Spirals_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Spirals_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Spirals_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Spirals_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Swing_Arm_Divert_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Swing_Arm_Divert_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Swing_Arm_Divert_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Swing_Arm_Divert_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Powered_Swing_Arm_Divert_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_PUT_Walls_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_PUT_Walls_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_PUT_Walls_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_PUT_Walls_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_PUT_Walls_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_PUT_Walls_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_PUT_Walls_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_PUT_Walls_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_PUT_Walls_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_PUT_Walls_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_PUT_Walls_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_PUT_Walls_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Proos_PUT_Walls_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Proos_PUT_Walls_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Proos_PUT_Walls_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_QA_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_QA_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_QA_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_QA_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_QA_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_QA_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_QA_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_QA_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_QA_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_QA_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_QA_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_QA_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_QA_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_QA_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_QA_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Semi_Auto_Taper_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Semi_Auto_Taper_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Semi_Auto_Taper_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Semi_Auto_Taper_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Semi_Auto_Taper_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Semi_Auto_Taper_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Semi_Auto_Taper_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Semi_Auto_Taper_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Semi_Auto_Taper_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Semi_Auto_Taper_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Semi_Auto_Taper_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Semi_Auto_Taper_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Semi_Auto_Taper_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Semi_Auto_Taper_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Semi_Auto_Taper_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Singulator_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Singulator_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Singulator_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Singulator_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Singulator_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Singulator_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Singulator_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Singulator_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Singulator_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Singulator_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Singulator_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Singulator_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Singulator_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Singulator_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Singulator_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SLAMS_Air]() As Double
      Get
      Return Properties("Hrs_Misc_SLAMS_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SLAMS_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SLAMS_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_SLAMS_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SLAMS_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SLAMS_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_SLAMS_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SLAMS_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SLAMS_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_SLAMS_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SLAMS_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SLAMS_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_SLAMS_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SLAMS_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SmartPac_Machines_Air]() As Double
      Get
      Return Properties("Hrs_Misc_SmartPac_Machines_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SmartPac_Machines_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SmartPac_Machines_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_SmartPac_Machines_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SmartPac_Machines_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SmartPac_Machines_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_SmartPac_Machines_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SmartPac_Machines_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SmartPac_Machines_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_SmartPac_Machines_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SmartPac_Machines_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_SmartPac_Machines_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_SmartPac_Machines_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_SmartPac_Machines_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Snowplow_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Snowplow_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Snowplow_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Snowplow_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Snowplow_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Snowplow_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Snowplow_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Snowplow_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Snowplow_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Snowplow_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Snowplow_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Snowplow_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Snowplow_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Snowplow_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Snowplow_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Sound_Abatement_Hood_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Sound_Abatement_Hood_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Sound_Abatement_Hood_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Sound_Abatement_Hood_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Sound_Abatement_Hood_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Sound_Abatement_Hood_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Sound_Abatement_Hood_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Sound_Abatement_Hood_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Sound_Abatement_Hood_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Sound_Abatement_Hood_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Sound_Abatement_Hood_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Sound_Abatement_Hood_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Sound_Abatement_Hood_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Sound_Abatement_Hood_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Sound_Abatement_Hood_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Chutes_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Chutes_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Chutes_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Chutes_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Chutes_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Chutes_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Chutes_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Chutes_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Chutes_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Chutes_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Chutes_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Chutes_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Chutes_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Chutes_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Chutes_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Netting_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Netting_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Netting_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Netting_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Netting_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Netting_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Netting_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Netting_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Netting_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Netting_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Netting_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Netting_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Spiral_Netting_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Spiral_Netting_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Spiral_Netting_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Stuff_It_De_Stuff_It_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Stuff_It_De_Stuff_It_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Stuff_It_De_Stuff_It_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Stuff_It_De_Stuff_It_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Stuff_It_De_Stuff_It_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tie_Ins_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Tie_Ins_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tie_Ins_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tie_Ins_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Tie_Ins_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tie_Ins_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tie_Ins_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Tie_Ins_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tie_Ins_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tie_Ins_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Tie_Ins_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tie_Ins_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tie_Ins_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Tie_Ins_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tie_Ins_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Plows_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Plows_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Plows_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Plows_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Plows_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Plows_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Plows_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Plows_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Plows_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Plows_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Plows_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Plows_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Plows_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Plows_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Plows_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Shelves_per_linear_ft_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Shelves_per_linear_ft_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Shelves_per_linear_ft_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Tote_Shelves_per_linear_ft_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_UPS_90_Curve_Chute_Air]() As Double
      Get
      Return Properties("Hrs_Misc_UPS_90_Curve_Chute_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_UPS_90_Curve_Chute_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_UPS_90_Curve_Chute_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_UPS_90_Curve_Chute_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_UPS_90_Curve_Chute_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_UPS_90_Curve_Chute_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_UPS_90_Curve_Chute_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_UPS_90_Curve_Chute_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_UPS_90_Curve_Chute_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_UPS_90_Curve_Chute_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_UPS_90_Curve_Chute_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_UPS_90_Curve_Chute_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_UPS_90_Curve_Chute_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_UPS_90_Curve_Chute_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_Tote_Stacker_Air]() As Double
      Get
      Return Properties("Hrs_Misc_USS_Tote_Stacker_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_Tote_Stacker_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_Tote_Stacker_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_USS_Tote_Stacker_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_Tote_Stacker_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_Tote_Stacker_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_USS_Tote_Stacker_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_Tote_Stacker_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_Tote_Stacker_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_USS_Tote_Stacker_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_Tote_Stacker_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_Tote_Stacker_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_USS_Tote_Stacker_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_Tote_Stacker_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_VICS_Air]() As Double
      Get
      Return Properties("Hrs_Misc_USS_VICS_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_VICS_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_VICS_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_USS_VICS_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_VICS_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_VICS_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_USS_VICS_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_VICS_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_VICS_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_USS_VICS_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_VICS_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_USS_VICS_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_USS_VICS_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_USS_VICS_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Vertical_Lifts_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Vertical_Lifts_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Vertical_Lifts_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Vertical_Lifts_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Vertical_Lifts_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Vertical_Lifts_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Vertical_Lifts_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Vertical_Lifts_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Vertical_Lifts_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Vertical_Lifts_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Vertical_Lifts_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Vertical_Lifts_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Vertical_Lifts_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Vertical_Lifts_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Vertical_Lifts_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Work_Stations_Air]() As Double
      Get
      Return Properties("Hrs_Misc_Work_Stations_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Work_Stations_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Work_Stations_Dollars]() As Double
      Get
      Return Properties("Hrs_Misc_Work_Stations_Dollars").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Work_Stations_Dollars").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Work_Stations_Hours]() As Double
      Get
      Return Properties("Hrs_Misc_Work_Stations_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Work_Stations_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Work_Stations_Metric]() As Double
      Get
      Return Properties("Hrs_Misc_Work_Stations_Metric").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Work_Stations_Metric").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Hrs_Misc_Work_Stations_Qty]() As Double
      Get
      Return Properties("Hrs_Misc_Work_Stations_Qty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Hrs_Misc_Work_Stations_Qty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Linear_Footage_of_Conveyor]() As Double
      Get
      Return Properties("Linear_Footage_of_Conveyor").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Linear_Footage_of_Conveyor").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Linear_Footage_of_Conveyor_Misc_Hours]() As Double
      Get
      Return Properties("Linear_Footage_of_Conveyor_Misc_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Linear_Footage_of_Conveyor_Misc_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs]() As Double
      Get
      Return Properties("Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Linear_Footage_of_Conveyor_Total_Conveyor_Hrs]() As Double
      Get
      Return Properties("Linear_Footage_of_Conveyor_Total_Conveyor_Hrs").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Linear_Footage_of_Conveyor_Total_Conveyor_Hrs").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Linear_Footage_of_Conveyor_With_Buyouts]() As Double
      Get
      Return Properties("Linear_Footage_of_Conveyor_With_Buyouts").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Linear_Footage_of_Conveyor_With_Buyouts").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MechInstallHours]() As Double
      Get
      Return Properties("MechInstallHours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MechInstallHours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MechInstallHoursQ]() As Long
      Get
      Return Properties("MechInstallHoursQ").Value
      End Get
      Set(ByVal Value As Long)
      Properties("MechInstallHoursQ").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_90deg_platform_for_PBC_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_90deg_platform_for_PBC_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_90deg_platform_for_PBC_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_90deg_platform_for_PBC_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_90deg_platform_for_PBC_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_90deg_platform_for_PBC_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_90deg_platform_for_PBC_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_90deg_platform_for_PBC_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_90deg_platform_for_PBC_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Curve_Chute_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Curve_Chute_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Curve_Chute_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Curve_Chute_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Curve_Chute_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Curve_Chute_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Curve_Chute_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Curve_Chute_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Curve_Chute_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Dual_crows_nest_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Dual_crows_nest_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Dual_crows_nest_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Dual_crows_nest_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Dual_crows_nest_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Dual_crows_nest_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Dual_crows_nest_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Dual_crows_nest_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Dual_crows_nest_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_FT_TOTAL_FOR_AREA]() As Double
      Get
      Return Properties("Misc_Parcel_Items_FT_TOTAL_FOR_AREA").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_FT_TOTAL_FOR_AREA").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_HRS_TOTAL_FOR_AREA]() As Double
      Get
      Return Properties("Misc_Parcel_Items_HRS_TOTAL_FOR_AREA").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_HRS_TOTAL_FOR_AREA").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_PBC_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_PBC_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_PBC_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_PBC_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_PBC_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_PBC_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_PBC_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_PBC_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_PBC_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Single_crows_nest_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Single_crows_nest_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Single_crows_nest_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Single_crows_nest_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Single_crows_nest_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Single_crows_nest_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Single_crows_nest_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Single_crows_nest_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Single_crows_nest_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Singulator_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Singulator_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Singulator_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Singulator_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Singulator_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Singulator_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Singulator_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Singulator_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Singulator_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Spiral_Chute_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Spiral_Chute_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Spiral_Chute_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Spiral_Chute_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Spiral_Chute_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Spiral_Chute_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Spiral_Chute_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Spiral_Chute_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Spiral_Chute_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Straight_Chute_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Straight_Chute_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Straight_Chute_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Straight_Chute_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Straight_Chute_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Straight_Chute_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Straight_Chute_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Straight_Chute_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Straight_Chute_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Total_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Total_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Total_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Transition_plates_HRS]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Transition_plates_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Transition_plates_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Transition_plates_Metrics]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Transition_plates_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Transition_plates_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Misc_Parcel_Items_Transition_plates_QTY]() As Double
      Get
      Return Properties("Misc_Parcel_Items_Transition_plates_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Misc_Parcel_Items_Transition_plates_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_Air_Devices]() As Double
      Get
      Return Properties("Plt_Cnvyr_Air_Devices").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_Air_Devices").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_Anchors]() As Double
      Get
      Return Properties("Plt_Cnvyr_Anchors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_Anchors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Deflector_Plows_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Deflector_Plows_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Deflector_Plows_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Deflector_Plows_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Deflector_Plows_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Deflector_Plows_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Deflector_Plows_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Footage_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Footage_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Footage_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Footage_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Footage_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Footage_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Footage_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Gates_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Gates_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Gates_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Gates_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Fencing_Gates_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Fencing_Gates_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Fencing_Gates_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Gravity_Spurs_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Gravity_Spurs_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Gravity_Spurs_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Gravity_Spurs_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Gravity_Spurs_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_large_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_large_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_large_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_large_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_large_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_large_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_large_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_large_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_large_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_large_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_large_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_large_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_normal_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_normal_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_normal_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_normal_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_normal_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_normal_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Lift_normal_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Lift_normal_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Lift_normal_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Light_Curtain_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Light_Curtain_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Light_Curtain_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Light_Curtain_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Light_Curtain_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Light_Curtain_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Light_Curtain_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Light_Curtain_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Light_Curtain_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pallet_Gates_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pallet_Gates_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pallet_Gates_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pallet_Gates_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pallet_Gates_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pallet_Gates_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pallet_Gates_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Puller_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Puller_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Puller_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Puller_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Puller_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Puller_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Puller_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Puller_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Puller_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Puller_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Puller_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Puller_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pusher_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pusher_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pusher_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pusher_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pusher_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pusher_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pusher_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pusher_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pusher_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Pusher_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Pusher_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Pusher_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Robot_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Robot_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Robot_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Robot_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Robot_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Robot_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Robot_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Robot_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Robot_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Robot_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Robot_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Robot_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Sizing_Station_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Sizing_Station_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Sizing_Station_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Sizing_Station_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Sizing_Station_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Sizing_Station_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Sizing_Station_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Sizing_Station_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Sizing_Station_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Supports_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Supports_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Supports_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Supports_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Supports_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Supports_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Supports_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Supports_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Supports_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Car_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Car_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Car_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Car_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Car_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Car_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Car_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Car_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Car_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Transfer_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Transfer_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Transfer_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Turntable_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Turntable_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Turntable_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Turntable_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Turntable_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Turntable_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Turntable_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Turntable_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Turntable_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_MISC_Turntable_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_MISC_Turntable_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_MISC_Turntable_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_Chain_Install_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_T5_Chain_Chain_Install_QTY]() As Double
      Get
      Return Properties("Plt_Cnvyr_T5_Chain_Chain_Install_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_T5_Chain_Chain_Install_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_Total_Air]() As Double
      Get
      Return Properties("Plt_Cnvyr_Total_Air").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_Total_Air").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_Total_Footage]() As Double
      Get
      Return Properties("Plt_Cnvyr_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_Total_Hours]() As Double
      Get
      Return Properties("Plt_Cnvyr_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Plt_Cnvyr_Unloading]() As Double
      Get
      Return Properties("Plt_Cnvyr_Unloading").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Plt_Cnvyr_Unloading").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Bottom_Guards_HRS]() As Double
      Get
      Return Properties("Singulated_Flow_Bottom_Guards_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Bottom_Guards_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Bottom_Guards_Metrics]() As Double
      Get
      Return Properties("Singulated_Flow_Bottom_Guards_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Bottom_Guards_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Bottom_Guards_QTY_FT]() As Double
      Get
      Return Properties("Singulated_Flow_Bottom_Guards_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Bottom_Guards_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Hand_rail_and_cable_HRS]() As Double
      Get
      Return Properties("Singulated_Flow_Hand_rail_and_cable_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Hand_rail_and_cable_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Hand_rail_and_cable_Metrics]() As Double
      Get
      Return Properties("Singulated_Flow_Hand_rail_and_cable_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Hand_rail_and_cable_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Hand_rail_and_cable_QTY_FT]() As Double
      Get
      Return Properties("Singulated_Flow_Hand_rail_and_cable_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Hand_rail_and_cable_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Mount_Motors_Drives_HRS]() As Double
      Get
      Return Properties("Singulated_Flow_Mount_Motors_Drives_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Mount_Motors_Drives_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Mount_Motors_Drives_Metrics]() As Double
      Get
      Return Properties("Singulated_Flow_Mount_Motors_Drives_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Mount_Motors_Drives_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Mount_Motors_Drives_QTY_FT]() As Double
      Get
      Return Properties("Singulated_Flow_Mount_Motors_Drives_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Mount_Motors_Drives_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS]() As Double
      Get
      Return Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics]() As Double
      Get
      Return Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT]() As Double
      Get
      Return Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Singulated_Flow_Total_HRS]() As Double
      Get
      Return Properties("Singulated_Flow_Total_HRS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Singulated_Flow_Total_HRS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Bar_Grating_Hours]() As Double
      Get
      Return Properties("Struct_Catwalk_Bar_Grating_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Bar_Grating_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Bar_Grating_Total_Ft_SqFt]() As Double
      Get
      Return Properties("Struct_Catwalk_Bar_Grating_Total_Ft_SqFt").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Bar_Grating_Total_Ft_SqFt").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_CATWALK_Hours]() As Double
      Get
      Return Properties("Struct_Catwalk_CATWALK_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_CATWALK_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_CATWALK_Total_Ft_SqFt]() As Double
      Get
      Return Properties("Struct_Catwalk_CATWALK_Total_Ft_SqFt").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_CATWALK_Total_Ft_SqFt").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_GRID_STRUCTURE_Hours]() As Double
      Get
      Return Properties("Struct_Catwalk_GRID_STRUCTURE_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_GRID_STRUCTURE_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt]() As Double
      Get
      Return Properties("Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Resin_Deck_Hours]() As Double
      Get
      Return Properties("Struct_Catwalk_Resin_Deck_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Resin_Deck_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Resin_Deck_Total_Ft_SqFt]() As Double
      Get
      Return Properties("Struct_Catwalk_Resin_Deck_Total_Ft_SqFt").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Resin_Deck_Total_Ft_SqFt").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Ship_Ladders_Hours]() As Double
      Get
      Return Properties("Struct_Catwalk_Ship_Ladders_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Ship_Ladders_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt]() As Double
      Get
      Return Properties("Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Stair_Landing_Hours]() As Double
      Get
      Return Properties("Struct_Catwalk_Stair_Landing_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Stair_Landing_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Struct_Catwalk_Stair_Landing_Total_Ft_SqFt]() As Double
      Get
      Return Properties("Struct_Catwalk_Stair_Landing_Total_Ft_SqFt").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Struct_Catwalk_Stair_Landing_Total_Ft_SqFt").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Total_Subsystem_Hours]() As Double
      Get
      Return Properties("Total_Subsystem_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Total_Subsystem_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Bed_Footage]() As Double
      Get
      Return Properties("ZFA_Retrofit_Bed_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Bed_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Intelliq]() As Boolean
      Get
      Return Properties("ZFA_Retrofit_Intelliq").Value
      End Get
      Set(ByVal Value As Boolean)
      Properties("ZFA_Retrofit_Intelliq").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Remove_Guard_Rail_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Remove_Guard_Rail_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Remove_Guard_Rail_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Remove_Guard_Rail_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Remove_Guard_Rail_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Remove_Guard_Rail_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Remove_Rollers_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Remove_Rollers_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Remove_Rollers_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Remove_Rollers_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Remove_Rollers_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Remove_Rollers_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Guard_Railing_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Guard_Railing_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Guard_Railing_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Guard_Railing_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Guard_Railing_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Guard_Railing_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Modules_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Modules_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Modules_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Modules_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Modules_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Modules_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Puck_Sets_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Puck_Sets_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Puck_Sets_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Puck_Sets_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Puck_Sets_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Puck_Sets_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Rollers]() As Boolean
      Get
      Return Properties("ZFA_Retrofit_Replace_Rollers").Value
      End Get
      Set(ByVal Value As Boolean)
      Properties("ZFA_Retrofit_Replace_Rollers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Rollers_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Rollers_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Rollers_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Replace_Rollers_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Replace_Rollers_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Replace_Rollers_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Roller_Centers]() As Double
      Get
      Return Properties("ZFA_Retrofit_Roller_Centers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Roller_Centers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Roller_Count]() As Double
      Get
      Return Properties("ZFA_Retrofit_Roller_Count").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Roller_Count").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Run_Air_Tubing_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Run_Air_Tubing_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Run_Air_Tubing_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Run_Air_Tubing_QTY]() As Double
      Get
      Return Properties("ZFA_Retrofit_Run_Air_Tubing_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Run_Air_Tubing_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Total_hours_Hours]() As Double
      Get
      Return Properties("ZFA_Retrofit_Total_hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Total_hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Total_hours_per_12_ft_Bed]() As Double
      Get
      Return Properties("ZFA_Retrofit_Total_hours_per_12_ft_Bed").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Total_hours_per_12_ft_Bed").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [ZFA_Retrofit_Zone_Length]() As Double
      Get
      Return Properties("ZFA_Retrofit_Zone_Length").Value
      End Get
      Set(ByVal Value As Double)
      Properties("ZFA_Retrofit_Zone_Length").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [PartNumber]() As String
      Get
      Return Properties("PartNumber").Value
      End Get
      Set(ByVal Value As String)
      Properties("PartNumber").CalculatedValue = Value
      End Set
      End Property
    
    #End Region

    #Region " Initialization "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize() Implements RuleStream.IRsPartFormulas.Initialize
    Dim oSpec As Rulestream.Kernel.Spec = Nothing
    Dim oConnection as Rulestream.Kernel.Connection = Nothing
    Dim oSubpart as Rulestream.Kernel.Subpart = Nothing
    dim oMasterDoc as Rulestream.Kernel.MasterDoc = Nothing
    InitPart("CAE_Mech_Install_CP_Comps", <a><![CDATA[CAE_Mech_Install_CP_Comps]]></a>.Value, 400, "IGSEST",  "N", "N", False, False, "In Development", "", "", "", "", "",  "GLOBAL\H602502", "07/01/2025 18:39:46")
    AddProperty("7116", "a_Sample_Cnvy_Hrs_MDR_Bed_Size", <a><![CDATA[a_Sample_Cnvy_Hrs_MDR_Bed_Size]]></a>.Value, "Retrieves hours from a cached set of Component DB (Conveyor Hours) Table.", "Double","","General","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7141", "bool_Include_In_Subsystem", <a><![CDATA[bool_Include_In_Subsystem]]></a>.Value, "", "Boolean","","General","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7161", "DisplayName", <a><![CDATA[Display Name]]></a>.Value, "", "String","","General","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7117", "Add_Hours_Dollars_Anchors_Dollars", <a><![CDATA[Add_Hours_Dollars_Anchors_Dollars]]></a>.Value, "Mech Install^'Hours'!P298", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7118", "Add_Hours_Dollars_Anchors_Hours", <a><![CDATA[Add_Hours_Dollars_Anchors_Hours]]></a>.Value, "Mech Install^'Hours'!R298", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7119", "Add_Hours_Dollars_Anchors_Qty", <a><![CDATA[Add_Hours_Dollars_Anchors_Qty]]></a>.Value, "Mech Install^'Hours'!Q298", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7120", "Add_Hours_Dollars_Subsystem_Efficiency_Dollars", <a><![CDATA[Add_Hours_Dollars_Subsystem_Efficiency_Dollars]]></a>.Value, "Mech Install^'Hours'!P297", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7121", "Add_Hours_Dollars_Subsystem_Efficiency_Hours", <a><![CDATA[Add_Hours_Dollars_Subsystem_Efficiency_Hours]]></a>.Value, "Mech Install^'Hours'!R297", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7122", "Add_Hours_Dollars_Subsystem_Efficiency_Qty", <a><![CDATA[Add_Hours_Dollars_Subsystem_Efficiency_Qty]]></a>.Value, "Mech Install^'Hours'!Q297", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7123", "Add_Hours_Dollars_Total_Dollars", <a><![CDATA[Add_Hours_Dollars_Total_Dollars]]></a>.Value, "Mech Install^'Hours'!P299", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7124", "Add_Hours_Dollars_Total_Hours", <a><![CDATA[Add_Hours_Dollars_Total_Hours]]></a>.Value, "Mech Install^'Hours'!R299", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7125", "Add_Hours_Dollars_Total_Qty", <a><![CDATA[Add_Hours_Dollars_Total_Qty]]></a>.Value, "Mech Install^'Hours'!Q299", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7126", "Air_Piping_112_inches_pipe", <a><![CDATA[Air_Piping_1 1/2_inches_pipe]]></a>.Value, "Mech Install^'Hours'!O216", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7127", "Air_Piping_12_inches_pipe", <a><![CDATA[Air_Piping_1/2_inches_pipe]]></a>.Value, "Mech Install^'Hours'!O218", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7128", "Air_Piping_212_inches_pipe", <a><![CDATA[Air_Piping_2 1/2_inches_ pipe]]></a>.Value, "Mech Install^'Hours'!O215", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7129", "Air_Piping_3pipe", <a><![CDATA[Air_Piping_3_inches_pipe]]></a>.Value, "Mech Install^'Hours'!O214", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7130", "Air_Piping_78_inches_pipe", <a><![CDATA[Air_Piping_7/8_inches_pipe]]></a>.Value, "Mech Install^'Hours'!O217", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7131", "Air_Piping_AC", <a><![CDATA[Air_Piping_A/C]]></a>.Value, "Mech Install^'Hours'!O222", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7132", "Air_Piping_CHAINLUB", <a><![CDATA[Air_Piping_CHAIN/LUB]]></a>.Value, "Mech Install^'Hours'!O220", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7133", "Air_Piping_Dryer", <a><![CDATA[Air_Piping_Dryer]]></a>.Value, "Mech Install^'Hours'!O224", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7134", "Air_Piping_FILTERREG", <a><![CDATA[Air_Piping_FILTER/REG]]></a>.Value, "Mech Install^'Hours'!O221", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7135", "Air_Piping_RedAC", <a><![CDATA[Air_Piping_Red A/C]]></a>.Value, "Mech Install^'Hours'!O223", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7136", "Air_Piping_SUBTOTAL", <a><![CDATA[Air_Piping_SUBTOTAL]]></a>.Value, "Mech Install^'Hours'!O225", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7137", "Air_Piping_SUBTOTAL_Hours", <a><![CDATA[Air_Piping_SUBTOTAL_Hours]]></a>.Value, "Mech Install^'Hours'!S225", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7138", "Air_Piping_SUBTOTAL_Units", <a><![CDATA[Air_Piping_SUBTOTAL_Units]]></a>.Value, "Mech Install^'Hours'!Q225", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7139", "Air_Piping_Total_Hours", <a><![CDATA[Air_Piping_Total_Hours]]></a>.Value, "Mech Install^'Hours'!O226", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7140", "Air_Piping_Tubing", <a><![CDATA[Air_Piping_Tubing]]></a>.Value, "Mech Install^'Hours'!O219", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7142", "Bulk_Flow_Bottom_Guards_HRS", <a><![CDATA[Bulk_Flow_Bottom_Guards_HRS]]></a>.Value, "Mech Install^'Hours'!R316", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7143", "Bulk_Flow_Bottom_Guards_Metrics", <a><![CDATA[Bulk_Flow_Bottom_Guards_Metrics]]></a>.Value, "Mech Install^'Hours'!Q316", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7144", "Bulk_Flow_Bottom_Guards_QTY_FT", <a><![CDATA[Bulk_Flow_Bottom_Guards_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P316", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7145", "Bulk_Flow_BULK_FLOW_FOOTAGE_HRS", <a><![CDATA[Bulk_Flow_BULK_FLOW_FOOTAGE_HRS]]></a>.Value, "Mech Install^'Hours'!R313", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7146", "Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics", <a><![CDATA[Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics]]></a>.Value, "Mech Install^'Hours'!Q313", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7147", "Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT", <a><![CDATA[Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P313", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7148", "Bulk_Flow_Hand_rail_and_cable_HRS", <a><![CDATA[Bulk_Flow_Hand_rail_and_cable_HRS]]></a>.Value, "Mech Install^'Hours'!R314", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7149", "Bulk_Flow_Hand_rail_and_cable_Metrics", <a><![CDATA[Bulk_Flow_Hand_rail_and_cable_Metrics]]></a>.Value, "Mech Install^'Hours'!Q314", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7150", "Bulk_Flow_Hand_rail_and_cable_QTY_FT", <a><![CDATA[Bulk_Flow_Hand_rail_and_cable_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P314", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7151", "Bulk_Flow_Mount_Motors_Drives_HRS", <a><![CDATA[Bulk_Flow_Mount_Motors_Drives_HRS]]></a>.Value, "Mech Install^'Hours'!R315", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7152", "Bulk_Flow_Mount_Motors_Drives_Metrics", <a><![CDATA[Bulk_Flow_Mount_Motors_Drives_Metrics]]></a>.Value, "Mech Install^'Hours'!Q315", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7153", "Bulk_Flow_Mount_Motors_Drives_QTY_FT", <a><![CDATA[Bulk_Flow_Mount_Motors_Drives_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P315", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7154", "Bulk_Flow_Total_HRS", <a><![CDATA[Bulk_Flow_Total_HRS]]></a>.Value, "Mech Install^'Hours'!R319", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7155", "Cost_of_Air_per_Linear_Foot", <a><![CDATA[Cost_of_Air_per_Linear_Foot]]></a>.Value, "Mech Install^'Hours'!U214", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7156", "DATA_CPNumber", <a><![CDATA[DATA_CP Number]]></a>.Value, "", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7157", "DATA_Raw", <a><![CDATA[DATA_Raw]]></a>.Value, "", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7158", "Demo_Removed_existing_Ft", <a><![CDATA[Demo_Removed_existing_Ft]]></a>.Value, "Mech Install^'Hours'!Q309", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7159", "Demo_Removed_existing_Hours", <a><![CDATA[Demo_Removed_existing_Hours]]></a>.Value, "Mech Install^'Hours'!R309", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7160", "Demo_Removed_existing_Scrap_1_or_Keep_2", <a><![CDATA[Demo_Removed_existing_Scrap_1_or_Keep_2]]></a>.Value, "Mech Install^'Hours'!P309", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7162", "Extra_Filter_Regulators", <a><![CDATA[Extra_Filter_Regulators]]></a>.Value, "Mech Install^'Hours'!T221", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7163", "HCAD_BeltBrakeMeter_Air_Devices", <a><![CDATA[HCAD_Belt Brake Meter_Air_Devices]]></a>.Value, "Mech Install^'Hours'!S31", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7164", "HCAD_BeltBrakeMeter_Beds_Avg_Height", <a><![CDATA[HCAD_Belt Brake Meter_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T32", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7165", "HCAD_BeltBrakeMeter_Beds_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P32", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7166", "HCAD_BeltBrakeMeter_Beds_Units", <a><![CDATA[HCAD_Belt Brake Meter_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q32", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7167", "HCAD_BeltBrakeMeter_Belting_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P35", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7168", "HCAD_BeltBrakeMeter_Belting_Units", <a><![CDATA[HCAD_Belt Brake Meter_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q35", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7169", "HCAD_BeltBrakeMeter_Layout_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P37", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7170", "HCAD_BeltBrakeMeter_Layout_Units", <a><![CDATA[HCAD_Belt Brake Meter_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q37", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7171", "HCAD_BeltBrakeMeter_RunIn_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Run-In_Hours]]></a>.Value, "P38", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7172", "HCAD_BeltBrakeMeter_RunIn_Units", <a><![CDATA[HCAD_Belt Brake Meter_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q38", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7173", "HCAD_BeltBrakeMeter_SideGuide_Footage", <a><![CDATA[HCAD_Belt Brake Meter_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O33", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7174", "HCAD_BeltBrakeMeter_SideGuide_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P33", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7175", "HCAD_BeltBrakeMeter_SideGuide_Units", <a><![CDATA[HCAD_Belt Brake Meter_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q33", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7176", "HCAD_BeltBrakeMeter_Supports_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P34", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7177", "HCAD_BeltBrakeMeter_Supports_Units", <a><![CDATA[HCAD_Belt Brake Meter_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q34", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7178", "HCAD_BeltBrakeMeter_Total_Footage", <a><![CDATA[HCAD_Belt Brake Meter_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O31", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7179", "HCAD_BeltBrakeMeter_Total_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P39", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7180", "HCAD_BeltBrakeMeter_Total_Units", <a><![CDATA[HCAD_Belt Brake Meter_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q31", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7181", "HCAD_BeltBrakeMeter_Unloading_Hours", <a><![CDATA[HCAD_Belt Brake Meter_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P36", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7182", "HCAD_BeltBrakeMeter_Unloading_Units", <a><![CDATA[HCAD_Belt Brake Meter_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q36", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7183", "HCAD_BeltonRoller_Beds_Avg_Height", <a><![CDATA[HCAD_Belt on Roller_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T23", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7184", "HCAD_BeltonRoller_Beds_Hours", <a><![CDATA[HCAD_Belt on Roller_Beds_Hours]]></a>.Value, "Mech Install^Hours!P23", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7185", "HCAD_BeltonRoller_Beds_Units", <a><![CDATA[HCAD_Belt on Roller_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q23", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7186", "HCAD_BeltonRoller_Belting_Hours", <a><![CDATA[HCAD_Belt on Roller_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P26", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7187", "HCAD_BeltonRoller_Belting_Units", <a><![CDATA[HCAD_Belt on Roller_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q26", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7188", "HCAD_BeltonRoller_Layout_Hours", <a><![CDATA[HCAD_Belt on Roller_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P28", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7189", "HCAD_BeltonRoller_Layout_Units", <a><![CDATA[HCAD_Belt on Roller_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q28", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7190", "HCAD_BeltonRoller_RunIn_Hours", <a><![CDATA[HCAD_Belt on Roller_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P29", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7191", "HCAD_BeltonRoller_RunIn_Units", <a><![CDATA[HCAD_Belt on Roller_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q29", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7192", "HCAD_BeltonRoller_SideGuide_Footage", <a><![CDATA[HCAD_Belt on Roller_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O24", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7193", "HCAD_BeltonRoller_SideGuide_Hours", <a><![CDATA[HCAD_Belt on Roller_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P24", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7194", "HCAD_BeltonRoller_SideGuide_Units", <a><![CDATA[HCAD_Belt on Roller_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q24", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7195", "HCAD_BeltonRoller_Supports_Hours", <a><![CDATA[HCAD_Belt on Roller_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P25", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7196", "HCAD_BeltonRoller_Supports_Units", <a><![CDATA[HCAD_Belt on Roller_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q25", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7197", "HCAD_BeltonRoller_Total_Footage", <a><![CDATA[HCAD_Belt on Roller_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7198", "HCAD_BeltonRoller_Total_Hours", <a><![CDATA[HCAD_Belt on Roller_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P30", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7199", "HCAD_BeltonRoller_Total_Units", <a><![CDATA[HCAD_Belt on Roller_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q22", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7200", "HCAD_BeltonRoller_Unloading_Hours", <a><![CDATA[HCAD_Belt on Roller_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P27", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7201", "HCAD_BeltonRoller_Unloading_Units", <a><![CDATA[HCAD_Belt on Roller_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q27", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7202", "HCAD_BeltonSlider_Beds_Avg_Height", <a><![CDATA[HCAD_Belt on Slider_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7203", "HCAD_BeltonSlider_Beds_Hours", <a><![CDATA[HCAD_Belt on Slider_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7204", "HCAD_BeltonSlider_Beds_Units", <a><![CDATA[HCAD_Belt on Slider_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q14", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7205", "HCAD_BeltonSlider_Belting_Hours", <a><![CDATA[HCAD_Belt on Slider_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7206", "HCAD_BeltonSlider_Belting_Units", <a><![CDATA[HCAD_Belt on Slider_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q17", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7207", "HCAD_BeltonSlider_Layout_Hours", <a><![CDATA[HCAD_Belt on Slider_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7208", "HCAD_BeltonSlider_Layout_Units", <a><![CDATA[HCAD_Belt on Slider_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q19", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7209", "HCAD_BeltonSlider_RunIn_Hours", <a><![CDATA[HCAD_Belt on Slider_Run-In_Hours]]></a>.Value, "Mech Install^Hours!P20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7210", "HCAD_BeltonSlider_RunIn_Units", <a><![CDATA[HCAD_Belt on Slider_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q20", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7211", "HCAD_BeltonSlider_SideGuide_Footage", <a><![CDATA[HCAD_Belt on Slider_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7212", "HCAD_BeltonSlider_SideGuide_Hours", <a><![CDATA[HCAD_Belt on Slider_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7213", "HCAD_BeltonSlider_SideGuide_Units", <a><![CDATA[HCAD_Belt on Slider_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q15", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7214", "HCAD_BeltonSlider_Supports_Hours", <a><![CDATA[HCAD_Belt on Slider_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7215", "HCAD_BeltonSlider_Supports_Units", <a><![CDATA[HCAD_Belt on Slider_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q16", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7216", "HCAD_BeltonSlider_Total_Footage", <a><![CDATA[HCAD_Belt on Slider_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7217", "HCAD_BeltonSlider_Total_Hours", <a><![CDATA[HCAD_Belt on Slider_Total_Hours]]></a>.Value, "Mech Install^Hours!P21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7218", "HCAD_BeltonSlider_Total_Units", <a><![CDATA[HCAD_Belt on Slider_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q13", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7219", "HCAD_BeltonSlider_Unloading_Hours", <a><![CDATA[HCAD_Belt on Slider_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7220", "HCAD_BeltonSlider_Unloading_Units", <a><![CDATA[HCAD_Belt on Slider_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q18", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7221", "HCAD_BeltStaging_Beds_Avg_Height", <a><![CDATA[HCAD_Belt Staging_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7222", "HCAD_BeltStaging_Beds_Hours", <a><![CDATA[HCAD_Belt Staging_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7223", "HCAD_BeltStaging_Beds_Units", <a><![CDATA[HCAD_Belt Staging_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q50", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7224", "HCAD_BeltStaging_Belting_Hours", <a><![CDATA[HCAD_Belt Staging_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P53", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7225", "HCAD_BeltStaging_Belting_Units", <a><![CDATA[HCAD_Belt Staging_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q53", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7226", "HCAD_BeltStaging_Layout_Hours", <a><![CDATA[HCAD_Belt Staging_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P55", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7227", "HCAD_BeltStaging_Layout_Units", <a><![CDATA[HCAD_Belt Staging_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q55", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7228", "HCAD_BeltStaging_RunIn_Hours", <a><![CDATA[HCAD_Belt Staging_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P56", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7229", "HCAD_BeltStaging_RunIn_Units", <a><![CDATA[HCAD_Belt Staging_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q56", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7230", "HCAD_BeltStaging_SideGuide_Footage", <a><![CDATA[HCAD_Belt Staging_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7231", "HCAD_BeltStaging_SideGuide_Hours", <a><![CDATA[HCAD_Belt Staging_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7232", "HCAD_BeltStaging_SideGuide_Units", <a><![CDATA[HCAD_Belt Staging_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q51", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7233", "HCAD_BeltStaging_Supports_Hours", <a><![CDATA[HCAD_Belt Staging_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7234", "HCAD_BeltStaging_Supports_Units", <a><![CDATA[HCAD_Belt Staging_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q52", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7235", "HCAD_BeltStaging_Total_Footage", <a><![CDATA[HCAD_Belt Staging_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O49", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7236", "HCAD_BeltStaging_Total_Hours", <a><![CDATA[HCAD_Belt Staging_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P57", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7237", "HCAD_BeltStaging_Total_Units", <a><![CDATA[HCAD_Belt Staging_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q49", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7238", "HCAD_BeltStaging_Unloading_Hours", <a><![CDATA[HCAD_Belt Staging_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P54", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7239", "HCAD_BeltStaging_Unloading_Units", <a><![CDATA[HCAD_Belt Staging_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q53", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7240", "HCAD_Buyout_Footage", <a><![CDATA[HCAD_Buyout_Footage]]></a>.Value, "Mech Install^'Hours'!O197", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7241", "HCAD_Buyout_Total_Footage", <a><![CDATA[HCAD_Buyout_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O197", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7242", "HCAD_Chutes_Beds_Avg_Height", <a><![CDATA[HCAD_Chutes_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T144", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7243", "HCAD_Chutes_Beds_Hours", <a><![CDATA[HCAD_Chutes_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P144", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7244", "HCAD_Chutes_Beds_Units", <a><![CDATA[HCAD_Chutes_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q144", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7245", "HCAD_Chutes_Belting_Hours", <a><![CDATA[HCAD_Chutes_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P147", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7246", "HCAD_Chutes_Belting_Units", <a><![CDATA[HCAD_Chutes_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q147", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7247", "HCAD_Chutes_Layout_Hours", <a><![CDATA[HCAD_Chutes_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P149", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7248", "HCAD_Chutes_Layout_Units", <a><![CDATA[HCAD_Chutes_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q149", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7249", "HCAD_Chutes_RunIn_Hours", <a><![CDATA[HCAD_Chutes_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P150", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7250", "HCAD_Chutes_RunIn_Units", <a><![CDATA[HCAD_Chutes_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q150", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7251", "HCAD_Chutes_SideGuide_Hours", <a><![CDATA[HCAD_Chutes_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P145", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7252", "HCAD_Chutes_SideGuide_Units", <a><![CDATA[HCAD_Chutes_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q145", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:57 PM")
    AddProperty("7253", "HCAD_Chutes_Supports_Hours", <a><![CDATA[HCAD_Chutes_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P146", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7254", "HCAD_Chutes_Supports_Units", <a><![CDATA[HCAD_Chutes_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q146", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7255", "HCAD_Chutes_Total_Footage", <a><![CDATA[HCAD_Chutes_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O143", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7256", "HCAD_Chutes_Total_Hours", <a><![CDATA[HCAD_Chutes_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P151", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7257", "HCAD_Chutes_Total_Units", <a><![CDATA[HCAD_Chutes_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q143", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7258", "HCAD_Chutes_Unloading_Hours", <a><![CDATA[HCAD_Chutes_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P148", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7259", "HCAD_Chutes_Unloading_Units", <a><![CDATA[HCAD_Chutes_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q148", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7260", "HCAD_Crossovers_Belting_Hours", <a><![CDATA[HCAD_Crossovers_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P192", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7261", "HCAD_Crossovers_Belting_Units", <a><![CDATA[HCAD_Crossovers_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q192", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7262", "HCAD_Crossovers_Catwalk_Hours", <a><![CDATA[HCAD_Crossovers_Catwalk_Hours]]></a>.Value, "Mech Install^'Hours'!P189", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7263", "HCAD_Crossovers_Catwalk_Units", <a><![CDATA[HCAD_Crossovers_Catwalk_Units]]></a>.Value, "Mech Install^'Hours'!Q189", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7264", "HCAD_Crossovers_Layout_Hours", <a><![CDATA[HCAD_Crossovers_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P194", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7265", "HCAD_Crossovers_Layout_Units", <a><![CDATA[HCAD_Crossovers_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q194", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7266", "HCAD_Crossovers_RunIn_Hours", <a><![CDATA[HCAD_Crossovers_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P195", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7267", "HCAD_Crossovers_SideGuide_Hours", <a><![CDATA[HCAD_Crossovers_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P190", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7268", "HCAD_Crossovers_SideGuide_Units", <a><![CDATA[HCAD_Crossovers_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q190", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7269", "HCAD_Crossovers_Supports_Hours", <a><![CDATA[HCAD_Crossovers_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P191", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7270", "HCAD_Crossovers_Supports_Units", <a><![CDATA[HCAD_Crossovers_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q191", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7271", "HCAD_Crossovers_Total_Hours", <a><![CDATA[HCAD_Crossovers_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P196", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7272", "HCAD_Crossovers_Total_Units", <a><![CDATA[HCAD_Crossovers_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q188", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7273", "HCAD_Crossovers_Unloading_Hours", <a><![CDATA[HCAD_Crossovers_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P193", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7274", "HCAD_Crossovers_Unloading_Units", <a><![CDATA[HCAD_Crossovers_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q193", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7275", "HCAD_ECCTrashBelt_Beds_Avg_Height", <a><![CDATA[HCAD_ECC Trash Belt_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T41", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7276", "HCAD_ECCTrashBelt_Beds_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P41", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7277", "HCAD_ECCTrashBelt_Beds_Units", <a><![CDATA[HCAD_ECC Trash Belt_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q41", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7278", "HCAD_ECCTrashBelt_Belting_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7279", "HCAD_ECCTrashBelt_Belting_Units", <a><![CDATA[HCAD_ECC Trash Belt_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q44", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7280", "HCAD_ECCTrashBelt_Layout_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P46", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7281", "HCAD_ECCTrashBelt_Layout_Units", <a><![CDATA[HCAD_ECC Trash Belt_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q46", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7282", "HCAD_ECCTrashBelt_RunIn_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P47", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7283", "HCAD_ECCTrashBelt_RunIn_Units", <a><![CDATA[HCAD_ECC Trash Belt_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q47", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7284", "HCAD_ECCTrashBelt_SideGuide_Footage", <a><![CDATA[HCAD_ECC Trash Belt_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O42", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7285", "HCAD_ECCTrashBelt_SideGuide_Units", <a><![CDATA[HCAD_ECC Trash Belt_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q42", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7286", "HCAD_ECCTrashBelt_Supports_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P43", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7287", "HCAD_ECCTrashBelt_Supports_Units", <a><![CDATA[HCAD_ECC Trash Belt_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q43", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7288", "HCAD_ECCTrashBelt_Total_Footage", <a><![CDATA[HCAD_ECC Trash Belt_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O40", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7289", "HCAD_ECCTrashBelt_Total_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7290", "HCAD_ECCTrashBelt_Total_Units", <a><![CDATA[HCAD_ECC Trash Belt_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q40", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7291", "HCAD_ECCTrashBelt_Unloading_Hours", <a><![CDATA[HCAD_ECC Trash Belt_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P45", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7292", "HCAD_ECCTrashBelt_Unloading_Units", <a><![CDATA[HCAD_ECC Trash Belt_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q45", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7293", "HCAD_FlatBeltCurves_Beds_Avg_Height", <a><![CDATA[HCAD_Flat Belt Curves_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T171", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7294", "HCAD_FlatBeltCurves_Beds_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P171", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7295", "HCAD_FlatBeltCurves_Beds_Units", <a><![CDATA[HCAD_Flat Belt Curves_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q171", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7296", "HCAD_FlatBeltCurves_Belting_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P174", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7297", "HCAD_FlatBeltCurves_Belting_Units", <a><![CDATA[HCAD_Flat Belt Curves_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q174", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7298", "HCAD_FlatBeltCurves_Layout_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P176", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7299", "HCAD_FlatBeltCurves_Layout_Units", <a><![CDATA[HCAD_Flat Belt Curves_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q176", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7300", "HCAD_FlatBeltCurves_RunIn_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P177", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7301", "HCAD_FlatBeltCurves_RunIn_Units", <a><![CDATA[HCAD_Flat Belt Curves_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q177", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7302", "HCAD_FlatBeltCurves_SideGuide_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P172", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7303", "HCAD_FlatBeltCurves_SideGuide_Units", <a><![CDATA[HCAD_Flat Belt Curves_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q172", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7304", "HCAD_FlatBeltCurves_Supports_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P173", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7305", "HCAD_FlatBeltCurves_Supports_Units", <a><![CDATA[HCAD_Flat Belt Curves_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q173", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7306", "HCAD_FlatBeltCurves_Total_Footage", <a><![CDATA[HCAD_Flat Belt Curves_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O170", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7307", "HCAD_FlatBeltCurves_Total_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P178", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7308", "HCAD_FlatBeltCurves_Total_Units", <a><![CDATA[HCAD_Flat Belt Curves_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q170", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7309", "HCAD_FlatBeltCurves_Unloading_Hours", <a><![CDATA[HCAD_Flat Belt Curves_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P175", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7310", "HCAD_FlatBeltCurves_Unloading_Units", <a><![CDATA[HCAD_Flat Belt Curves_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q175", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7311", "HCAD_Gravity_Beds_Avg_Height", <a><![CDATA[HCAD_Gravity_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T5", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7312", "HCAD_Gravity_Beds_Hours", <a><![CDATA[HCAD_Gravity_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!Q5", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7313", "HCAD_Gravity_Beds_Units", <a><![CDATA[HCAD_Gravity_Beds_Units]]></a>.Value, "Mech Install^'Hours'!L3", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7314", "HCAD_Gravity_Belting_Footage", <a><![CDATA[HCAD_Gravity_Belting_Footage]]></a>.Value, "Mech Install^'Hours'!O8", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7315", "HCAD_Gravity_Belting_Hours", <a><![CDATA[HCAD_Gravity_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P8", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7316", "HCAD_Gravity_Belting_Units", <a><![CDATA[HCAD_Gravity_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q8", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7317", "HCAD_Gravity_Layout_Hours", <a><![CDATA[HCAD_Gravity_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7318", "HCAD_Gravity_Layout_Units", <a><![CDATA[HCAD_Gravity_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q10", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7319", "HCAD_Gravity_RunIn_Hours", <a><![CDATA[HCAD_Gravity_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7320", "HCAD_Gravity_RunIn_Units", <a><![CDATA[HCAD_Gravity_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q11", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7321", "HCAD_Gravity_SideGuide_Footage", <a><![CDATA[HCAD_Gravity_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O6", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7322", "HCAD_Gravity_SideGuide_Hours", <a><![CDATA[HCAD_Gravity_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P6", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7323", "HCAD_Gravity_SideGuide_Units", <a><![CDATA[HCAD_Gravity_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q6", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7324", "HCAD_Gravity_Supports_Hours", <a><![CDATA[HCAD_Gravity_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P7", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7325", "HCAD_Gravity_Supports_Units", <a><![CDATA[HCAD_Gravity_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q7", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7326", "HCAD_Gravity_Total_Footage", <a><![CDATA[HCAD_Gravity_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O4", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7327", "HCAD_Gravity_Total_Hours", <a><![CDATA[HCAD_Gravity_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7328", "HCAD_Gravity_Total_Units", <a><![CDATA[HCAD_Gravity_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q4", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7329", "HCAD_Gravity_Unloading_Hours", <a><![CDATA[HCAD_Gravity_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7330", "HCAD_Gravity_Unloading_Units", <a><![CDATA[HCAD_Gravity_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q9", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7331", "HCAD_GravityTrailerLoader_Beds_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P126", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7332", "HCAD_GravityTrailerLoader_Beds_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q126", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7333", "HCAD_GravityTrailerLoader_Belting_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P129", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7334", "HCAD_GravityTrailerLoader_Belting_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q129", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7335", "HCAD_GravityTrailerLoader_Layout_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P131", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7336", "HCAD_GravityTrailerLoader_Layout_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q131", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7337", "HCAD_GravityTrailerLoader_RunIn_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P132", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7338", "HCAD_GravityTrailerLoader_RunIn_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q132", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7339", "HCAD_GravityTrailerLoader_SideGuide_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P127", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7340", "HCAD_GravityTrailerLoader_SideGuide_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q127", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7341", "HCAD_GravityTrailerLoader_Supports_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P128", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7342", "HCAD_GravityTrailerLoader_Supports_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q128", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7343", "HCAD_GravityTrailerLoader_Total_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P133", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7344", "HCAD_GravityTrailerLoader_Total_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q125", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7345", "HCAD_GravityTrailerLoader_Unloading_Hours", <a><![CDATA[HCAD_Gravity Trailer Loader_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!130", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7346", "HCAD_GravityTrailerLoader_Unloading_Units", <a><![CDATA[HCAD_Gravity Trailer Loader_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q130", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7347", "HCAD_Hanger_Seismic_Factor", <a><![CDATA[HCAD_Hanger_Seismic_Factor]]></a>.Value, "Mech Install^'Hours'!Q198", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7348", "HCAD_Hanger_Total_Hours", <a><![CDATA[HCAD_Hanger_Total_Hours]]></a>.Value, "Mech Install^'Hours'!X210", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7349", "HCAD_Hanger_Total_Qty", <a><![CDATA[HCAD_Hanger_Total_Qty]]></a>.Value, "Mech Install^'Hours'!W210", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7350", "HCAD_Hanger_Type_A_Hours", <a><![CDATA[HCAD_Hanger_Type_A_Hours]]></a>.Value, "Mech Install^'Hours'!X198", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7351", "HCAD_Hanger_Type_A_Qty", <a><![CDATA[HCAD_Hanger_Type_A_Qty]]></a>.Value, "Mech Install^'Hours'!W198", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7352", "HCAD_Hanger_Type_B_Hours", <a><![CDATA[HCAD_Hanger_Type_B_Hours]]></a>.Value, "Mech Install^'Hours'!X199", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7353", "HCAD_Hanger_Type_B_Qty", <a><![CDATA[HCAD_Hanger_Type_B_Qty]]></a>.Value, "Mech Install^'Hours'!W199", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7354", "HCAD_Hanger_Type_C_Hours", <a><![CDATA[HCAD_Hanger_Type_C_Hours]]></a>.Value, "Mech Install^'Hours'!X200", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7355", "HCAD_Hanger_Type_C_Qty", <a><![CDATA[HCAD_Hanger_Type_C_Qty]]></a>.Value, "Mech Install^'Hours'!W200", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7356", "HCAD_Hanger_Type_D_Hours", <a><![CDATA[HCAD_Hanger_Type_D_Hours]]></a>.Value, "Mech Install^'Hours'!X201", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7357", "HCAD_Hanger_Type_D_Qty", <a><![CDATA[HCAD_Hanger_Type_D_Qty]]></a>.Value, "Mech Install^'Hours'!W201", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7358", "HCAD_Hanger_Type_E_Hours", <a><![CDATA[HCAD_Hanger_Type_E_Hours]]></a>.Value, "Mech Install^'Hours'!X202", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7359", "HCAD_Hanger_Type_E_Qty", <a><![CDATA[HCAD_Hanger_Type_E_Qty]]></a>.Value, "Mech Install^'Hours'!W202", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7360", "HCAD_Hanger_Type_F_Hours", <a><![CDATA[HCAD_Hanger_Type_F_Hours]]></a>.Value, "Mech Install^'Hours'!X203", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7361", "HCAD_Hanger_Type_F_Qty", <a><![CDATA[HCAD_Hanger_Type_F_Qty]]></a>.Value, "Mech Install^'Hours'!W203", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7362", "HCAD_Hanger_Type_G_Hours", <a><![CDATA[HCAD_Hanger_Type_G_Hours]]></a>.Value, "Mech Install^'Hours'!X204", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7363", "HCAD_Hanger_Type_G_Qty", <a><![CDATA[HCAD_Hanger_Type_G_Qty]]></a>.Value, "Mech Install^'Hours'!W204", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7364", "HCAD_Hanger_Type_K_Hours", <a><![CDATA[HCAD_Hanger_Type_K_Hours]]></a>.Value, "Mech Install^'Hours'!X205", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7365", "HCAD_Hanger_Type_K_Qty", <a><![CDATA[HCAD_Hanger_Type_K_Qty]]></a>.Value, "Mech Install^'Hours'!W205", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7366", "HCAD_Hanger_Type_M_Hours", <a><![CDATA[HCAD_Hanger_Type_M_Hours]]></a>.Value, "Mech Install^'Hours'!X206", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7367", "HCAD_Hanger_Type_M_Qty", <a><![CDATA[HCAD_Hanger_Type_M_Qty]]></a>.Value, "Mech Install^'Hours'!W206", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7368", "HCAD_Hanger_Type_N_Hours", <a><![CDATA[HCAD_Hanger_Type_N_Hours]]></a>.Value, "Mech Install^'Hours'!X207", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7369", "HCAD_Hanger_Type_N_Qty", <a><![CDATA[HCAD_Hanger_Type_N_Qty]]></a>.Value, "Mech Install^'Hours'!W207", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7370", "HCAD_Hanger_Type_P_Hours", <a><![CDATA[HCAD_Hanger_Type_P_Hours]]></a>.Value, "Mech Install^'Hours'!X208", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7371", "HCAD_Hanger_Type_P_Qty", <a><![CDATA[HCAD_Hanger_Type_P_Qty]]></a>.Value, "Mech Install^'Hours'!W208", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7372", "HCAD_Hanger_Type_R_Hours", <a><![CDATA[HCAD_Hanger_Type_R_Hours]]></a>.Value, "Mech Install^'Hours'!X209", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7373", "HCAD_Hanger_Type_R_Qty", <a><![CDATA[HCAD_Hanger_Type_R_Qty]]></a>.Value, "Mech Install^'Hours'!W209", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7374", "HCAD_Header_Steel_and_Hangers_Ea_Total_Hours", <a><![CDATA[HCAD_Header_Steel_and_Hangers_Ea_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P199", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7375", "HCAD_Header_Steel_Hangers_Ea_Total_Units", <a><![CDATA[HCAD_Header_Steel_Hangers_Ea_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q198", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7376", "HCAD_IntelliFlow_Beds_Hours", <a><![CDATA[HCAD_IntelliFlow_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P97", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7377", "HCAD_IntelliFlow_Beds_Units", <a><![CDATA[HCAD_IntelliFlow_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q97", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7378", "HCAD_IntelliFlow_Belting_Hours", <a><![CDATA[HCAD_IntelliFlow_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P100", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7379", "HCAD_IntelliFlow_Belting_Units", <a><![CDATA[HCAD_IntelliFlow_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q100", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7380", "HCAD_IntelliFlow_Layout_Hours", <a><![CDATA[HCAD_IntelliFlow_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P102", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7381", "HCAD_IntelliFlow_Layout_Units", <a><![CDATA[HCAD_IntelliFlow_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q102", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7382", "HCAD_IntelliFlow_RunIn_Hours", <a><![CDATA[HCAD_IntelliFlow_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P103", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7383", "HCAD_IntelliFlow_RunIn_Units", <a><![CDATA[HCAD_IntelliFlow_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q103", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7384", "HCAD_IntelliFlow_SideGuide_Footage", <a><![CDATA[HCAD_IntelliFlow_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O98", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7385", "HCAD_IntelliFlow_SideGuide_Hours", <a><![CDATA[HCAD_IntelliFlow_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P98", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7386", "HCAD_IntelliFlow_SideGuide_Units", <a><![CDATA[HCAD_IntelliFlow_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q98", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7387", "HCAD_IntelliFlow_Supports_Hours", <a><![CDATA[HCAD_IntelliFlow_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P99", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7388", "HCAD_IntelliFlow_Supports_Units", <a><![CDATA[HCAD_IntelliFlow_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q99", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7389", "HCAD_IntelliFlow_Total_Footage", <a><![CDATA[HCAD_IntelliFlow_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O96", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7390", "HCAD_IntelliFlow_Total_Hours", <a><![CDATA[HCAD_IntelliFlow_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P104", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7391", "HCAD_IntelliFlow_Total_Units", <a><![CDATA[HCAD_IntelliFlow_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q96", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7392", "HCAD_IntelliFlow_Unloading_Hours", <a><![CDATA[HCAD_IntelliFlow_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P101", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7393", "HCAD_IntelliFlow_Unloading_Units", <a><![CDATA[HCAD_IntelliFlow_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q101", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7394", "HCAD_IntelliMerge_Beds_Hours", <a><![CDATA[HCAD_IntelliMerge_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P68", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7395", "HCAD_IntelliMerge_Beds_Units", <a><![CDATA[HCAD_IntelliMerge_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q68", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7396", "HCAD_IntelliMerge_Belting_Hours", <a><![CDATA[HCAD_IntelliMerge_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P71", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7397", "HCAD_IntelliMerge_Belting_Units", <a><![CDATA[HCAD_IntelliMerge_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q71", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7398", "HCAD_IntelliMerge_Layout_Hours", <a><![CDATA[HCAD_IntelliMerge_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P73", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7399", "HCAD_IntelliMerge_Layout_Units", <a><![CDATA[HCAD_IntelliMerge_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q73", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7400", "HCAD_IntelliMerge_RunIn_Hours", <a><![CDATA[HCAD_IntelliMerge_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P74", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7401", "HCAD_IntelliMerge_RunIn_Units", <a><![CDATA[HCAD_IntelliMerge_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q74", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:58 PM")
    AddProperty("7402", "HCAD_IntelliMerge_SideGuide_Footage", <a><![CDATA[HCAD_IntelliMerge_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O69", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7403", "HCAD_IntelliMerge_SideGuide_Hours", <a><![CDATA[HCAD_IntelliMerge_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P69", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7404", "HCAD_IntelliMerge_SideGuide_Units", <a><![CDATA[HCAD_IntelliMerge_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q69", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7405", "HCAD_IntelliMerge_Supports_Hours", <a><![CDATA[HCAD_IntelliMerge_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P70", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7406", "HCAD_IntelliMerge_Supports_Units", <a><![CDATA[HCAD_IntelliMerge_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q70", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7407", "HCAD_IntelliMerge_Total_Footage", <a><![CDATA[HCAD_IntelliMerge_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O67", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7408", "HCAD_IntelliMerge_Total_Hours", <a><![CDATA[HCAD_IntelliMerge_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P75", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7409", "HCAD_IntelliMerge_Total_Units", <a><![CDATA[HCAD_IntelliMerge_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q67", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7410", "HCAD_IntelliMerge_Unloading_Hours", <a><![CDATA[HCAD_IntelliMerge_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P72", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7411", "HCAD_IntelliMerge_Unloading_Units", <a><![CDATA[HCAD_IntelliMerge_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q72", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7412", "HCAD_IntelliQAccuglide_Beds_Avg_Height", <a><![CDATA[HCAD_IntelliQ Accuglide_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T77", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7413", "HCAD_IntelliQAccuglide_Beds_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P77", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7414", "HCAD_IntelliQAccuglide_Beds_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q77", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7415", "HCAD_IntelliQAccuglide_Belting_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P80", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7416", "HCAD_IntelliQAccuglide_Belting_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q80", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7417", "HCAD_IntelliQAccuglide_Layout_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P82", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7418", "HCAD_IntelliQAccuglide_Layout_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q82", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7419", "HCAD_IntelliQAccuglide_RunIn_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P83", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7420", "HCAD_IntelliQAccuglide_RunIn_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q82", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7421", "HCAD_IntelliQAccuglide_SideGuide_Footage", <a><![CDATA[HCAD_IntelliQ Accuglide_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O78", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7422", "HCAD_IntelliQAccuglide_SideGuide_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P78", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7423", "HCAD_IntelliQAccuglide_SideGuide_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q78", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7424", "HCAD_IntelliQAccuglide_Supports_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P79", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7425", "HCAD_IntelliQAccuglide_Supports_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q79", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7426", "HCAD_IntelliQAccuglide_Total_Footage", <a><![CDATA[HCAD_IntelliQ Accuglide_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O76", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7427", "HCAD_IntelliQAccuglide_Total_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P84", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7428", "HCAD_IntelliQAccuglide_Total_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q76", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7429", "HCAD_IntelliQAccuglide_Unloading_Hours", <a><![CDATA[HCAD_IntelliQ Accuglide_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P81", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7430", "HCAD_IntelliQAccuglide_Unloading_Units", <a><![CDATA[HCAD_IntelliQ Accuglide_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q81", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7431", "HCAD_MDR_Beds_Avg_Height", <a><![CDATA[HCAD_MDR_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T117", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7432", "HCAD_MDR_Beds_Hours", <a><![CDATA[HCAD_MDR_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P117", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7433", "HCAD_MDR_Beds_Units", <a><![CDATA[HCAD_MDR_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q117", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7434", "HCAD_MDR_Belting_Hours", <a><![CDATA[HCAD_MDR_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P120", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7435", "HCAD_MDR_Belting_Units", <a><![CDATA[HCAD_MDR_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q120", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7436", "HCAD_MDR_Diverts", <a><![CDATA[HCAD_MDR_Diverts]]></a>.Value, "Mech Install^'Hours'!T116", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7437", "HCAD_MDR_Gates", <a><![CDATA[HCAD_MDR_Gates]]></a>.Value, "Mech Install^'Hours'!V116", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7438", "HCAD_MDR_Layout_Hours", <a><![CDATA[HCAD_MDR_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P122", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7439", "HCAD_MDR_Layout_Units", <a><![CDATA[HCAD_MDR_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q122", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7440", "HCAD_MDR_Pneumatic_Diverts", <a><![CDATA[HCAD_MDR_Pneumatic_Diverts]]></a>.Value, "Mech Install^'Hours'!T115  Todo: Research this with the SME", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7441", "HCAD_MDR_Pneumatic_Transfers", <a><![CDATA[HCAD_MDR_Pneumatic_Transfers]]></a>.Value, "Mech Install^'Hours'!R115  Todo: Research this with the SME", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7442", "HCAD_MDR_RunIn_Hours", <a><![CDATA[HCAD_MDR_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P123", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7443", "HCAD_MDR_RunIn_Units", <a><![CDATA[HCAD_MDR_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q123", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7444", "HCAD_MDR_SideGuide_Footage", <a><![CDATA[HCAD_MDR_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O118", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7445", "HCAD_MDR_SideGuide_Hours", <a><![CDATA[HCAD_MDR_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P118", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7446", "HCAD_MDR_SideGuide_Units", <a><![CDATA[HCAD_MDR_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q118", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7447", "HCAD_MDR_Supports_Hours", <a><![CDATA[HCAD_MDR_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P119", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7448", "HCAD_MDR_Supports_Units", <a><![CDATA[HCAD_MDR_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q119", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7449", "HCAD_MDR_Total_Footage", <a><![CDATA[HCAD_MDR_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O116", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7450", "HCAD_MDR_Total_Hours", <a><![CDATA[HCAD_MDR_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P124", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7451", "HCAD_MDR_Total_Units", <a><![CDATA[HCAD_MDR_Total_Units]]></a>.Value, "Mech Install^'Hours'!R116", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7452", "HCAD_MDR_Transfers", <a><![CDATA[HCAD_MDR_Transfers]]></a>.Value, "Mech Install^'Hours'!R116", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7453", "HCAD_MDR_Unloading_Hours", <a><![CDATA[HCAD_MDR_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P121", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7454", "HCAD_MDR_Unloading_Units", <a><![CDATA[HCAD_MDR_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q121", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7455", "HCAD_PoweredTrailerLoader_Beds_Avg_Height", <a><![CDATA[HCAD_Powered Trailer Loader_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T135", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7456", "HCAD_PoweredTrailerLoader_Beds_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P135", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7457", "HCAD_PoweredTrailerLoader_Beds_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q135", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7458", "HCAD_PoweredTrailerLoader_Belting_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P138", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7459", "HCAD_PoweredTrailerLoader_Belting_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q138", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7460", "HCAD_PoweredTrailerLoader_Layout_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P140", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7461", "HCAD_PoweredTrailerLoader_Layout_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q140", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7462", "HCAD_PoweredTrailerLoader_RunIn_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P141", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7463", "HCAD_PoweredTrailerLoader_RunIn_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q141", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7464", "HCAD_PoweredTrailerLoader_SideGuide_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P136", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7465", "HCAD_PoweredTrailerLoader_SideGuide_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q136", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7466", "HCAD_PoweredTrailerLoader_Supports_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P137", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7467", "HCAD_PoweredTrailerLoader_Supports_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q137", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7468", "HCAD_PoweredTrailerLoader_Total_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P142", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7469", "HCAD_PoweredTrailerLoader_Total_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q134", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7470", "HCAD_PoweredTrailerLoader_Unloading_Hours", <a><![CDATA[HCAD_Powered Trailer Loader_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P139", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7471", "HCAD_PoweredTrailerLoader_Unloading_Units", <a><![CDATA[HCAD_Powered Trailer Loader_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q139", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7472", "HCAD_ScalesSealersStrappersBeds_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersBeds_Hours]]></a>.Value, "Mech Install^'Hours'!P153", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7473", "HCAD_ScalesSealersStrappersBeds_Units", <a><![CDATA[HCAD_Scales Sealers StrappersBeds_Units]]></a>.Value, "Mech Install^'Hours'!Q153", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7474", "HCAD_ScalesSealersStrappersBelting_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersBelting_Hours]]></a>.Value, "Mech Install^'Hours'!P156", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7475", "HCAD_ScalesSealersStrappersBelting_Units", <a><![CDATA[HCAD_Scales Sealers StrappersBelting_Units]]></a>.Value, "Mech Install^'Hours'!Q156", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7476", "HCAD_ScalesSealersStrappersLayout_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersLayout_Hours]]></a>.Value, "Mech Install^'Hours'!P158", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7477", "HCAD_ScalesSealersStrappersLayout_Units", <a><![CDATA[HCAD_Scales Sealers StrappersLayout_Units]]></a>.Value, "Mech Install^'Hours'!Q158", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7478", "HCAD_ScalesSealersStrappersRunIn_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersRun-In_Hours]]></a>.Value, "Mech Install^'Hours'!P159", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7479", "HCAD_ScalesSealersStrappersRunIn_Units", <a><![CDATA[HCAD_Scales Sealers StrappersRun-In_Units]]></a>.Value, "Mech Install^'Hours'!Q159", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7480", "HCAD_ScalesSealersStrappersSideGuide_Units", <a><![CDATA[HCAD_Scales Sealers StrappersSide Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q154", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7481", "HCAD_ScalesSealersStrappersSupports_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersSupports_Hours]]></a>.Value, "Mech Install^'Hours'!P155", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7482", "HCAD_ScalesSealersStrappersSupports_Units", <a><![CDATA[HCAD_Scales Sealers StrappersSupports_Units]]></a>.Value, "155", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7483", "HCAD_ScalesSealersStrappersTotal_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersTotal_Hours]]></a>.Value, "Mech Install^'Hours'!P160", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7484", "HCAD_ScalesSealersStrappersTotal_Units", <a><![CDATA[HCAD_Scales Sealers StrappersTotal_Units]]></a>.Value, "Mech Install^'Hours'!Q152", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7485", "HCAD_ScalesSealersStrappersUnloading_Hours", <a><![CDATA[HCAD_Scales Sealers StrappersUnloading_Hours]]></a>.Value, "Mech Install^'Hours'!P157", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7486", "HCAD_ScalesSealersStrappersUnloading_Units", <a><![CDATA[HCAD_Scales Sealers StrappersUnloading_Units]]></a>.Value, "Mech Install^'Hours'!Q157", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7487", "HCAD_ServoInductunits_Beds_Hours", <a><![CDATA[HCAD_Servo Induct units_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P162", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7488", "HCAD_ServoInductunits_Beds_Units", <a><![CDATA[HCAD_Servo Induct units_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q162", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7489", "HCAD_ServoInductunits_Belting_Hours", <a><![CDATA[HCAD_Servo Induct units_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P165", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7490", "HCAD_ServoInductunits_Belting_Units", <a><![CDATA[HCAD_Servo Induct units_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q165", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7491", "HCAD_ServoInductunits_Layout_Hours", <a><![CDATA[HCAD_Servo Induct units_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P167", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7492", "HCAD_ServoInductunits_Layout_Units", <a><![CDATA[HCAD_Servo Induct units_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q167", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7493", "HCAD_ServoInductunits_RunIn_Hours", <a><![CDATA[HCAD_Servo Induct units_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P168", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7494", "HCAD_ServoInductunits_RunIn_Units", <a><![CDATA[HCAD_Servo Induct units_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q168", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7495", "HCAD_ServoInductunits_SideGuide_Hours", <a><![CDATA[HCAD_Servo Induct units_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P163", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7496", "HCAD_ServoInductunits_SideGuide_Units", <a><![CDATA[HCAD_Servo Induct units_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q163", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7497", "HCAD_ServoInductunits_Supports_Hours", <a><![CDATA[HCAD_Servo Induct units_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P164", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7498", "HCAD_ServoInductunits_Supports_Units", <a><![CDATA[HCAD_Servo Induct units_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q164", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7499", "HCAD_ServoInductunits_Total_Footage", <a><![CDATA[HCAD_Servo Induct units_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O161", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7500", "HCAD_ServoInductunits_Total_Hours", <a><![CDATA[HCAD_Servo Induct units_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P169", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7501", "HCAD_ServoInductunits_Total_Units", <a><![CDATA[HCAD_Servo Induct units_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q161", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7502", "HCAD_ServoInductunits_Unloading_Hours", <a><![CDATA[HCAD_Servo Induct units_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P166", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7503", "HCAD_ServoInductunits_Unloading_Units", <a><![CDATA[HCAD_Servo Induct units_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q166", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7504", "HCAD_ShoeSorter_Beds_Avg_Height", <a><![CDATA[HCAD_Shoe Sorter_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T106", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7505", "HCAD_ShoeSorter_Beds_Hours", <a><![CDATA[HCAD_Shoe Sorter_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P106", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7506", "HCAD_ShoeSorter_Beds_Units", <a><![CDATA[HCAD_Shoe Sorter_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q106", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7507", "HCAD_ShoeSorter_Belting_Hours", <a><![CDATA[HCAD_Shoe Sorter_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P109", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7508", "HCAD_ShoeSorter_Belting_Units", <a><![CDATA[HCAD_Shoe Sorter_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q109", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7509", "HCAD_ShoeSorter_Diverts", <a><![CDATA[HCAD_Shoe Sorter_Diverts]]></a>.Value, "Mech Install^'Hours'!T105", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7510", "HCAD_ShoeSorter_Layout_Hours", <a><![CDATA[HCAD_Shoe Sorter_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P111", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7511", "HCAD_ShoeSorter_Layout_Units", <a><![CDATA[HCAD_Shoe Sorter_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q111", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7512", "HCAD_ShoeSorter_RunIn_Hours", <a><![CDATA[HCAD_Shoe Sorter_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P112", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7513", "HCAD_ShoeSorter_RunIn_Units", <a><![CDATA[HCAD_Shoe Sorter_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q112", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7514", "HCAD_ShoeSorter_SideGuide_Footage", <a><![CDATA[HCAD_Shoe Sorter_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O107", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7515", "HCAD_ShoeSorter_SideGuide_Hours", <a><![CDATA[HCAD_Shoe Sorter_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P107", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7516", "HCAD_ShoeSorter_SideGuide_Units", <a><![CDATA[HCAD_Shoe Sorter_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q107", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7517", "HCAD_ShoeSorter_Supports_Hours", <a><![CDATA[HCAD_Shoe Sorter_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P108", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7518", "HCAD_ShoeSorter_Supports_Units", <a><![CDATA[HCAD_Shoe Sorter_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q108", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7519", "HCAD_ShoeSorter_Total_Footage", <a><![CDATA[HCAD_Shoe Sorter_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O105", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7520", "HCAD_ShoeSorter_Total_Hours", <a><![CDATA[HCAD_Shoe Sorter_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P113", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7521", "HCAD_ShoeSorter_Total_Units", <a><![CDATA[HCAD_Shoe Sorter_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q105", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7522", "HCAD_ShoeSorter_Unloading_Hours", <a><![CDATA[HCAD_Shoe Sorter_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P110", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7523", "HCAD_ShoeSorter_Unloading_Units", <a><![CDATA[HCAD_Shoe Sorter_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q110", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7524", "HCAD_SpiralCurvessets_Beds_Avg_Height", <a><![CDATA[HCAD_Spiral Curves sets_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T180", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7525", "HCAD_SpiralCurvessets_Beds_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P180", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7526", "HCAD_SpiralCurvessets_Beds_Units", <a><![CDATA[HCAD_Spiral Curves sets_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q180", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7527", "HCAD_SpiralCurvessets_Belting_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P183", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7528", "HCAD_SpiralCurvessets_Belting_Units", <a><![CDATA[HCAD_Spiral Curves sets_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q183", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7529", "HCAD_SpiralCurvessets_Layout_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P185", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7530", "HCAD_SpiralCurvessets_Layout_Units", <a><![CDATA[HCAD_Spiral Curves sets_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q185", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7531", "HCAD_SpiralCurvessets_RunIn_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P186", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7532", "HCAD_SpiralCurvessets_RunIn_Units", <a><![CDATA[HCAD_Spiral Curves sets_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q186", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7533", "HCAD_SpiralCurvessets_SideGuide_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P181", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7534", "HCAD_SpiralCurvessets_SideGuide_Units", <a><![CDATA[HCAD_Spiral Curves sets_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q181", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7535", "HCAD_SpiralCurvessets_Supports_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P182", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7536", "HCAD_SpiralCurvessets_Supports_Units", <a><![CDATA[HCAD_Spiral Curves sets_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q182", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7537", "HCAD_SpiralCurvessets_Total_Footage", <a><![CDATA[HCAD_Spiral Curves sets_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O179", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7538", "HCAD_SpiralCurvessets_Total_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P187", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7539", "HCAD_SpiralCurvessets_Total_Units", <a><![CDATA[HCAD_Spiral Curves sets_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q179", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7540", "HCAD_SpiralCurvessets_Unloading_Hours", <a><![CDATA[HCAD_Spiral Curves sets_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P184", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7541", "HCAD_SpiralCurvessets_Unloading_Units", <a><![CDATA[HCAD_Spiral Curves sets_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q184", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7542", "HCAD_VBelt_Beds_Avg_Height", <a><![CDATA[HCAD_V Belt_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T59", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7543", "HCAD_VBelt_Beds_Hours", <a><![CDATA[HCAD_V Belt_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P59", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7544", "HCAD_VBelt_Beds_Units", <a><![CDATA[HCAD_V Belt_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q59", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7545", "HCAD_VBelt_Belting_Hours", <a><![CDATA[HCAD_V Belt_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P62", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7546", "HCAD_VBelt_Belting_Units", <a><![CDATA[HCAD_V Belt_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q62", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:38:59 PM")
    AddProperty("7547", "HCAD_VBelt_Layout_Hours", <a><![CDATA[HCAD_V Belt_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P64", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7548", "HCAD_VBelt_Layout_Units", <a><![CDATA[HCAD_V Belt_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q63", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7549", "HCAD_VBelt_RunIn_Hours", <a><![CDATA[HCAD_V Belt_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P65", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7550", "HCAD_VBelt_RunIn_Units", <a><![CDATA[HCAD_V Belt_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q63", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7551", "HCAD_VBelt_SideGuide_Footage", <a><![CDATA[HCAD_V Belt_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O60", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7552", "HCAD_VBelt_SideGuide_Hours", <a><![CDATA[HCAD_V Belt_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P60", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7553", "HCAD_VBelt_SideGuide_Units", <a><![CDATA[HCAD_V Belt_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q59", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7554", "HCAD_VBelt_Supports_Hours", <a><![CDATA[HCAD_V Belt_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P61", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7555", "HCAD_VBelt_Supports_Units", <a><![CDATA[HCAD_V Belt_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q61", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7556", "HCAD_VBelt_Total_Footage", <a><![CDATA[HCAD_V Belt_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O58", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7557", "HCAD_VBelt_Total_PHours", <a><![CDATA[HCAD_V Belt_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P66", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7558", "HCAD_VBelt_Total_Units", <a><![CDATA[HCAD_V Belt_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q58", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7559", "HCAD_VBelt_Unloading_Hours", <a><![CDATA[HCAD_V Belt_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P63", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7560", "HCAD_VBelt_Unloading_Units", <a><![CDATA[HCAD_V Belt_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q62", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7561", "HCAD_WheelDivert_Beds_Avg_Height", <a><![CDATA[HCAD_Wheel Divert_Beds_Avg_Height]]></a>.Value, "Mech Install^'Hours'!T87  Todo: Research this with the SME", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7562", "HCAD_WheelDivert_Beds_Hours", <a><![CDATA[HCAD_Wheel Divert_Beds_Hours]]></a>.Value, "Mech Install^'Hours'!P88", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7563", "HCAD_WheelDivert_Beds_Units", <a><![CDATA[HCAD_Wheel Divert_Beds_Units]]></a>.Value, "Mech Install^'Hours'!Q88", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7564", "HCAD_WheelDivert_Belting_Hours", <a><![CDATA[HCAD_Wheel Divert_Belting_Hours]]></a>.Value, "Mech Install^'Hours'!P91", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7565", "HCAD_WheelDivert_Belting_Units", <a><![CDATA[HCAD_Wheel Divert_Belting_Units]]></a>.Value, "Mech Install^'Hours'!Q91", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7566", "HCAD_WheelDivert_Layout_Hours", <a><![CDATA[HCAD_Wheel Divert_Layout_Hours]]></a>.Value, "Mech Install^'Hours'!P93", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7567", "HCAD_WheelDivert_Layout_Units", <a><![CDATA[HCAD_Wheel Divert_Layout_Units]]></a>.Value, "Mech Install^'Hours'!Q93", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7568", "HCAD_WheelDivert_RunIn_Hours", <a><![CDATA[HCAD_Wheel Divert_Run-In_Hours]]></a>.Value, "Mech Install^'Hours'!P94", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7569", "HCAD_WheelDivert_RunIn_Units", <a><![CDATA[HCAD_Wheel Divert_Run-In_Units]]></a>.Value, "Mech Install^'Hours'!Q94", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7570", "HCAD_WheelDivert_SideGuide_Footage", <a><![CDATA[HCAD_Wheel Divert_Side Guide_Footage]]></a>.Value, "Mech Install^'Hours'!O89", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7571", "HCAD_WheelDivert_SideGuide_Hours", <a><![CDATA[HCAD_Wheel Divert_Side Guide_Hours]]></a>.Value, "Mech Install^'Hours'!P89", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7572", "HCAD_WheelDivert_SideGuide_Units", <a><![CDATA[HCAD_Wheel Divert_Side Guide_Units]]></a>.Value, "Mech Install^'Hours'!Q89", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7573", "HCAD_WheelDivert_Supports_Hours", <a><![CDATA[HCAD_Wheel Divert_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!P90", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7574", "HCAD_WheelDivert_Supports_Units", <a><![CDATA[HCAD_Wheel Divert_Supports_Units]]></a>.Value, "Mech Install^'Hours'!Q90", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7575", "HCAD_WheelDivert_Total_Footage", <a><![CDATA[HCAD_Wheel Divert_Total_Footage]]></a>.Value, "Mech Install^'Hours'!O87", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7576", "HCAD_WheelDivert_Total_Hours", <a><![CDATA[HCAD_Wheel Divert_Total_Hours]]></a>.Value, "Mech Install^'Hours'!P95", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7577", "HCAD_WheelDivert_Total_Units", <a><![CDATA[HCAD_Wheel Divert_Total_Units]]></a>.Value, "Mech Install^'Hours'!Q87", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7578", "HCAD_WheelDivert_Unloading_Hours", <a><![CDATA[HCAD_Wheel Divert_Unloading_Hours]]></a>.Value, "Mech Install^'Hours'!P92", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7579", "HCAD_WheelDivert_Unloading_Units", <a><![CDATA[HCAD_Wheel Divert_Unloading_Units]]></a>.Value, "Mech Install^'Hours'!Q92", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7580", "Hours_Misc_Chute_Style_1_Air", <a><![CDATA[Hours_Misc_Chute_Style_1_Air]]></a>.Value, "Mech Install^'Hours'!S292", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7581", "Hours_Misc_Chute_Style_1_Dollars", <a><![CDATA[Hours_Misc_Chute_Style_1_Dollars]]></a>.Value, "Mech Install^'Hours'!P292", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7582", "Hours_Misc_Chute_Style_1_Hours", <a><![CDATA[Hours_Misc_Chute_Style_1_Hours]]></a>.Value, "Mech Install^'Hours'!R292", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7583", "Hours_Misc_Chute_Style_1_Metric", <a><![CDATA[Hours_Misc_Chute_Style_1_Metric]]></a>.Value, "Mech Install^'Hours'!T292", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7584", "Hours_Misc_Chute_Style_1_Qty", <a><![CDATA[Hours_Misc_Chute_Style_1_Qty]]></a>.Value, "Mech Install^'Hours'!Q292", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7585", "Hours_Misc_Chute_Style_2_Air", <a><![CDATA[Hours_Misc_Chute_Style_2_Air]]></a>.Value, "Mech Install^'Hours'!S293", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7586", "Hours_Misc_Chute_Style_2_Dollars", <a><![CDATA[Hours_Misc_Chute_Style_2_Dollars]]></a>.Value, "Mech Install^'Hours'!P293", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7587", "Hours_Misc_Chute_Style_2_Hours", <a><![CDATA[Hours_Misc_Chute_Style_2_Hours]]></a>.Value, "Mech Install^'Hours'!R293", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7588", "Hours_Misc_Chute_Style_2_Metric", <a><![CDATA[Hours_Misc_Chute_Style_2_Metric]]></a>.Value, "Mech Install^'Hours'!T293", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7589", "Hours_Misc_Chute_Style_2_Qty", <a><![CDATA[Hours_Misc_Chute_Style_2_Qty]]></a>.Value, "Mech Install^'Hours'!Q293", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7590", "Hours_Misc_Chute_Style_3_Air", <a><![CDATA[Hours_Misc_Chute_Style_3_Air]]></a>.Value, "Mech Install^'Hours'!S294", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7591", "Hours_Misc_Chute_Style_3_Dollars", <a><![CDATA[Hours_Misc_Chute_Style_3_Dollars]]></a>.Value, "Mech Install^'Hours'!P294", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7592", "Hours_Misc_Chute_Style_3_Hours", <a><![CDATA[Hours_Misc_Chute_Style_3_Hours]]></a>.Value, "Mech Install^'Hours'!R294", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7593", "Hours_Misc_Chute_Style_3_Metric", <a><![CDATA[Hours_Misc_Chute_Style_3_Metric]]></a>.Value, "Mech Install^'Hours'!T294", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7594", "Hours_Misc_Chute_Style_3_Qty", <a><![CDATA[Hours_Misc_Chute_Style_3_Qty]]></a>.Value, "Mech Install^'Hours'!Q294", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7595", "Hours_Misc_Chute_Total_Air", <a><![CDATA[Hours_Misc_Chute_Total_Air]]></a>.Value, "Mech Install^'Hours'!S295", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7596", "Hours_Misc_Chute_Total_Hours", <a><![CDATA[Hours_Misc_Chute_Total_Hours]]></a>.Value, "Mech Install^'Hours'!R295", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7597", "Hrs_Misc_80_20_Guards_Air", <a><![CDATA[Hrs_Misc_80_20_Guards_Air]]></a>.Value, "Mech Install^'Hours'!S229", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7598", "Hrs_Misc_80_20_Guards_Dollars", <a><![CDATA[Hrs_Misc_80_20_Guards_Dollars]]></a>.Value, "Mech Install^'Hours'!P229", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7599", "Hrs_Misc_80_20_Guards_Hours", <a><![CDATA[Hrs_Misc_80_20_Guards_Hours]]></a>.Value, "Mech Install^'Hours'!R229", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7600", "Hrs_Misc_80_20_Guards_Metric", <a><![CDATA[Hrs_Misc_80_20_Guards_Metric]]></a>.Value, "Mech Install^'Hours'!T229", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7601", "Hrs_Misc_80_20_Guards_Qty", <a><![CDATA[Hrs_Misc_80_20_Guards_Qty]]></a>.Value, "Mech Install^'Hours'!Q229", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7602", "Hrs_Misc_Angle_Guarding_ft_Air", <a><![CDATA[Hrs_Misc_Angle_Guarding_ft_Air]]></a>.Value, "Mech Install^'Hours'!S230", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7603", "Hrs_Misc_Angle_Guarding_ft_Dollars", <a><![CDATA[Hrs_Misc_Angle_Guarding_ft_Dollars]]></a>.Value, "Mech Install^'Hours'!P230", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7604", "Hrs_Misc_Angle_Guarding_ft_Hours", <a><![CDATA[Hrs_Misc_Angle_Guarding_ft_Hours]]></a>.Value, "Mech Install^'Hours'!R230", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7605", "Hrs_Misc_Angle_Guarding_ft_Metric", <a><![CDATA[Hrs_Misc_Angle_Guarding_ft_Metric]]></a>.Value, "Mech Install^'Hours'!T230", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7606", "Hrs_Misc_Angle_Guarding_ft_Qty", <a><![CDATA[Hrs_Misc_Angle_Guarding_ft_Qty]]></a>.Value, "Mech Install^'Hours'!Q230", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7607", "Hrs_Misc_AR_Induct_Chute_Air", <a><![CDATA[Hrs_Misc_AR_Induct_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S231", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7608", "Hrs_Misc_AR_Induct_Chute_Dollars", <a><![CDATA[Hrs_Misc_AR_Induct_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P231", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7609", "Hrs_Misc_AR_Induct_Chute_Hours", <a><![CDATA[Hrs_Misc_AR_Induct_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R231", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7610", "Hrs_Misc_AR_Induct_Chute_Metric", <a><![CDATA[Hrs_Misc_AR_Induct_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T231", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7611", "Hrs_Misc_AR_Induct_Chute_Qty", <a><![CDATA[Hrs_Misc_AR_Induct_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q231", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7612", "Hrs_Misc_ARSAW_ARSTOWS_Air", <a><![CDATA[Hrs_Misc_ARSAW_ARSTOWS_Air]]></a>.Value, "Mech Install^'Hours'!S232", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7613", "Hrs_Misc_ARSAW_ARSTOWS_Dollars", <a><![CDATA[Hrs_Misc_ARSAW_ARSTOWS_Dollars]]></a>.Value, "Mech Install^'Hours'!P232", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7614", "Hrs_Misc_ARSAW_ARSTOWS_Hours", <a><![CDATA[Hrs_Misc_ARSAW_ARSTOWS_Hours]]></a>.Value, "Mech Install^'Hours'!R232", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7615", "Hrs_Misc_ARSAW_ARSTOWS_Metric", <a><![CDATA[Hrs_Misc_ARSAW_ARSTOWS_Metric]]></a>.Value, "Mech Install^'Hours'!T232", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7616", "Hrs_Misc_ARSAW_ARSTOWS_Qty", <a><![CDATA[Hrs_Misc_ARSAW_ARSTOWS_Qty]]></a>.Value, "Mech Install^'Hours'!Q232", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7617", "Hrs_Misc_Autobag_850_Air", <a><![CDATA[Hrs_Misc_Autobag_850_Air]]></a>.Value, "Mech Install^'Hours'!S233", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7618", "Hrs_Misc_Autobag_850_Dollars", <a><![CDATA[Hrs_Misc_Autobag_850_Dollars]]></a>.Value, "Mech Install^'Hours'!P233", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7619", "Hrs_Misc_Autobag_850_Hours", <a><![CDATA[Hrs_Misc_Autobag_850_Hours]]></a>.Value, "Mech Install^'Hours'!R233", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7620", "Hrs_Misc_Autobag_850_Metric", <a><![CDATA[Hrs_Misc_Autobag_850_Metric]]></a>.Value, "Mech Install^'Hours'!T233", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7621", "Hrs_Misc_Autobag_850_Qty", <a><![CDATA[Hrs_Misc_Autobag_850_Qty]]></a>.Value, "Mech Install^'Hours'!Q233", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7622", "Hrs_Misc_Baffled_Shipping_Chutes_Air", <a><![CDATA[Hrs_Misc_Baffled_Shipping_Chutes_Air]]></a>.Value, "Mech Install^'Hours'!S234", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7623", "Hrs_Misc_Baffled_Shipping_Chutes_Dollars", <a><![CDATA[Hrs_Misc_Baffled_Shipping_Chutes_Dollars]]></a>.Value, "Mech Install^'Hours'!P234", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7624", "Hrs_Misc_Baffled_Shipping_Chutes_Hours", <a><![CDATA[Hrs_Misc_Baffled_Shipping_Chutes_Hours]]></a>.Value, "Mech Install^'Hours'!R234", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7625", "Hrs_Misc_Baffled_Shipping_Chutes_Metric", <a><![CDATA[Hrs_Misc_Baffled_Shipping_Chutes_Metric]]></a>.Value, "Mech Install^'Hours'!T234", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7626", "Hrs_Misc_Baffled_Shipping_Chutes_Qty", <a><![CDATA[Hrs_Misc_Baffled_Shipping_Chutes_Qty]]></a>.Value, "Mech Install^'Hours'!Q234", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7627", "Hrs_Misc_Ball_Transfer_Tables_Air", <a><![CDATA[Hrs_Misc_Ball_Transfer_Tables_Air]]></a>.Value, "Mech Install^'Hours'!S235", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7628", "Hrs_Misc_Ball_Transfer_Tables_Dollars", <a><![CDATA[Hrs_Misc_Ball_Transfer_Tables_Dollars]]></a>.Value, "Mech Install^'Hours'!P235", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7629", "Hrs_Misc_Ball_Transfer_Tables_Hours", <a><![CDATA[Hrs_Misc_Ball_Transfer_Tables_Hours]]></a>.Value, "Mech Install^'Hours'!R235", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7630", "Hrs_Misc_Ball_Transfer_Tables_Metric", <a><![CDATA[Hrs_Misc_Ball_Transfer_Tables_Metric]]></a>.Value, "Mech Install^'Hours'!T235", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7631", "Hrs_Misc_Ball_Transfer_Tables_Qty", <a><![CDATA[Hrs_Misc_Ball_Transfer_Tables_Qty]]></a>.Value, "Mech Install^'Hours'!Q235", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7632", "Hrs_Misc_BangerBarsHtProte_Air", <a><![CDATA[Hrs_Misc_BangerBarsHtProte_Air]]></a>.Value, "Mech Install^'Hours'!S236", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7633", "Hrs_Misc_BangerBarsHtProte_Dollars", <a><![CDATA[Hrs_Misc_BangerBarsHtProte_Dollars]]></a>.Value, "Mech Install^'Hours'!P236", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7634", "Hrs_Misc_BangerBarsHtProte_Hours", <a><![CDATA[Hrs_Misc_BangerBarsHtProte_Hours]]></a>.Value, "Mech Install^'Hours'!R236", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7635", "Hrs_Misc_BangerBarsHtProte_Metric", <a><![CDATA[Hrs_Misc_BangerBarsHtProte_Metric]]></a>.Value, "Mech Install^'Hours'!T236", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7636", "Hrs_Misc_BangerBarsHtProte_Qty", <a><![CDATA[Hrs_Misc_BangerBarsHtProte_Qty]]></a>.Value, "Mech Install^'Hours'!Q236", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7637", "Hrs_Misc_Bottom_Pans_Air", <a><![CDATA[Hrs_Misc_Bottom_Pans_Air]]></a>.Value, "Mech Install^'Hours'!S237", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7638", "Hrs_Misc_Bottom_Pans_Dollars", <a><![CDATA[Hrs_Misc_Bottom_Pans_Dollars]]></a>.Value, "Mech Install^'Hours'!P237", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7639", "Hrs_Misc_Bottom_Pans_Hours", <a><![CDATA[Hrs_Misc_Bottom_Pans_Hours]]></a>.Value, "Mech Install^'Hours'!R237", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7640", "Hrs_Misc_Bottom_Pans_Metric", <a><![CDATA[Hrs_Misc_Bottom_Pans_Metric]]></a>.Value, "Mech Install^'Hours'!T237", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7641", "Hrs_Misc_Bottom_Pans_Qty", <a><![CDATA[Hrs_Misc_Bottom_Pans_Qty]]></a>.Value, "Mech Install^'Hours'!Q237", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7642", "Hrs_Misc_Carton_Erector_Air", <a><![CDATA[Hrs_Misc_Carton_Erector_Air]]></a>.Value, "Mech Install^'Hours'!S238", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7643", "Hrs_Misc_Carton_Erector_Dollars", <a><![CDATA[Hrs_Misc_Carton_Erector_Dollars]]></a>.Value, "Mech Install^'Hours'!P238", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7644", "Hrs_Misc_Carton_Erector_Hours", <a><![CDATA[Hrs_Misc_Carton_Erector_Hours]]></a>.Value, "Mech Install^'Hours'!R238", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7645", "Hrs_Misc_Carton_Erector_Metric", <a><![CDATA[Hrs_Misc_Carton_Erector_Metric]]></a>.Value, "Mech Install^'Hours'!T238", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7646", "Hrs_Misc_Carton_Erector_Qty", <a><![CDATA[Hrs_Misc_Carton_Erector_Qty]]></a>.Value, "Mech Install^'Hours'!Q238", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7647", "Hrs_Misc_Conveyor_Wipe_Down_Air", <a><![CDATA[Hrs_Misc_Conveyor_Wipe_Down_Air]]></a>.Value, "Mech Install^'Hours'!S239", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7648", "Hrs_Misc_Conveyor_Wipe_Down_Dollars", <a><![CDATA[Hrs_Misc_Conveyor_Wipe_Down_Dollars]]></a>.Value, "Mech Install^'Hours'!P239", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7649", "Hrs_Misc_Conveyor_Wipe_Down_Hours", <a><![CDATA[Hrs_Misc_Conveyor_Wipe_Down_Hours]]></a>.Value, "Mech Install^'Hours'!R239", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7650", "Hrs_Misc_Conveyor_Wipe_Down_Metric", <a><![CDATA[Hrs_Misc_Conveyor_Wipe_Down_Metric]]></a>.Value, "Mech Install^'Hours'!T239", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7651", "Hrs_Misc_Conveyor_Wipe_Down_Qty", <a><![CDATA[Hrs_Misc_Conveyor_Wipe_Down_Qty]]></a>.Value, "Mech Install^'Hours'!Q239", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7652", "Hrs_Misc_CVG9_Style_Chute_Air", <a><![CDATA[Hrs_Misc_CVG9_Style_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S240", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7653", "Hrs_Misc_CVG9_Style_Chute_Dollars", <a><![CDATA[Hrs_Misc_CVG9_Style_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P240", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7654", "Hrs_Misc_CVG9_Style_Chute_Hours", <a><![CDATA[Hrs_Misc_CVG9_Style_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R240", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7655", "Hrs_Misc_CVG9_Style_Chute_Metric", <a><![CDATA[Hrs_Misc_CVG9_Style_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T240", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7656", "Hrs_Misc_CVG9_Style_Chute_Qty", <a><![CDATA[Hrs_Misc_CVG9_Style_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q240", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7657", "Hrs_Misc_Deflector_Plows_Air", <a><![CDATA[Hrs_Misc_Deflector_Plows_Air]]></a>.Value, "Mech Install^'Hours'!S241", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7658", "Hrs_Misc_Deflector_Plows_Dollars", <a><![CDATA[Hrs_Misc_Deflector_Plows_Dollars]]></a>.Value, "Mech Install^'Hours'!P241", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7659", "Hrs_Misc_Deflector_Plows_Hours", <a><![CDATA[Hrs_Misc_Deflector_Plows_Hours]]></a>.Value, "Mech Install^'Hours'!R241", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7660", "Hrs_Misc_Deflector_Plows_Metric", <a><![CDATA[Hrs_Misc_Deflector_Plows_Metric]]></a>.Value, "Mech Install^'Hours'!T241", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7661", "Hrs_Misc_Deflector_Plows_Qty", <a><![CDATA[Hrs_Misc_Deflector_Plows_Qty]]></a>.Value, "Mech Install^'Hours'!Q241", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7662", "Hrs_Misc_Dehnco_Work_Tables_Air", <a><![CDATA[Hrs_Misc_Dehnco_Work_Tables_Air]]></a>.Value, "Mech Install^'Hours'!S242", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7663", "Hrs_Misc_Dehnco_Work_Tables_Dollars", <a><![CDATA[Hrs_Misc_Dehnco_Work_Tables_Dollars]]></a>.Value, "Mech Install^'Hours'!P242", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7664", "Hrs_Misc_Dehnco_Work_Tables_Hours", <a><![CDATA[Hrs_Misc_Dehnco_Work_Tables_Hours]]></a>.Value, "Mech Install^'Hours'!R242", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7665", "Hrs_Misc_Dehnco_Work_Tables_Metric", <a><![CDATA[Hrs_Misc_Dehnco_Work_Tables_Metric]]></a>.Value, "Mech Install^'Hours'!T242", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7666", "Hrs_Misc_Dehnco_Work_Tables_Qty", <a><![CDATA[Hrs_Misc_Dehnco_Work_Tables_Qty]]></a>.Value, "Mech Install^'Hours'!Q242", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7667", "Hrs_Misc_Descrambler_Air", <a><![CDATA[Hrs_Misc_Descrambler_Air]]></a>.Value, "Mech Install^'Hours'!S243", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7668", "Hrs_Misc_Descrambler_Dollars", <a><![CDATA[Hrs_Misc_Descrambler_Dollars]]></a>.Value, "Mech Install^'Hours'!P243", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7669", "Hrs_Misc_Descrambler_Hours", <a><![CDATA[Hrs_Misc_Descrambler_Hours]]></a>.Value, "Mech Install^'Hours'!R243", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7670", "Hrs_Misc_Descrambler_Metric", <a><![CDATA[Hrs_Misc_Descrambler_Metric]]></a>.Value, "Mech Install^'Hours'!T243", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7671", "Hrs_Misc_Descrambler_Qty", <a><![CDATA[Hrs_Misc_Descrambler_Qty]]></a>.Value, "Mech Install^'Hours'!Q243", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7672", "Hrs_Misc_Dual_Inlet_Spiral_Chute_Air", <a><![CDATA[Hrs_Misc_Dual_Inlet_Spiral_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S244", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7673", "Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars", <a><![CDATA[Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P244", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7674", "Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours", <a><![CDATA[Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R244", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7675", "Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric", <a><![CDATA[Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T244", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7676", "Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty", <a><![CDATA[Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q244", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7677", "Hrs_Misc_Gates_Air", <a><![CDATA[Hrs_Misc_Gates_Air]]></a>.Value, "Mech Install^'Hours'!S245", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7678", "Hrs_Misc_Gates_Dollars", <a><![CDATA[Hrs_Misc_Gates_Dollars]]></a>.Value, "Mech Install^'Hours'!P245", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7679", "Hrs_Misc_Gates_Hours", <a><![CDATA[Hrs_Misc_Gates_Hours]]></a>.Value, "Mech Install^'Hours'!R245", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7680", "Hrs_Misc_Gates_Metric", <a><![CDATA[Hrs_Misc_Gates_Metric]]></a>.Value, "Mech Install^'Hours'!T245", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7681", "Hrs_Misc_Gates_Qty", <a><![CDATA[Hrs_Misc_Gates_Qty]]></a>.Value, "Mech Install^'Hours'!Q245", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7682", "Hrs_Misc_Gaylord_Tipper_Air", <a><![CDATA[Hrs_Misc_Gaylord_Tipper_Air]]></a>.Value, "Mech Install^'Hours'!S246", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7683", "Hrs_Misc_Gaylord_Tipper_Dollars", <a><![CDATA[Hrs_Misc_Gaylord_Tipper_Dollars]]></a>.Value, "Mech Install^'Hours'!P246", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7684", "Hrs_Misc_Gaylord_Tipper_Hours", <a><![CDATA[Hrs_Misc_Gaylord_Tipper_Hours]]></a>.Value, "Mech Install^'Hours'!R246", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7685", "Hrs_Misc_Gaylord_Tipper_Metric", <a><![CDATA[Hrs_Misc_Gaylord_Tipper_Metric]]></a>.Value, "Mech Install^'Hours'!T246", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7686", "Hrs_Misc_Gaylord_Tipper_Qty", <a><![CDATA[Hrs_Misc_Gaylord_Tipper_Qty]]></a>.Value, "Mech Install^'Hours'!Q246", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7687", "Hrs_Misc_GMT_Auto_Unloader_Air", <a><![CDATA[Hrs_Misc_GMT_Auto_Unloader_Air]]></a>.Value, "Mech Install^'Hours'!S247", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7688", "Hrs_Misc_GMT_Auto_Unloader_Dollars", <a><![CDATA[Hrs_Misc_GMT_Auto_Unloader_Dollars]]></a>.Value, "Mech Install^'Hours'!P247", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7689", "Hrs_Misc_GMT_Auto_Unloader_Hours", <a><![CDATA[Hrs_Misc_GMT_Auto_Unloader_Hours]]></a>.Value, "Mech Install^'Hours'!R247", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7690", "Hrs_Misc_GMT_Auto_Unloader_Metric", <a><![CDATA[Hrs_Misc_GMT_Auto_Unloader_Metric]]></a>.Value, "Mech Install^'Hours'!T247", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7691", "Hrs_Misc_GMT_Auto_Unloader_Qty", <a><![CDATA[Hrs_Misc_GMT_Auto_Unloader_Qty]]></a>.Value, "Mech Install^'Hours'!Q247", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7692", "Hrs_Misc_Gravity_Spurs_Air", <a><![CDATA[Hrs_Misc_Gravity_Spurs_Air]]></a>.Value, "Mech Install^'Hours'!S248", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7693", "Hrs_Misc_Gravity_Spurs_Dollars", <a><![CDATA[Hrs_Misc_Gravity_Spurs_Dollars]]></a>.Value, "Mech Install^'Hours'!P248", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7694", "Hrs_Misc_Gravity_Spurs_Hours", <a><![CDATA[Hrs_Misc_Gravity_Spurs_Hours]]></a>.Value, "Mech Install^'Hours'!R248", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7695", "Hrs_Misc_Gravity_Spurs_Metric", <a><![CDATA[Hrs_Misc_Gravity_Spurs_Metric]]></a>.Value, "Mech Install^'Hours'!T248", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7696", "Hrs_Misc_Gravity_Spurs_Qty", <a><![CDATA[Hrs_Misc_Gravity_Spurs_Qty]]></a>.Value, "Mech Install^'Hours'!Q248", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7697", "Hrs_Misc_HC_Spiral_Chute_Air", <a><![CDATA[Hrs_Misc_HC_Spiral_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S249", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7698", "Hrs_Misc_HC_Spiral_Chute_Dollars", <a><![CDATA[Hrs_Misc_HC_Spiral_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P249", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7699", "Hrs_Misc_HC_Spiral_Chute_Hours", <a><![CDATA[Hrs_Misc_HC_Spiral_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R249", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7700", "Hrs_Misc_HC_Spiral_Chute_Metric", <a><![CDATA[Hrs_Misc_HC_Spiral_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T249", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7701", "Hrs_Misc_HC_Spiral_Chute_Qty", <a><![CDATA[Hrs_Misc_HC_Spiral_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q249", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7702", "Hrs_Misc_Highway_Guarding_P_R_Air", <a><![CDATA[Hrs_Misc_Highway_Guarding_P_R_Air]]></a>.Value, "Mech Install^'Hours'!S250", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7703", "Hrs_Misc_Highway_Guarding_P_R_Dollars", <a><![CDATA[Hrs_Misc_Highway_Guarding_P_R_Dollars]]></a>.Value, "Mech Install^'Hours'!P250", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7704", "Hrs_Misc_Highway_Guarding_P_R_Hours", <a><![CDATA[Hrs_Misc_Highway_Guarding_P_R_Hours]]></a>.Value, "Mech Install^'Hours'!R250", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7705", "Hrs_Misc_Highway_Guarding_P_R_Metric", <a><![CDATA[Hrs_Misc_Highway_Guarding_P_R_Metric]]></a>.Value, "Mech Install^'Hours'!T250", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7706", "Hrs_Misc_Highway_Guarding_P_R_Qty", <a><![CDATA[Hrs_Misc_Highway_Guarding_P_R_Qty]]></a>.Value, "Mech Install^'Hours'!Q250", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7707", "Hrs_Misc_Intralox_Sorter_Air", <a><![CDATA[Hrs_Misc_Intralox_Sorter_Air]]></a>.Value, "Mech Install^'Hours'!S251", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7708", "Hrs_Misc_Intralox_Sorter_Dollars", <a><![CDATA[Hrs_Misc_Intralox_Sorter_Dollars]]></a>.Value, "Mech Install^'Hours'!P251", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7709", "Hrs_Misc_Intralox_Sorter_Hours", <a><![CDATA[Hrs_Misc_Intralox_Sorter_Hours]]></a>.Value, "Mech Install^'Hours'!R251", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7710", "Hrs_Misc_Intralox_Sorter_Metric", <a><![CDATA[Hrs_Misc_Intralox_Sorter_Metric]]></a>.Value, "Mech Install^'Hours'!T251", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7711", "Hrs_Misc_Intralox_Sorter_Qty", <a><![CDATA[Hrs_Misc_Intralox_Sorter_Qty]]></a>.Value, "Mech Install^'Hours'!Q251", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7712", "Hrs_Misc_Merging_Spirals_Air", <a><![CDATA[Hrs_Misc_Merging_Spirals_Air]]></a>.Value, "Mech Install^'Hours'!S252", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7713", "Hrs_Misc_Merging_Spirals_Dollars", <a><![CDATA[Hrs_Misc_Merging_Spirals_Dollars]]></a>.Value, "Mech Install^'Hours'!P252", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7714", "Hrs_Misc_Merging_Spirals_Hours", <a><![CDATA[Hrs_Misc_Merging_Spirals_Hours]]></a>.Value, "Mech Install^'Hours'!R252", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7715", "Hrs_Misc_Merging_Spirals_Metric", <a><![CDATA[Hrs_Misc_Merging_Spirals_Metric]]></a>.Value, "Mech Install^'Hours'!T252", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7716", "Hrs_Misc_Merging_Spirals_Qty", <a><![CDATA[Hrs_Misc_Merging_Spirals_Qty]]></a>.Value, "Mech Install^'Hours'!Q252", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7717", "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air", <a><![CDATA[Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air]]></a>.Value, "Mech Install^'Hours'!S253", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7718", "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars", <a><![CDATA[Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars]]></a>.Value, "Mech Install^'Hours'!P253", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7719", "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours", <a><![CDATA[Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours]]></a>.Value, "Mech Install^'Hours'!R253", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7720", "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric", <a><![CDATA[Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric]]></a>.Value, "Mech Install^'Hours'!T253", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7721", "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty", <a><![CDATA[Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty]]></a>.Value, "Mech Install^'Hours'!Q253", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7722", "Hrs_Misc_Netting_linear_ft_Air", <a><![CDATA[Hrs_Misc_Netting_linear_ft_Air]]></a>.Value, "Mech Install^'Hours'!S254", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7723", "Hrs_Misc_Netting_linear_ft_Dollars", <a><![CDATA[Hrs_Misc_Netting_linear_ft_Dollars]]></a>.Value, "Mech Install^'Hours'!P254", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7724", "Hrs_Misc_Netting_linear_ft_Hours", <a><![CDATA[Hrs_Misc_Netting_linear_ft_Hours]]></a>.Value, "Mech Install^'Hours'!R254", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7725", "Hrs_Misc_Netting_linear_ft_Metric", <a><![CDATA[Hrs_Misc_Netting_linear_ft_Metric]]></a>.Value, "Mech Install^'Hours'!T254", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7726", "Hrs_Misc_Netting_linear_ft_Qty", <a><![CDATA[Hrs_Misc_Netting_linear_ft_Qty]]></a>.Value, "Mech Install^'Hours'!Q254", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7727", "Hrs_Misc_PandA_Air", <a><![CDATA[Hrs_Misc_PandA_Air]]></a>.Value, "Mech Install^'Hours'!S255", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7728", "Hrs_Misc_PandA_Dollars", <a><![CDATA[Hrs_Misc_PandA_Dollars]]></a>.Value, "Mech Install^'Hours'!P255", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7729", "Hrs_Misc_PandA_Hours", <a><![CDATA[Hrs_Misc_PandA_Hours]]></a>.Value, "Mech Install^'Hours'!R255", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7730", "Hrs_Misc_PandA_Metric", <a><![CDATA[Hrs_Misc_PandA_Metric]]></a>.Value, "Mech Install^'Hours'!T255", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7731", "Hrs_Misc_PandA_Qty", <a><![CDATA[Hrs_Misc_PandA_Qty]]></a>.Value, "Mech Install^'Hours'!Q255", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7732", "Hrs_Misc_Personnel_Fencing_Temp_Air", <a><![CDATA[Hrs_Misc_Personnel_Fencing_Temp_Air]]></a>.Value, "Mech Install^'Hours'!S256", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7733", "Hrs_Misc_Personnel_Fencing_Temp_Dollars", <a><![CDATA[Hrs_Misc_Personnel_Fencing_Temp_Dollars]]></a>.Value, "Mech Install^'Hours'!P256", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7734", "Hrs_Misc_Personnel_Fencing_Temp_Hours", <a><![CDATA[Hrs_Misc_Personnel_Fencing_Temp_Hours]]></a>.Value, "Mech Install^'Hours'!R256", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7735", "Hrs_Misc_Personnel_Fencing_Temp_Metric", <a><![CDATA[Hrs_Misc_Personnel_Fencing_Temp_Metric]]></a>.Value, "Mech Install^'Hours'!T256", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7736", "Hrs_Misc_Personnel_Fencing_Temp_Qty", <a><![CDATA[Hrs_Misc_Personnel_Fencing_Temp_Qty]]></a>.Value, "Mech Install^'Hours'!Q256", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7737", "Hrs_Misc_Pick_Mod_Trash_Chutes_Air", <a><![CDATA[Hrs_Misc_Pick_Mod_Trash_Chutes_Air]]></a>.Value, "Mech Install^'Hours'!S257", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7738", "Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars", <a><![CDATA[Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars]]></a>.Value, "Mech Install^'Hours'!P257", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7739", "Hrs_Misc_Pick_Mod_Trash_Chutes_Hours", <a><![CDATA[Hrs_Misc_Pick_Mod_Trash_Chutes_Hours]]></a>.Value, "Mech Install^'Hours'!R257", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7740", "Hrs_Misc_Pick_Mod_Trash_Chutes_Metric", <a><![CDATA[Hrs_Misc_Pick_Mod_Trash_Chutes_Metric]]></a>.Value, "Mech Install^'Hours'!T257", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7741", "Hrs_Misc_Pick_Mod_Trash_Chutes_Qty", <a><![CDATA[Hrs_Misc_Pick_Mod_Trash_Chutes_Qty]]></a>.Value, "Mech Install^'Hours'!Q257", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7742", "Hrs_Misc_Powered_Spirals_Air", <a><![CDATA[Hrs_Misc_Powered_Spirals_Air]]></a>.Value, "Mech Install^'Hours'!S258", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7743", "Hrs_Misc_Powered_Spirals_Dollars", <a><![CDATA[Hrs_Misc_Powered_Spirals_Dollars]]></a>.Value, "Mech Install^'Hours'!P258", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7744", "Hrs_Misc_Powered_Spirals_Hours", <a><![CDATA[Hrs_Misc_Powered_Spirals_Hours]]></a>.Value, "Mech Install^'Hours'!R258", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7745", "Hrs_Misc_Powered_Spirals_Metric", <a><![CDATA[Hrs_Misc_Powered_Spirals_Metric]]></a>.Value, "Mech Install^'Hours'!T258", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7746", "Hrs_Misc_Powered_Spirals_Qty", <a><![CDATA[Hrs_Misc_Powered_Spirals_Qty]]></a>.Value, "Mech Install^'Hours'!Q258", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7747", "Hrs_Misc_Powered_Swing_Arm_Divert_Air", <a><![CDATA[Hrs_Misc_Powered_Swing_Arm_Divert_Air]]></a>.Value, "Mech Install^'Hours'!S259", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7748", "Hrs_Misc_Powered_Swing_Arm_Divert_Dollars", <a><![CDATA[Hrs_Misc_Powered_Swing_Arm_Divert_Dollars]]></a>.Value, "Mech Install^'Hours'!P259", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7749", "Hrs_Misc_Powered_Swing_Arm_Divert_Hours", <a><![CDATA[Hrs_Misc_Powered_Swing_Arm_Divert_Hours]]></a>.Value, "Mech Install^'Hours'!R259", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7750", "Hrs_Misc_Powered_Swing_Arm_Divert_Metric", <a><![CDATA[Hrs_Misc_Powered_Swing_Arm_Divert_Metric]]></a>.Value, "Mech Install^'Hours'!T259", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7751", "Hrs_Misc_Powered_Swing_Arm_Divert_Qty", <a><![CDATA[Hrs_Misc_Powered_Swing_Arm_Divert_Qty]]></a>.Value, "Mech Install^'Hours'!Q259", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7752", "Hrs_Misc_Proos_Chute_Air", <a><![CDATA[Hrs_Misc_Proos_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S260", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7753", "Hrs_Misc_Proos_Chute_Dollars", <a><![CDATA[Hrs_Misc_Proos_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P260", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7754", "Hrs_Misc_Proos_Chute_Hours", <a><![CDATA[Hrs_Misc_Proos_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R260", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7755", "Hrs_Misc_Proos_Chute_Metric", <a><![CDATA[Hrs_Misc_Proos_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T260", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7756", "Hrs_Misc_Proos_Chute_Qty", <a><![CDATA[Hrs_Misc_Proos_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q260", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7757", "Hrs_Misc_Proos_PUT_Walls_Air", <a><![CDATA[Hrs_Misc_Proos_PUT_Walls_Air]]></a>.Value, "Mech Install^'Hours'!S261", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7758", "Hrs_Misc_Proos_PUT_Walls_Dollars", <a><![CDATA[Hrs_Misc_Proos_PUT_Walls_Dollars]]></a>.Value, "Mech Install^'Hours'!P261", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7759", "Hrs_Misc_Proos_PUT_Walls_Hours", <a><![CDATA[Hrs_Misc_Proos_PUT_Walls_Hours]]></a>.Value, "Mech Install^'Hours'!R261", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7760", "Hrs_Misc_Proos_PUT_Walls_Metric", <a><![CDATA[Hrs_Misc_Proos_PUT_Walls_Metric]]></a>.Value, "Mech Install^'Hours'!T261", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7761", "Hrs_Misc_Proos_PUT_Walls_Qty", <a><![CDATA[Hrs_Misc_Proos_PUT_Walls_Qty]]></a>.Value, "Mech Install^'Hours'!Q261", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7762", "Hrs_Misc_QA_Chute_Air", <a><![CDATA[Hrs_Misc_QA_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S262", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7763", "Hrs_Misc_QA_Chute_Dollars", <a><![CDATA[Hrs_Misc_QA_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P262", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7764", "Hrs_Misc_QA_Chute_Hours", <a><![CDATA[Hrs_Misc_QA_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R262", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7765", "Hrs_Misc_QA_Chute_Metric", <a><![CDATA[Hrs_Misc_QA_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T262", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7766", "Hrs_Misc_QA_Chute_Qty", <a><![CDATA[Hrs_Misc_QA_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q262", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7767", "Hrs_Misc_Semi_Auto_Taper_Air", <a><![CDATA[Hrs_Misc_Semi_Auto_Taper_Air]]></a>.Value, "Mech Install^'Hours'!S263", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:00 PM")
    AddProperty("7768", "Hrs_Misc_Semi_Auto_Taper_Dollars", <a><![CDATA[Hrs_Misc_Semi_Auto_Taper_Dollars]]></a>.Value, "Mech Install^'Hours'!P263", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7769", "Hrs_Misc_Semi_Auto_Taper_Hours", <a><![CDATA[Hrs_Misc_Semi_Auto_Taper_Hours]]></a>.Value, "Mech Install^'Hours'!R263", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7770", "Hrs_Misc_Semi_Auto_Taper_Metric", <a><![CDATA[Hrs_Misc_Semi_Auto_Taper_Metric]]></a>.Value, "Mech Install^'Hours'!T263", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7771", "Hrs_Misc_Semi_Auto_Taper_Qty", <a><![CDATA[Hrs_Misc_Semi_Auto_Taper_Qty]]></a>.Value, "Mech Install^'Hours'!Q263", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7772", "Hrs_Misc_Singulator_Air", <a><![CDATA[Hrs_Misc_Singulator_Air]]></a>.Value, "Mech Install^'Hours'!S279", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7773", "Hrs_Misc_Singulator_Dollars", <a><![CDATA[Hrs_Misc_Singulator_Dollars]]></a>.Value, "Mech Install^'Hours'!P279", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7774", "Hrs_Misc_Singulator_Hours", <a><![CDATA[Hrs_Misc_Singulator_Hours]]></a>.Value, "Mech Install^'Hours'!R279", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7775", "Hrs_Misc_Singulator_Metric", <a><![CDATA[Hrs_Misc_Singulator_Metric]]></a>.Value, "Mech Install^'Hours'!T279", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7776", "Hrs_Misc_Singulator_Qty", <a><![CDATA[Hrs_Misc_Singulator_Qty]]></a>.Value, "Mech Install^'Hours'!Q279", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7777", "Hrs_Misc_SLAMS_Air", <a><![CDATA[Hrs_Misc_SLAMS_Air]]></a>.Value, "Mech Install^'Hours'!S264", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7778", "Hrs_Misc_SLAMS_Dollars", <a><![CDATA[Hrs_Misc_SLAMS_Dollars]]></a>.Value, "Mech Install^'Hours'!P264", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7779", "Hrs_Misc_SLAMS_Hours", <a><![CDATA[Hrs_Misc_SLAMS_Hours]]></a>.Value, "Mech Install^'Hours'!R264", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7780", "Hrs_Misc_SLAMS_Metric", <a><![CDATA[Hrs_Misc_SLAMS_Metric]]></a>.Value, "Mech Install^'Hours'!T264", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7781", "Hrs_Misc_SLAMS_Qty", <a><![CDATA[Hrs_Misc_SLAMS_Qty]]></a>.Value, "Mech Install^'Hours'!Q264", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7782", "Hrs_Misc_SmartPac_Machines_Air", <a><![CDATA[Hrs_Misc_SmartPac_Machines_Air]]></a>.Value, "Mech Install^'Hours'!S265", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7783", "Hrs_Misc_SmartPac_Machines_Dollars", <a><![CDATA[Hrs_Misc_SmartPac_Machines_Dollars]]></a>.Value, "Mech Install^'Hours'!P265", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7784", "Hrs_Misc_SmartPac_Machines_Hours", <a><![CDATA[Hrs_Misc_SmartPac_Machines_Hours]]></a>.Value, "Mech Install^'Hours'!R265", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7785", "Hrs_Misc_SmartPac_Machines_Metric", <a><![CDATA[Hrs_Misc_SmartPac_Machines_Metric]]></a>.Value, "Mech Install^'Hours'!T265", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7786", "Hrs_Misc_SmartPac_Machines_Qty", <a><![CDATA[Hrs_Misc_SmartPac_Machines_Qty]]></a>.Value, "Mech Install^'Hours'!Q265", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7787", "Hrs_Misc_Snowplow_Chute_Air", <a><![CDATA[Hrs_Misc_Snowplow_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S266", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7788", "Hrs_Misc_Snowplow_Chute_Dollars", <a><![CDATA[Hrs_Misc_Snowplow_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P266", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7789", "Hrs_Misc_Snowplow_Chute_Hours", <a><![CDATA[Hrs_Misc_Snowplow_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R266", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7790", "Hrs_Misc_Snowplow_Chute_Metric", <a><![CDATA[Hrs_Misc_Snowplow_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T266", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7791", "Hrs_Misc_Snowplow_Chute_Qty", <a><![CDATA[Hrs_Misc_Snowplow_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q266", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7792", "Hrs_Misc_Sound_Abatement_Hood_Air", <a><![CDATA[Hrs_Misc_Sound_Abatement_Hood_Air]]></a>.Value, "Mech Install^'Hours'!S267", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7793", "Hrs_Misc_Sound_Abatement_Hood_Dollars", <a><![CDATA[Hrs_Misc_Sound_Abatement_Hood_Dollars]]></a>.Value, "Mech Install^'Hours'!P267", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7794", "Hrs_Misc_Sound_Abatement_Hood_Hours", <a><![CDATA[Hrs_Misc_Sound_Abatement_Hood_Hours]]></a>.Value, "Mech Install^'Hours'!R267", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7795", "Hrs_Misc_Sound_Abatement_Hood_Metric", <a><![CDATA[Hrs_Misc_Sound_Abatement_Hood_Metric]]></a>.Value, "Mech Install^'Hours'!T267", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7796", "Hrs_Misc_Sound_Abatement_Hood_Qty", <a><![CDATA[Hrs_Misc_Sound_Abatement_Hood_Qty]]></a>.Value, "Mech Install^'Hours'!Q267", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7797", "Hrs_Misc_Spiral_Chutes_Air", <a><![CDATA[Hrs_Misc_Spiral_Chutes_Air]]></a>.Value, "Mech Install^'Hours'!S268", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7798", "Hrs_Misc_Spiral_Chutes_Dollars", <a><![CDATA[Hrs_Misc_Spiral_Chutes_Dollars]]></a>.Value, "Mech Install^'Hours'!P268", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7799", "Hrs_Misc_Spiral_Chutes_Hours", <a><![CDATA[Hrs_Misc_Spiral_Chutes_Hours]]></a>.Value, "Mech Install^'Hours'!R268", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7800", "Hrs_Misc_Spiral_Chutes_Metric", <a><![CDATA[Hrs_Misc_Spiral_Chutes_Metric]]></a>.Value, "Mech Install^'Hours'!T268", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7801", "Hrs_Misc_Spiral_Chutes_Qty", <a><![CDATA[Hrs_Misc_Spiral_Chutes_Qty]]></a>.Value, "Mech Install^'Hours'!Q268", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7802", "Hrs_Misc_Spiral_Netting_Air", <a><![CDATA[Hrs_Misc_Spiral_Netting_Air]]></a>.Value, "Mech Install^'Hours'!S269", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7803", "Hrs_Misc_Spiral_Netting_Dollars", <a><![CDATA[Hrs_Misc_Spiral_Netting_Dollars]]></a>.Value, "Mech Install^'Hours'!P269", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7804", "Hrs_Misc_Spiral_Netting_Hours", <a><![CDATA[Hrs_Misc_Spiral_Netting_Hours]]></a>.Value, "Mech Install^'Hours'!R269", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7805", "Hrs_Misc_Spiral_Netting_Metric", <a><![CDATA[Hrs_Misc_Spiral_Netting_Metric]]></a>.Value, "Mech Install^'Hours'!T269", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7806", "Hrs_Misc_Spiral_Netting_Qty", <a><![CDATA[Hrs_Misc_Spiral_Netting_Qty]]></a>.Value, "Mech Install^'Hours'!Q269", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7807", "Hrs_Misc_Stuff_It_De_Stuff_It_Air", <a><![CDATA[Hrs_Misc_Stuff_It_De_Stuff_It_Air]]></a>.Value, "Mech Install^'Hours'!S270", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7808", "Hrs_Misc_Stuff_It_De_Stuff_It_Dollars", <a><![CDATA[Hrs_Misc_Stuff_It_De_Stuff_It_Dollars]]></a>.Value, "Mech Install^'Hours'!P270", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7809", "Hrs_Misc_Stuff_It_De_Stuff_It_Hours", <a><![CDATA[Hrs_Misc_Stuff_It_De_Stuff_It_Hours]]></a>.Value, "Mech Install^'Hours'!R270", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7810", "Hrs_Misc_Stuff_It_De_Stuff_It_Metric", <a><![CDATA[Hrs_Misc_Stuff_It_De_Stuff_It_Metric]]></a>.Value, "Mech Install^'Hours'!T270", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7811", "Hrs_Misc_Stuff_It_De_Stuff_It_Qty", <a><![CDATA[Hrs_Misc_Stuff_It_De_Stuff_It_Qty]]></a>.Value, "Mech Install^'Hours'!Q270", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7812", "Hrs_Misc_Tie_Ins_Air", <a><![CDATA[Hrs_Misc_Tie_Ins_Air]]></a>.Value, "Mech Install^'Hours'!S271", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7813", "Hrs_Misc_Tie_Ins_Dollars", <a><![CDATA[Hrs_Misc_Tie_Ins_Dollars]]></a>.Value, "Mech Install^'Hours'!P271", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7814", "Hrs_Misc_Tie_Ins_Hours", <a><![CDATA[Hrs_Misc_Tie_Ins_Hours]]></a>.Value, "Mech Install^'Hours'!R271", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7815", "Hrs_Misc_Tie_Ins_Metric", <a><![CDATA[Hrs_Misc_Tie_Ins_Metric]]></a>.Value, "Mech Install^'Hours'!T271", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7816", "Hrs_Misc_Tie_Ins_Qty", <a><![CDATA[Hrs_Misc_Tie_Ins_Qty]]></a>.Value, "Mech Install^'Hours'!Q271", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7817", "Hrs_Misc_Tote_Plows_Air", <a><![CDATA[Hrs_Misc_Tote_Plows_Air]]></a>.Value, "Mech Install^'Hours'!S272", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7818", "Hrs_Misc_Tote_Plows_Dollars", <a><![CDATA[Hrs_Misc_Tote_Plows_Dollars]]></a>.Value, "Mech Install^'Hours'!P272", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7819", "Hrs_Misc_Tote_Plows_Hours", <a><![CDATA[Hrs_Misc_Tote_Plows_Hours]]></a>.Value, "Mech Install^'Hours'!R272", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7820", "Hrs_Misc_Tote_Plows_Metric", <a><![CDATA[Hrs_Misc_Tote_Plows_Metric]]></a>.Value, "Mech Install^'Hours'!T272", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7821", "Hrs_Misc_Tote_Plows_Qty", <a><![CDATA[Hrs_Misc_Tote_Plows_Qty]]></a>.Value, "Mech Install^'Hours'!Q272", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7822", "Hrs_Misc_Tote_Shelves_per_linear_ft_Air", <a><![CDATA[Hrs_Misc_Tote_Shelves_per_linear_ft_Air]]></a>.Value, "Mech Install^'Hours'!S273", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7823", "Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars", <a><![CDATA[Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars]]></a>.Value, "Mech Install^'Hours'!P273", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7824", "Hrs_Misc_Tote_Shelves_per_linear_ft_Hours", <a><![CDATA[Hrs_Misc_Tote_Shelves_per_linear_ft_Hours]]></a>.Value, "Mech Install^'Hours'!R273", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7825", "Hrs_Misc_Tote_Shelves_per_linear_ft_Metric", <a><![CDATA[Hrs_Misc_Tote_Shelves_per_linear_ft_Metric]]></a>.Value, "Mech Install^'Hours'!T273", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7826", "Hrs_Misc_Tote_Shelves_per_linear_ft_Qty", <a><![CDATA[Hrs_Misc_Tote_Shelves_per_linear_ft_Qty]]></a>.Value, "Mech Install^'Hours'!Q273", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7827", "Hrs_Misc_UPS_90_Curve_Chute_Air", <a><![CDATA[Hrs_Misc_UPS_90_Curve_Chute_Air]]></a>.Value, "Mech Install^'Hours'!S274", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7828", "Hrs_Misc_UPS_90_Curve_Chute_Dollars", <a><![CDATA[Hrs_Misc_UPS_90_Curve_Chute_Dollars]]></a>.Value, "Mech Install^'Hours'!P274", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7829", "Hrs_Misc_UPS_90_Curve_Chute_Hours", <a><![CDATA[Hrs_Misc_UPS_90_Curve_Chute_Hours]]></a>.Value, "Mech Install^'Hours'!R274", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7830", "Hrs_Misc_UPS_90_Curve_Chute_Metric", <a><![CDATA[Hrs_Misc_UPS_90_Curve_Chute_Metric]]></a>.Value, "Mech Install^'Hours'!T274", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7831", "Hrs_Misc_UPS_90_Curve_Chute_Qty", <a><![CDATA[Hrs_Misc_UPS_90_Curve_Chute_Qty]]></a>.Value, "Mech Install^'Hours'!Q274", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7832", "Hrs_Misc_USS_Tote_Stacker_Air", <a><![CDATA[Hrs_Misc_USS_Tote_Stacker_Air]]></a>.Value, "Mech Install^'Hours'!S275", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7833", "Hrs_Misc_USS_Tote_Stacker_Dollars", <a><![CDATA[Hrs_Misc_USS_Tote_Stacker_Dollars]]></a>.Value, "Mech Install^'Hours'!P275", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7834", "Hrs_Misc_USS_Tote_Stacker_Hours", <a><![CDATA[Hrs_Misc_USS_Tote_Stacker_Hours]]></a>.Value, "Mech Install^'Hours'!R275", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7835", "Hrs_Misc_USS_Tote_Stacker_Metric", <a><![CDATA[Hrs_Misc_USS_Tote_Stacker_Metric]]></a>.Value, "Mech Install^'Hours'!T275", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7836", "Hrs_Misc_USS_Tote_Stacker_Qty", <a><![CDATA[Hrs_Misc_USS_Tote_Stacker_Qty]]></a>.Value, "Mech Install^'Hours'!Q275", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7837", "Hrs_Misc_USS_VICS_Air", <a><![CDATA[Hrs_Misc_USS_VICS_Air]]></a>.Value, "Mech Install^'Hours'!S276", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7838", "Hrs_Misc_USS_VICS_Dollars", <a><![CDATA[Hrs_Misc_USS_VICS_Dollars]]></a>.Value, "Mech Install^'Hours'!P276", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7839", "Hrs_Misc_USS_VICS_Hours", <a><![CDATA[Hrs_Misc_USS_VICS_Hours]]></a>.Value, "Mech Install^'Hours'!R276", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7840", "Hrs_Misc_USS_VICS_Metric", <a><![CDATA[Hrs_Misc_USS_VICS_Metric]]></a>.Value, "Mech Install^'Hours'!T276", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7841", "Hrs_Misc_USS_VICS_Qty", <a><![CDATA[Hrs_Misc_USS_VICS_Qty]]></a>.Value, "Mech Install^'Hours'!Q276", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7842", "Hrs_Misc_Vertical_Lifts_Air", <a><![CDATA[Hrs_Misc_Vertical_Lifts_Air]]></a>.Value, "Mech Install^'Hours'!S277", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7843", "Hrs_Misc_Vertical_Lifts_Dollars", <a><![CDATA[Hrs_Misc_Vertical_Lifts_Dollars]]></a>.Value, "Mech Install^'Hours'!P277", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7844", "Hrs_Misc_Vertical_Lifts_Hours", <a><![CDATA[Hrs_Misc_Vertical_Lifts_Hours]]></a>.Value, "Mech Install^'Hours'!R277", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7845", "Hrs_Misc_Vertical_Lifts_Metric", <a><![CDATA[Hrs_Misc_Vertical_Lifts_Metric]]></a>.Value, "Mech Install^'Hours'!T277", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7846", "Hrs_Misc_Vertical_Lifts_Qty", <a><![CDATA[Hrs_Misc_Vertical_Lifts_Qty]]></a>.Value, "Mech Install^'Hours'!Q277", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7847", "Hrs_Misc_Work_Stations_Air", <a><![CDATA[Hrs_Misc_Work_Stations_Air]]></a>.Value, "Mech Install^'Hours'!S278", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7848", "Hrs_Misc_Work_Stations_Dollars", <a><![CDATA[Hrs_Misc_Work_Stations_Dollars]]></a>.Value, "Mech Install^'Hours'!P278", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7849", "Hrs_Misc_Work_Stations_Hours", <a><![CDATA[Hrs_Misc_Work_Stations_Hours]]></a>.Value, "Mech Install^'Hours'!R278", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7850", "Hrs_Misc_Work_Stations_Metric", <a><![CDATA[Hrs_Misc_Work_Stations_Metric]]></a>.Value, "Mech Install^'Hours'!T278", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7851", "Hrs_Misc_Work_Stations_Qty", <a><![CDATA[Hrs_Misc_Work_Stations_Qty]]></a>.Value, "Mech Install^'Hours'!Q278", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7852", "Linear_Footage_of_Conveyor", <a><![CDATA[Linear_Footage_of_Conveyor]]></a>.Value, "Mech Install^'Hours'!N203", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7853", "Linear_Footage_of_Conveyor_Misc_Hours", <a><![CDATA[Linear_Footage_of_Conveyor_Misc_Hours]]></a>.Value, "Mech Install^'Hours'!P205", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7854", "Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs", <a><![CDATA[Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs]]></a>.Value, "Mech Install^'Hours'!P206  This is percentage value", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7855", "Linear_Footage_of_Conveyor_Total_Conveyor_Hrs", <a><![CDATA[Linear_Footage_of_Conveyor_Total_Conveyor_Hrs]]></a>.Value, "Mech Install^'Hours'!P204", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7856", "Linear_Footage_of_Conveyor_With_Buyouts", <a><![CDATA[Linear_Footage_of_Conveyor_With_Buyouts]]></a>.Value, "Mech Install^'Hours'!O203", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7857", "MechInstallHours", <a><![CDATA[Mech Install^'Hours'!]]></a>.Value, "Mech Install^'Hours'!P42", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7858", "MechInstallHoursQ", <a><![CDATA[Mech Install^'Hours'!Q]]></a>.Value, "Mech Install^'Hours'!Q195", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7859", "Misc_Parcel_Items_90deg_platform_for_PBC_HRS", <a><![CDATA[Misc_Parcel_Items_90deg_platform_for_PBC_HRS]]></a>.Value, "Mech Install^'Hours'!R335", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7860", "Misc_Parcel_Items_90deg_platform_for_PBC_Metrics", <a><![CDATA[Misc_Parcel_Items_90deg_platform_for_PBC_Metrics]]></a>.Value, "Mech Install^'Hours'!Q335", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7861", "Misc_Parcel_Items_90deg_platform_for_PBC_QTY", <a><![CDATA[Misc_Parcel_Items_90deg_platform_for_PBC_QTY]]></a>.Value, "Mech Install^'Hours'!P335", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7862", "Misc_Parcel_Items_Curve_Chute_HRS", <a><![CDATA[Misc_Parcel_Items_Curve_Chute_HRS]]></a>.Value, "Mech Install^'Hours'!R331", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7863", "Misc_Parcel_Items_Curve_Chute_Metrics", <a><![CDATA[Misc_Parcel_Items_Curve_Chute_Metrics]]></a>.Value, "Mech Install^'Hours'!Q331", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7864", "Misc_Parcel_Items_Curve_Chute_QTY", <a><![CDATA[Misc_Parcel_Items_Curve_Chute_QTY]]></a>.Value, "Mech Install^'Hours'!P331", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7865", "Misc_Parcel_Items_Dual_crows_nest_HRS", <a><![CDATA[Misc_Parcel_Items_Dual_crows_nest_HRS]]></a>.Value, "Mech Install^'Hours'!R334", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7866", "Misc_Parcel_Items_Dual_crows_nest_Metrics", <a><![CDATA[Misc_Parcel_Items_Dual_crows_nest_Metrics]]></a>.Value, "Mech Install^'Hours'!Q334", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7867", "Misc_Parcel_Items_Dual_crows_nest_QTY", <a><![CDATA[Misc_Parcel_Items_Dual_crows_nest_QTY]]></a>.Value, "Mech Install^'Hours'!P334", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7868", "Misc_Parcel_Items_FT_TOTAL_FOR_AREA", <a><![CDATA[Misc_Parcel_Items_FT_TOTAL_FOR_AREA]]></a>.Value, "Mech Install^'Hours'!R340", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7869", "Misc_Parcel_Items_HRS_TOTAL_FOR_AREA", <a><![CDATA[Misc_Parcel_Items_HRS_TOTAL_FOR_AREA]]></a>.Value, "Mech Install^'Hours'!R339", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7870", "Misc_Parcel_Items_PBC_HRS", <a><![CDATA[Misc_Parcel_Items_PBC_HRS]]></a>.Value, "Mech Install^'Hours'!R328", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7871", "Misc_Parcel_Items_PBC_Metrics", <a><![CDATA[Misc_Parcel_Items_PBC_Metrics]]></a>.Value, "Mech Install^'Hours'!Q328", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7872", "Misc_Parcel_Items_PBC_QTY", <a><![CDATA[Misc_Parcel_Items_PBC_QTY]]></a>.Value, "Mech Install^'Hours'!P328", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7873", "Misc_Parcel_Items_Single_crows_nest_HRS", <a><![CDATA[Misc_Parcel_Items_Single_crows_nest_HRS]]></a>.Value, "Mech Install^'Hours'!R333", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7874", "Misc_Parcel_Items_Single_crows_nest_Metrics", <a><![CDATA[Misc_Parcel_Items_Single_crows_nest_Metrics]]></a>.Value, "Mech Install^'Hours'!Q333", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7875", "Misc_Parcel_Items_Single_crows_nest_QTY", <a><![CDATA[Misc_Parcel_Items_Single_crows_nest_QTY]]></a>.Value, "Mech Install^'Hours'!P333", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7876", "Misc_Parcel_Items_Singulator_HRS", <a><![CDATA[Misc_Parcel_Items_Singulator_HRS]]></a>.Value, "Mech Install^'Hours'!R337", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7877", "Misc_Parcel_Items_Singulator_Metrics", <a><![CDATA[Misc_Parcel_Items_Singulator_Metrics]]></a>.Value, "Mech Install^'Hours'!Q337", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7878", "Misc_Parcel_Items_Singulator_QTY", <a><![CDATA[Misc_Parcel_Items_Singulator_QTY]]></a>.Value, "Mech Install^'Hours'!P337", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7879", "Misc_Parcel_Items_Spiral_Chute_HRS", <a><![CDATA[Misc_Parcel_Items_Spiral_Chute_HRS]]></a>.Value, "Mech Install^'Hours'!R330", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7880", "Misc_Parcel_Items_Spiral_Chute_Metrics", <a><![CDATA[Misc_Parcel_Items_Spiral_Chute_Metrics]]></a>.Value, "Mech Install^'Hours'!Q330", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7881", "Misc_Parcel_Items_Spiral_Chute_QTY", <a><![CDATA[Misc_Parcel_Items_Spiral_Chute_QTY]]></a>.Value, "Mech Install^'Hours'!P330", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7882", "Misc_Parcel_Items_Straight_Chute_HRS", <a><![CDATA[Misc_Parcel_Items_Straight_Chute_HRS]]></a>.Value, "Mech Install^'Hours'!R332", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7883", "Misc_Parcel_Items_Straight_Chute_Metrics", <a><![CDATA[Misc_Parcel_Items_Straight_Chute_Metrics]]></a>.Value, "Mech Install^'Hours'!Q332", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7884", "Misc_Parcel_Items_Straight_Chute_QTY", <a><![CDATA[Misc_Parcel_Items_Straight_Chute_QTY]]></a>.Value, "Mech Install^'Hours'!P332", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7885", "Misc_Parcel_Items_Total_HRS", <a><![CDATA[Misc_Parcel_Items_Total_HRS]]></a>.Value, "Mech Install^'Hours'!R338", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7886", "Misc_Parcel_Items_Transition_plates_HRS", <a><![CDATA[Misc_Parcel_Items_Transition_plates_HRS]]></a>.Value, "Mech Install^'Hours'!R329", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7887", "Misc_Parcel_Items_Transition_plates_Metrics", <a><![CDATA[Misc_Parcel_Items_Transition_plates_Metrics]]></a>.Value, "Mech Install^'Hours'!Q329", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7888", "Misc_Parcel_Items_Transition_plates_QTY", <a><![CDATA[Misc_Parcel_Items_Transition_plates_QTY]]></a>.Value, "Mech Install^'Hours'!P329", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7889", "Plt_Cnvyr_Air_Devices", <a><![CDATA[Plt_Cnvyr_Air_Devices]]></a>.Value, "Mech Install^'Hours'!Q346", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7890", "Plt_Cnvyr_Anchors", <a><![CDATA[Plt_Cnvyr_Anchors]]></a>.Value, "Mech Install^'Hours'!Q344", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7891", "Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air", <a><![CDATA[Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air]]></a>.Value, "Mech Install^'Hours'!R348", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7892", "Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours", <a><![CDATA[Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q348", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7893", "Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics", <a><![CDATA[Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics]]></a>.Value, "Mech Install^'Hours'!P348", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7894", "Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY", <a><![CDATA[Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O348", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7895", "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air", <a><![CDATA[Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air]]></a>.Value, "Mech Install^'Hours'!R350", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7896", "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours", <a><![CDATA[Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q350", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7897", "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics", <a><![CDATA[Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics]]></a>.Value, "Mech Install^'Hours'!P350", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7898", "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY", <a><![CDATA[Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O350", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7899", "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air", <a><![CDATA[Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air]]></a>.Value, "Mech Install^'Hours'!R351", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7900", "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours", <a><![CDATA[Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q351", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7901", "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics", <a><![CDATA[Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics]]></a>.Value, "Mech Install^'Hours'!P351", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7902", "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY", <a><![CDATA[Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O351", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7903", "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air", <a><![CDATA[Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air]]></a>.Value, "Mech Install^'Hours'!R349", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7904", "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours", <a><![CDATA[Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q349", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7905", "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics", <a><![CDATA[Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics]]></a>.Value, "Mech Install^'Hours'!P349", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7906", "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY", <a><![CDATA[Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O349", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7907", "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air", <a><![CDATA[Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air]]></a>.Value, "Mech Install^'Hours'!R376", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7908", "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours]]></a>.Value, "Mech Install^'Hours'!Q376", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7909", "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY]]></a>.Value, "Mech Install^'Hours'!O376", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7910", "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea]]></a>.Value, "Mech Install^'Hours'!P376", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7911", "Plt_Cnvyr_MISC_Deflector_Plows_Air", <a><![CDATA[Plt_Cnvyr_MISC_Deflector_Plows_Air]]></a>.Value, "Mech Install^'Hours'!R372", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7912", "Plt_Cnvyr_MISC_Deflector_Plows_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Deflector_Plows_Hours]]></a>.Value, "Mech Install^'Hours'!Q372", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7913", "Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P372", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7914", "Plt_Cnvyr_MISC_Deflector_Plows_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Deflector_Plows_QTY]]></a>.Value, "Mech Install^'Hours'!O372", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7915", "Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air", <a><![CDATA[Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air]]></a>.Value, "Mech Install^'Hours'!R368", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7916", "Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours]]></a>.Value, "Mech Install^'Hours'!Q368", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7917", "Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P368", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7918", "Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY]]></a>.Value, "Mech Install^'Hours'!O368", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7919", "Plt_Cnvyr_MISC_Fencing_Footage_Air", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Footage_Air]]></a>.Value, "Mech Install^'Hours'!R370", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7920", "Plt_Cnvyr_MISC_Fencing_Footage_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Footage_Hours]]></a>.Value, "Mech Install^'Hours'!Q370", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7921", "Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P370", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7922", "Plt_Cnvyr_MISC_Fencing_Footage_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Footage_QTY]]></a>.Value, "Mech Install^'Hours'!O370", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7923", "Plt_Cnvyr_MISC_Fencing_Gates_Air", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Gates_Air]]></a>.Value, "Mech Install^'Hours'!R371", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7924", "Plt_Cnvyr_MISC_Fencing_Gates_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Gates_Hours]]></a>.Value, "Mech Install^'Hours'!Q371", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7925", "Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P371", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7926", "Plt_Cnvyr_MISC_Fencing_Gates_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Fencing_Gates_QTY]]></a>.Value, "Mech Install^'Hours'!O371", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7927", "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air", <a><![CDATA[Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air]]></a>.Value, "Mech Install^'Hours'!R378", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7928", "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours]]></a>.Value, "Mech Install^'Hours'!Q378", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7929", "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P378", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7930", "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY]]></a>.Value, "Mech Install^'Hours'!O378", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7931", "Plt_Cnvyr_MISC_Gravity_Spurs_Air", <a><![CDATA[Plt_Cnvyr_MISC_Gravity_Spurs_Air]]></a>.Value, "Mech Install^'Hours'!R373", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7932", "Plt_Cnvyr_MISC_Gravity_Spurs_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Gravity_Spurs_Hours]]></a>.Value, "Mech Install^'Hours'!Q373", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7933", "Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P373", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7934", "Plt_Cnvyr_MISC_Gravity_Spurs_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Gravity_Spurs_QTY]]></a>.Value, "Mech Install^'Hours'!O373", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7935", "Plt_Cnvyr_MISC_Lift_large_Air", <a><![CDATA[Plt_Cnvyr_MISC_Lift_large_Air]]></a>.Value, "Mech Install^'Hours'!R362", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7936", "Plt_Cnvyr_MISC_Lift_large_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Lift_large_Hours]]></a>.Value, "Mech Install^'Hours'!Q362", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7937", "Plt_Cnvyr_MISC_Lift_large_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Lift_large_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P362", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7938", "Plt_Cnvyr_MISC_Lift_large_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Lift_large_QTY]]></a>.Value, "Mech Install^'Hours'!O362", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7939", "Plt_Cnvyr_MISC_Lift_normal_Air", <a><![CDATA[Plt_Cnvyr_MISC_Lift_normal_Air]]></a>.Value, "Mech Install^'Hours'!R361", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7940", "Plt_Cnvyr_MISC_Lift_normal_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Lift_normal_Hours]]></a>.Value, "Mech Install^'Hours'!Q361", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7941", "Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P361", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7942", "Plt_Cnvyr_MISC_Lift_normal_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Lift_normal_QTY]]></a>.Value, "Mech Install^'Hours'!O361", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7943", "Plt_Cnvyr_MISC_Light_Curtain_Air", <a><![CDATA[Plt_Cnvyr_MISC_Light_Curtain_Air]]></a>.Value, "Mech Install^'Hours'!R377", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7944", "Plt_Cnvyr_MISC_Light_Curtain_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Light_Curtain_Hours]]></a>.Value, "Mech Install^'Hours'!Q377", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7945", "Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P377", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7946", "Plt_Cnvyr_MISC_Light_Curtain_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Light_Curtain_QTY]]></a>.Value, "Mech Install^'Hours'!O377", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7947", "Plt_Cnvyr_MISC_Pallet_Gates_Air", <a><![CDATA[Plt_Cnvyr_MISC_Pallet_Gates_Air]]></a>.Value, "Mech Install^'Hours'!R375", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7948", "Plt_Cnvyr_MISC_Pallet_Gates_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Pallet_Gates_Hours]]></a>.Value, "Mech Install^'Hours'!Q375", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7949", "Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P375", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7950", "Plt_Cnvyr_MISC_Pallet_Gates_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Pallet_Gates_QTY]]></a>.Value, "Mech Install^'Hours'!O375", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7951", "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air", <a><![CDATA[Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air]]></a>.Value, "Mech Install^'Hours'!R374", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7952", "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours]]></a>.Value, "Mech Install^'Hours'!Q374", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7953", "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P374", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7954", "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY]]></a>.Value, "Mech Install^'Hours'!O374", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7955", "Plt_Cnvyr_MISC_Puller_Air", <a><![CDATA[Plt_Cnvyr_MISC_Puller_Air]]></a>.Value, "Mech Install^'Hours'!R365", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7956", "Plt_Cnvyr_MISC_Puller_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Puller_Hours]]></a>.Value, "Mech Install^'Hours'!Q365", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7957", "Plt_Cnvyr_MISC_Puller_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Puller_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P365", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7958", "Plt_Cnvyr_MISC_Puller_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Puller_QTY]]></a>.Value, "Mech Install^'Hours'!O365", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7959", "Plt_Cnvyr_MISC_Pusher_Air", <a><![CDATA[Plt_Cnvyr_MISC_Pusher_Air]]></a>.Value, "Mech Install^'Hours'!R364", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7960", "Plt_Cnvyr_MISC_Pusher_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Pusher_Hours]]></a>.Value, "Mech Install^'Hours'!Q364", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7961", "Plt_Cnvyr_MISC_Pusher_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Pusher_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P364", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7962", "Plt_Cnvyr_MISC_Pusher_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Pusher_QTY]]></a>.Value, "Mech Install^'Hours'!O364", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7963", "Plt_Cnvyr_MISC_Robot_Air", <a><![CDATA[Plt_Cnvyr_MISC_Robot_Air]]></a>.Value, "Mech Install^'Hours'!R369", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7964", "Plt_Cnvyr_MISC_Robot_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Robot_Hours]]></a>.Value, "Mech Install^'Hours'!Q369", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7965", "Plt_Cnvyr_MISC_Robot_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Robot_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P369", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7966", "Plt_Cnvyr_MISC_Robot_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Robot_QTY]]></a>.Value, "Mech Install^'Hours'!O369", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7967", "Plt_Cnvyr_MISC_Sizing_Station_Air", <a><![CDATA[Plt_Cnvyr_MISC_Sizing_Station_Air]]></a>.Value, "Mech Install^'Hours'!R366", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7968", "Plt_Cnvyr_MISC_Sizing_Station_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Sizing_Station_Hours]]></a>.Value, "Mech Install^'Hours'!Q366", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7969", "Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P366", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7970", "Plt_Cnvyr_MISC_Sizing_Station_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Sizing_Station_QTY]]></a>.Value, "Mech Install^'Hours'!O366", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7971", "Plt_Cnvyr_MISC_Supports_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Supports_Hours]]></a>.Value, "Mech Install^'Hours'!Q359", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7972", "Plt_Cnvyr_MISC_Supports_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Supports_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P359", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7973", "Plt_Cnvyr_MISC_Supports_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Supports_QTY]]></a>.Value, "Mech Install^'Hours'!O359", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7974", "Plt_Cnvyr_MISC_Transfer_Air", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Air]]></a>.Value, "Mech Install^'Hours'!R363", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7975", "Plt_Cnvyr_MISC_Transfer_Car_Air", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Car_Air]]></a>.Value, "Mech Install^'Hours'!R367", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7976", "Plt_Cnvyr_MISC_Transfer_Car_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Car_Hours]]></a>.Value, "Mech Install^'Hours'!Q367", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7977", "Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P367", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7978", "Plt_Cnvyr_MISC_Transfer_Car_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Car_QTY]]></a>.Value, "Mech Install^'Hours'!O367", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7979", "Plt_Cnvyr_MISC_Transfer_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Hours]]></a>.Value, "Mech Install^'Hours'!Q363", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7980", "Plt_Cnvyr_MISC_Transfer_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P363", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7981", "Plt_Cnvyr_MISC_Transfer_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Transfer_QTY]]></a>.Value, "Mech Install^'Hours'!O363", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7982", "Plt_Cnvyr_MISC_Turntable_Air", <a><![CDATA[Plt_Cnvyr_MISC_Turntable_Air]]></a>.Value, "Mech Install^'Hours'!R360", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7983", "Plt_Cnvyr_MISC_Turntable_Hours", <a><![CDATA[Plt_Cnvyr_MISC_Turntable_Hours]]></a>.Value, "Mech Install^'Hours'!Q360", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7984", "Plt_Cnvyr_MISC_Turntable_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_MISC_Turntable_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P360", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7985", "Plt_Cnvyr_MISC_Turntable_QTY", <a><![CDATA[Plt_Cnvyr_MISC_Turntable_QTY]]></a>.Value, "Mech Install^'Hours'!O360", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7986", "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air", <a><![CDATA[Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air]]></a>.Value, "Mech Install^'Hours'!R353", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7987", "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours", <a><![CDATA[Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q353", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7988", "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P353", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7989", "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY", <a><![CDATA[Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O353", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7990", "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air", <a><![CDATA[Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air]]></a>.Value, "Mech Install^'Hours'!R355", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7991", "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours", <a><![CDATA[Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q355", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7992", "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P355", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7993", "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY", <a><![CDATA[Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O355", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7994", "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air", <a><![CDATA[Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air]]></a>.Value, "Mech Install^'Hours'!R356", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7995", "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours", <a><![CDATA[Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q356", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7996", "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P356", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7997", "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY", <a><![CDATA[Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O356", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7998", "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air", <a><![CDATA[Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air]]></a>.Value, "Mech Install^'Hours'!R354", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("7999", "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours", <a><![CDATA[Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours]]></a>.Value, "Mech Install^'Hours'!Q354", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8000", "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P354", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8001", "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY", <a><![CDATA[Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY]]></a>.Value, "Mech Install^'Hours'!O354", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8002", "Plt_Cnvyr_T5_Chain_Chain_Install_Hours", <a><![CDATA[Plt_Cnvyr_T5_Chain_Chain_Install_Hours]]></a>.Value, "Mech Install^'Hours'!Q357", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8003", "Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea", <a><![CDATA[Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea]]></a>.Value, "Mech Install^'Hours'!P357", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8004", "Plt_Cnvyr_T5_Chain_Chain_Install_QTY", <a><![CDATA[Plt_Cnvyr_T5_Chain_Chain_Install_QTY]]></a>.Value, "Mech Install^'Hours'!O357", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8005", "Plt_Cnvyr_Total_Air", <a><![CDATA[Plt_Cnvyr_Total_Air]]></a>.Value, "Mech Install^'Hours'!R385", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8006", "Plt_Cnvyr_Total_Footage", <a><![CDATA[Plt_Cnvyr_Total_Footage]]></a>.Value, "Mech Install^'Hours'!S385", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8007", "Plt_Cnvyr_Total_Hours", <a><![CDATA[Plt_Cnvyr_Total_Hours]]></a>.Value, "Mech Install^'Hours'!Q385", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8008", "Plt_Cnvyr_Unloading", <a><![CDATA[Plt_Cnvyr_Unloading]]></a>.Value, "Mech Install^'Hours'!Q345", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8009", "Singulated_Flow_Bottom_Guards_HRS", <a><![CDATA[Singulated_Flow_Bottom_Guards_HRS]]></a>.Value, "Mech Install^'Hours'!R324", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8010", "Singulated_Flow_Bottom_Guards_Metrics", <a><![CDATA[Singulated_Flow_Bottom_Guards_Metrics]]></a>.Value, "Mech Install^'Hours'!Q324", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8011", "Singulated_Flow_Bottom_Guards_QTY_FT", <a><![CDATA[Singulated_Flow_Bottom_Guards_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P324", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8012", "Singulated_Flow_Hand_rail_and_cable_HRS", <a><![CDATA[Singulated_Flow_Hand_rail_and_cable_HRS]]></a>.Value, "Mech Install^'Hours'!R322", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8013", "Singulated_Flow_Hand_rail_and_cable_Metrics", <a><![CDATA[Singulated_Flow_Hand_rail_and_cable_Metrics]]></a>.Value, "Mech Install^'Hours'!Q322", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8014", "Singulated_Flow_Hand_rail_and_cable_QTY_FT", <a><![CDATA[Singulated_Flow_Hand_rail_and_cable_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P322", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8015", "Singulated_Flow_Mount_Motors_Drives_HRS", <a><![CDATA[Singulated_Flow_Mount_Motors_Drives_HRS]]></a>.Value, "Mech Install^'Hours'!R323", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8016", "Singulated_Flow_Mount_Motors_Drives_Metrics", <a><![CDATA[Singulated_Flow_Mount_Motors_Drives_Metrics]]></a>.Value, "Mech Install^'Hours'!Q323", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8017", "Singulated_Flow_Mount_Motors_Drives_QTY_FT", <a><![CDATA[Singulated_Flow_Mount_Motors_Drives_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P323", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8018", "Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS", <a><![CDATA[Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS]]></a>.Value, "Mech Install^'Hours'!R321", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8019", "Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics", <a><![CDATA[Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics]]></a>.Value, "Mech Install^'Hours'!Q321", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8020", "Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT", <a><![CDATA[Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT]]></a>.Value, "Mech Install^'Hours'!P321", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8021", "Singulated_Flow_Total_HRS", <a><![CDATA[Singulated_Flow_Total_HRS]]></a>.Value, "Mech Install^'Hours'!R326", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8022", "Struct_Catwalk_Bar_Grating_Hours", <a><![CDATA[Struct_Catwalk_Bar_Grating_Hours]]></a>.Value, "Mech Install^'Hours'!Q303", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8023", "Struct_Catwalk_Bar_Grating_Total_Ft_SqFt", <a><![CDATA[Struct_Catwalk_Bar_Grating_Total_Ft_SqFt]]></a>.Value, "Mech Install^'Hours'!P303", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8024", "Struct_Catwalk_CATWALK_Hours", <a><![CDATA[Struct_Catwalk_CATWALK_Hours]]></a>.Value, "Mech Install^'Hours'!Q307", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8025", "Struct_Catwalk_CATWALK_Total_Ft_SqFt", <a><![CDATA[Struct_Catwalk_CATWALK_Total_Ft_SqFt]]></a>.Value, "Mech Install^'Hours'!P307", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8026", "Struct_Catwalk_GRID_STRUCTURE_Hours", <a><![CDATA[Struct_Catwalk_GRID_STRUCTURE_Hours]]></a>.Value, "Mech Install^'Hours'!Q302", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8027", "Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt", <a><![CDATA[Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt]]></a>.Value, "Mech Install^'Hours'!P302", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8028", "Struct_Catwalk_Resin_Deck_Hours", <a><![CDATA[Struct_Catwalk_Resin_Deck_Hours]]></a>.Value, "Mech Install^'Hours'!Q304", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8029", "Struct_Catwalk_Resin_Deck_Total_Ft_SqFt", <a><![CDATA[Struct_Catwalk_Resin_Deck_Total_Ft_SqFt]]></a>.Value, "Mech Install^'Hours'!P304", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8030", "Struct_Catwalk_Ship_Ladders_Hours", <a><![CDATA[Struct_Catwalk_Ship_Ladders_Hours]]></a>.Value, "Mech Install^'Hours'!Q306", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8031", "Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt", <a><![CDATA[Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt]]></a>.Value, "Mech Install^'Hours'!P306", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8032", "Struct_Catwalk_Stair_Landing_Hours", <a><![CDATA[Struct_Catwalk_Stair_Landing_Hours]]></a>.Value, "Mech Install^'Hours'!Q305", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8033", "Struct_Catwalk_Stair_Landing_Total_Ft_SqFt", <a><![CDATA[Struct_Catwalk_Stair_Landing_Total_Ft_SqFt]]></a>.Value, "Mech Install^'Hours'!P305", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8034", "Total_Subsystem_Hours", <a><![CDATA[Total_Subsystem_Hours]]></a>.Value, "Mech Install^'Hours'!P210", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8035", "ZFA_Retrofit_Bed_Footage", <a><![CDATA[ZFA_Retrofit_Bed_Footage]]></a>.Value, "Mech Install^'Hours'!S391", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8036", "ZFA_Retrofit_Intelliq", <a><![CDATA[ZFA_Retrofit_Intelliq]]></a>.Value, "Mech Install^'Hours'!S395", "Boolean","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8037", "ZFA_Retrofit_Remove_Guard_Rail_Hours", <a><![CDATA[ZFA_Retrofit_Remove_Guard_Rail_Hours]]></a>.Value, "Mech Install^'Hours'!P391", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8038", "ZFA_Retrofit_Remove_Guard_Rail_QTY", <a><![CDATA[ZFA_Retrofit_Remove_Guard_Rail_QTY]]></a>.Value, "Mech Install^'Hours'!O391", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8039", "ZFA_Retrofit_Remove_Rollers_Hours", <a><![CDATA[ZFA_Retrofit_Remove_Rollers_Hours]]></a>.Value, "Mech Install^'Hours'!P392", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8040", "ZFA_Retrofit_Remove_Rollers_QTY", <a><![CDATA[ZFA_Retrofit_Remove_Rollers_QTY]]></a>.Value, "Mech Install^'Hours'!O392", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8041", "ZFA_Retrofit_Replace_Guard_Railing_Hours", <a><![CDATA[ZFA_Retrofit_Replace_Guard_Railing_Hours]]></a>.Value, "Mech Install^'Hours'!P397", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8042", "ZFA_Retrofit_Replace_Guard_Railing_QTY", <a><![CDATA[ZFA_Retrofit_Replace_Guard_Railing_QTY]]></a>.Value, "Mech Install^'Hours'!O397", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8043", "ZFA_Retrofit_Replace_Modules_Hours", <a><![CDATA[ZFA_Retrofit_Replace_Modules_Hours]]></a>.Value, "Mech Install^'Hours'!P395", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8044", "ZFA_Retrofit_Replace_Modules_QTY", <a><![CDATA[ZFA_Retrofit_Replace_Modules_QTY]]></a>.Value, "Mech Install^'Hours'!O395", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8045", "ZFA_Retrofit_Replace_Puck_Sets_Hours", <a><![CDATA[ZFA_Retrofit_Replace_Puck_Sets_Hours]]></a>.Value, "Mech Install^'Hours'!P394", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8046", "ZFA_Retrofit_Replace_Puck_Sets_QTY", <a><![CDATA[ZFA_Retrofit_Replace_Puck_Sets_QTY]]></a>.Value, "Mech Install^'Hours'!O394", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8047", "ZFA_Retrofit_Replace_Rollers", <a><![CDATA[ZFA_Retrofit_Replace_Rollers]]></a>.Value, "Mech Install^'Hours'!S394", "Boolean","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8048", "ZFA_Retrofit_Replace_Rollers_Hours", <a><![CDATA[ZFA_Retrofit_Replace_Rollers_Hours]]></a>.Value, "Mech Install^'Hours'!P396", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    AddProperty("8049", "ZFA_Retrofit_Replace_Rollers_QTY", <a><![CDATA[ZFA_Retrofit_Replace_Rollers_QTY]]></a>.Value, "Mech Install^'Hours'!O396", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8050", "ZFA_Retrofit_Roller_Centers", <a><![CDATA[ZFA_Retrofit_Roller_Centers]]></a>.Value, "Mech Install^'Hours'!S392", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8051", "ZFA_Retrofit_Roller_Count", <a><![CDATA[ZFA_Retrofit_Roller_Count]]></a>.Value, "Mech Install^'Hours'!S396", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8052", "ZFA_Retrofit_Run_Air_Tubing_Hours", <a><![CDATA[ZFA_Retrofit_Run_Air_Tubing_Hours]]></a>.Value, "Mech Install^'Hours'!P393", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8053", "ZFA_Retrofit_Run_Air_Tubing_QTY", <a><![CDATA[ZFA_Retrofit_Run_Air_Tubing_QTY]]></a>.Value, "Mech Install^'Hours'!O393", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8054", "ZFA_Retrofit_Total_hours_Hours", <a><![CDATA[ZFA_Retrofit_Total_hours_Hours]]></a>.Value, "Mech Install^'Hours'!P398", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8055", "ZFA_Retrofit_Total_hours_per_12_ft_Bed", <a><![CDATA[ZFA_Retrofit_Total_hours_per_12_ft_Bed]]></a>.Value, "Mech Install^'Hours'!Q398", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("8056", "ZFA_Retrofit_Zone_Length", <a><![CDATA[ZFA_Retrofit_Zone_Length]]></a>.Value, "Mech Install^'Hours'!S393", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:02 PM")
    AddProperty("7115", "PartNumber", <a><![CDATA[Part Number]]></a>.Value, "", "String","N","System","MN", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/1/2025 6:39:01 PM")
    
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize_Process(ByVal lngProcessID as Integer) Implements RuleStream.IRsPartFormulas.InitializeProcess
    Select Case lngProcessID
    
    Case Else
    Process = "DefaultProcess"
    End Select
    End Sub

    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Properties()
    Dim ctx as String
    ctx = ContextId
    
            If Incontext("-1", ctx) Then
          InitProperty("a_Sample_Cnvy_Hrs_MDR_Bed_Size", "6716", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10436)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("bool_Include_In_Subsystem", "6741", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10467)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("DisplayName", "6761", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10502)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Anchors_Dollars", "6717", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10437)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Anchors_Hours", "6718", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10439)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Anchors_Qty", "6719", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10441)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Subsystem_Efficiency_Dollars", "6720", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10443)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Subsystem_Efficiency_Hours", "6721", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10445)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Subsystem_Efficiency_Qty", "6722", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10447)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Total_Dollars", "6723", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10449)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Total_Hours", "6724", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10450)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Add_Hours_Dollars_Total_Qty", "6725", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10451)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_112_inches_pipe", "6726", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10452)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_12_inches_pipe", "6727", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10453)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_212_inches_pipe", "6728", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10454)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_3pipe", "6729", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10455)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_78_inches_pipe", "6730", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10456)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_AC", "6731", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10457)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_CHAINLUB", "6732", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10458)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_Dryer", "6733", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10459)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_FILTERREG", "6734", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10460)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_RedAC", "6735", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10461)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_SUBTOTAL", "6736", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10462)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_SUBTOTAL_Hours", "6737", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10463)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_SUBTOTAL_Units", "6738", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10464)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_Total_Hours", "6739", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10465)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Air_Piping_Tubing", "6740", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10466)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Bottom_Guards_HRS", "6742", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10468)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Bottom_Guards_Metrics", "6743", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10470)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Bottom_Guards_QTY_FT", "6744", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10472)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_BULK_FLOW_FOOTAGE_HRS", "6745", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10474)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics", "6746", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10476)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT", "6747", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10478)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Hand_rail_and_cable_HRS", "6748", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:02 PM", "", "In Development",  0,10480)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Hand_rail_and_cable_Metrics", "6749", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10482)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Hand_rail_and_cable_QTY_FT", "6750", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10484)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Mount_Motors_Drives_HRS", "6751", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10486)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Mount_Motors_Drives_Metrics", "6752", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10488)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Mount_Motors_Drives_QTY_FT", "6753", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10490)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Bulk_Flow_Total_HRS", "6754", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10492)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Cost_of_Air_per_Linear_Foot", "6755", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10493)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("DATA_CPNumber", "6756", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10494)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("DATA_Raw", "6757", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10495)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Demo_Removed_existing_Ft", "6758", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10496)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Demo_Removed_existing_Hours", "6759", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10498)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Demo_Removed_existing_Scrap_1_or_Keep_2", "6760", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10500)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Extra_Filter_Regulators", "6762", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10503)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Air_Devices", "6763", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10504)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Beds_Avg_Height", "6764", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10505)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Beds_Hours", "6765", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10506)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Beds_Units", "6766", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10507)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Belting_Hours", "6767", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10508)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Belting_Units", "6768", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10509)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Layout_Hours", "6769", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10510)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Layout_Units", "6770", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10511)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_RunIn_Hours", "6771", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10512)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_RunIn_Units", "6772", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10513)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_SideGuide_Footage", "6773", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10514)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_SideGuide_Hours", "6774", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10515)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_SideGuide_Units", "6775", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10516)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Supports_Hours", "6776", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10517)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Supports_Units", "6777", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10518)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Total_Footage", "6778", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10519)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Total_Hours", "6779", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10520)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Total_Units", "6780", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10521)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Unloading_Hours", "6781", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10522)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltBrakeMeter_Unloading_Units", "6782", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:03 PM", "", "In Development",  0,10523)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Beds_Avg_Height", "6783", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10524)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Beds_Hours", "6784", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10525)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Beds_Units", "6785", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10526)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Belting_Hours", "6786", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10527)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Belting_Units", "6787", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10528)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Layout_Hours", "6788", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10529)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Layout_Units", "6789", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10530)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_RunIn_Hours", "6790", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10531)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_RunIn_Units", "6791", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10532)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_SideGuide_Footage", "6792", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10533)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_SideGuide_Hours", "6793", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10534)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_SideGuide_Units", "6794", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10535)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Supports_Hours", "6795", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10536)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Supports_Units", "6796", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10537)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Total_Footage", "6797", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10538)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Total_Hours", "6798", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10539)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Total_Units", "6799", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10540)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Unloading_Hours", "6800", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10541)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonRoller_Unloading_Units", "6801", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10542)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Beds_Avg_Height", "6802", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10543)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Beds_Hours", "6803", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10544)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Beds_Units", "6804", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10545)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Belting_Hours", "6805", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10546)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Belting_Units", "6806", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10547)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Layout_Hours", "6807", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10548)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Layout_Units", "6808", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10549)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_RunIn_Hours", "6809", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10550)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_RunIn_Units", "6810", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10551)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_SideGuide_Footage", "6811", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10552)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_SideGuide_Hours", "6812", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10553)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_SideGuide_Units", "6813", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10554)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Supports_Hours", "6814", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10555)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Supports_Units", "6815", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10556)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Total_Footage", "6816", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:04 PM", "", "In Development",  0,10557)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Total_Hours", "6817", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10558)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Total_Units", "6818", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10559)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Unloading_Hours", "6819", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10560)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltonSlider_Unloading_Units", "6820", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10561)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Beds_Avg_Height", "6821", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10562)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Beds_Hours", "6822", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10563)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Beds_Units", "6823", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10564)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Belting_Hours", "6824", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10565)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Belting_Units", "6825", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10566)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Layout_Hours", "6826", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10567)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Layout_Units", "6827", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10568)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_RunIn_Hours", "6828", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10569)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_RunIn_Units", "6829", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10570)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_SideGuide_Footage", "6830", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10571)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_SideGuide_Hours", "6831", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10572)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_SideGuide_Units", "6832", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10573)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Supports_Hours", "6833", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10574)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Supports_Units", "6834", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10575)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Total_Footage", "6835", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10576)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Total_Hours", "6836", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10577)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Total_Units", "6837", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10578)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Unloading_Hours", "6838", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10579)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_BeltStaging_Unloading_Units", "6839", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10580)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Buyout_Footage", "6840", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10581)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Buyout_Total_Footage", "6841", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10582)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Beds_Avg_Height", "6842", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10583)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Beds_Hours", "6843", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10584)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Beds_Units", "6844", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10585)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Belting_Hours", "6845", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10586)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Belting_Units", "6846", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:05 PM", "", "In Development",  0,10587)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Layout_Hours", "6847", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10588)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Layout_Units", "6848", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10589)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_RunIn_Hours", "6849", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10590)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_RunIn_Units", "6850", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10591)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_SideGuide_Hours", "6851", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10592)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_SideGuide_Units", "6852", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10593)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Supports_Hours", "6853", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10594)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Supports_Units", "6854", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10595)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Total_Footage", "6855", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10596)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Total_Hours", "6856", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10597)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Total_Units", "6857", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10598)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Unloading_Hours", "6858", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10599)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Chutes_Unloading_Units", "6859", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10600)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Belting_Hours", "6860", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10601)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Belting_Units", "6861", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10602)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Catwalk_Hours", "6862", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10603)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Catwalk_Units", "6863", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10604)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Layout_Hours", "6864", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10605)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Layout_Units", "6865", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10606)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_RunIn_Hours", "6866", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10607)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_SideGuide_Hours", "6867", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10608)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_SideGuide_Units", "6868", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10609)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Supports_Hours", "6869", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10610)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Supports_Units", "6870", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10611)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Total_Hours", "6871", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10612)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Total_Units", "6872", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10613)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Unloading_Hours", "6873", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10614)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Crossovers_Unloading_Units", "6874", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10615)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Beds_Avg_Height", "6875", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:06 PM", "", "In Development",  0,10616)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Beds_Hours", "6876", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10617)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Beds_Units", "6877", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10618)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Belting_Hours", "6878", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10619)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Belting_Units", "6879", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10620)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Layout_Hours", "6880", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10621)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Layout_Units", "6881", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10622)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_RunIn_Hours", "6882", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10623)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_RunIn_Units", "6883", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10624)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_SideGuide_Footage", "6884", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10625)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_SideGuide_Units", "6885", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10626)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Supports_Hours", "6886", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10627)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Supports_Units", "6887", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10628)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Total_Footage", "6888", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10629)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Total_Hours", "6889", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10630)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Total_Units", "6890", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10631)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Unloading_Hours", "6891", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10632)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ECCTrashBelt_Unloading_Units", "6892", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10633)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Beds_Avg_Height", "6893", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10634)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Beds_Hours", "6894", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10635)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Beds_Units", "6895", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10636)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Belting_Hours", "6896", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10637)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Belting_Units", "6897", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10638)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Layout_Hours", "6898", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10639)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Layout_Units", "6899", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10640)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_RunIn_Hours", "6900", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10641)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_RunIn_Units", "6901", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10642)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_SideGuide_Hours", "6902", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:07 PM", "", "In Development",  0,10643)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_SideGuide_Units", "6903", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10644)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Supports_Hours", "6904", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10645)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Supports_Units", "6905", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10646)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Total_Footage", "6906", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10647)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Total_Hours", "6907", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10648)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Total_Units", "6908", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10649)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Unloading_Hours", "6909", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10650)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_FlatBeltCurves_Unloading_Units", "6910", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10651)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Beds_Avg_Height", "6911", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10652)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Beds_Hours", "6912", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10653)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Beds_Units", "6913", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10654)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Belting_Footage", "6914", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10655)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Belting_Hours", "6915", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10656)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Belting_Units", "6916", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10657)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Layout_Hours", "6917", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10658)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Layout_Units", "6918", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10659)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_RunIn_Hours", "6919", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10660)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_RunIn_Units", "6920", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10661)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_SideGuide_Footage", "6921", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10662)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_SideGuide_Hours", "6922", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10663)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_SideGuide_Units", "6923", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10664)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Supports_Hours", "6924", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10665)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Supports_Units", "6925", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10666)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Total_Footage", "6926", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10667)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Total_Hours", "6927", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10668)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Total_Units", "6928", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10669)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Unloading_Hours", "6929", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:08 PM", "", "In Development",  0,10670)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Gravity_Unloading_Units", "6930", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10671)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Beds_Hours", "6931", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10672)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Beds_Units", "6932", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10673)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Belting_Hours", "6933", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10674)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Belting_Units", "6934", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10675)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Layout_Hours", "6935", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10676)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Layout_Units", "6936", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10677)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_RunIn_Hours", "6937", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10678)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_RunIn_Units", "6938", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10679)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_SideGuide_Hours", "6939", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10680)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_SideGuide_Units", "6940", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10681)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Supports_Hours", "6941", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10682)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Supports_Units", "6942", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10683)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Total_Hours", "6943", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10684)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Total_Units", "6944", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10685)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Unloading_Hours", "6945", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10686)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_GravityTrailerLoader_Unloading_Units", "6946", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10687)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Seismic_Factor", "6947", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10688)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Total_Hours", "6948", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10689)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Total_Qty", "6949", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10690)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_A_Hours", "6950", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10691)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_A_Qty", "6951", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10692)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_B_Hours", "6952", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10693)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_B_Qty", "6953", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10694)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_C_Hours", "6954", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10695)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_C_Qty", "6955", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10696)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_D_Hours", "6956", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:09 PM", "", "In Development",  0,10697)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_D_Qty", "6957", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10698)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_E_Hours", "6958", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10699)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_E_Qty", "6959", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10700)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_F_Hours", "6960", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10701)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_F_Qty", "6961", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10702)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_G_Hours", "6962", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10703)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_G_Qty", "6963", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10704)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_K_Hours", "6964", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10705)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_K_Qty", "6965", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10706)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_M_Hours", "6966", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10707)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_M_Qty", "6967", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10708)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_N_Hours", "6968", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10709)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_N_Qty", "6969", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10710)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_P_Hours", "6970", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10711)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_P_Qty", "6971", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10712)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_R_Hours", "6972", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10713)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Hanger_Type_R_Qty", "6973", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10714)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Header_Steel_and_Hangers_Ea_Total_Hours", "6974", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10715)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_Header_Steel_Hangers_Ea_Total_Units", "6975", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10716)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Beds_Hours", "6976", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10717)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Beds_Units", "6977", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10718)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Belting_Hours", "6978", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10719)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Belting_Units", "6979", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10720)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Layout_Hours", "6980", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10721)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Layout_Units", "6981", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10722)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_RunIn_Hours", "6982", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:10 PM", "", "In Development",  0,10723)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_RunIn_Units", "6983", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10724)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_SideGuide_Footage", "6984", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10725)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_SideGuide_Hours", "6985", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10726)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_SideGuide_Units", "6986", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10727)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Supports_Hours", "6987", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10728)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Supports_Units", "6988", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10729)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Total_Footage", "6989", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10730)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Total_Hours", "6990", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10731)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Total_Units", "6991", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10732)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Unloading_Hours", "6992", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10733)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliFlow_Unloading_Units", "6993", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10734)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Beds_Hours", "6994", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10735)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Beds_Units", "6995", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10736)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Belting_Hours", "6996", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10737)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Belting_Units", "6997", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10738)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Layout_Hours", "6998", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10739)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Layout_Units", "6999", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10740)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_RunIn_Hours", "7000", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10741)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_RunIn_Units", "7001", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10742)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_SideGuide_Footage", "7002", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10743)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_SideGuide_Hours", "7003", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10744)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_SideGuide_Units", "7004", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10745)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Supports_Hours", "7005", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10746)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Supports_Units", "7006", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10747)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Total_Footage", "7007", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10748)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Total_Hours", "7008", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10749)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Total_Units", "7009", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:11 PM", "", "In Development",  0,10750)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Unloading_Hours", "7010", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10751)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliMerge_Unloading_Units", "7011", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10752)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Beds_Avg_Height", "7012", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10753)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Beds_Hours", "7013", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10754)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Beds_Units", "7014", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10755)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Belting_Hours", "7015", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10756)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Belting_Units", "7016", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10757)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Layout_Hours", "7017", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10758)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Layout_Units", "7018", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10759)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_RunIn_Hours", "7019", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10760)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_RunIn_Units", "7020", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10761)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_SideGuide_Footage", "7021", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10762)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_SideGuide_Hours", "7022", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10763)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_SideGuide_Units", "7023", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10764)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Supports_Hours", "7024", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10765)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Supports_Units", "7025", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10766)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Total_Footage", "7026", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10767)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Total_Hours", "7027", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10768)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Total_Units", "7028", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10769)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Unloading_Hours", "7029", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10770)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_IntelliQAccuglide_Unloading_Units", "7030", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10771)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Beds_Avg_Height", "7031", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10772)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Beds_Hours", "7032", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10773)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Beds_Units", "7033", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10774)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Belting_Hours", "7034", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:12 PM", "", "In Development",  0,10775)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Belting_Units", "7035", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10776)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Diverts", "7036", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10777)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Gates", "7037", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10778)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Layout_Hours", "7038", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10779)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Layout_Units", "7039", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10780)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Pneumatic_Diverts", "7040", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10781)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Pneumatic_Transfers", "7041", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10782)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_RunIn_Hours", "7042", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10783)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_RunIn_Units", "7043", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10784)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_SideGuide_Footage", "7044", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10785)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_SideGuide_Hours", "7045", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10786)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_SideGuide_Units", "7046", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10787)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Supports_Hours", "7047", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10788)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Supports_Units", "7048", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10789)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Total_Footage", "7049", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10790)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Total_Hours", "7050", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10791)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Total_Units", "7051", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10792)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Transfers", "7052", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10793)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Unloading_Hours", "7053", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10794)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_MDR_Unloading_Units", "7054", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10795)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Beds_Avg_Height", "7055", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10796)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Beds_Hours", "7056", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10797)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Beds_Units", "7057", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10798)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Belting_Hours", "7058", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10799)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Belting_Units", "7059", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:13 PM", "", "In Development",  0,10800)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Layout_Hours", "7060", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10801)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Layout_Units", "7061", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10802)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_RunIn_Hours", "7062", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10803)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_RunIn_Units", "7063", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10804)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_SideGuide_Hours", "7064", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10805)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_SideGuide_Units", "7065", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10806)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Supports_Hours", "7066", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10807)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Supports_Units", "7067", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10808)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Total_Hours", "7068", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10809)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Total_Units", "7069", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10810)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Unloading_Hours", "7070", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10811)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_PoweredTrailerLoader_Unloading_Units", "7071", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10812)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersBeds_Hours", "7072", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10813)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersBeds_Units", "7073", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10814)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersBelting_Hours", "7074", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10815)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersBelting_Units", "7075", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10816)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersLayout_Hours", "7076", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10817)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersLayout_Units", "7077", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10818)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersRunIn_Hours", "7078", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10819)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersRunIn_Units", "7079", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10820)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersSideGuide_Units", "7080", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10821)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersSupports_Hours", "7081", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10822)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersSupports_Units", "7082", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10823)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersTotal_Hours", "7083", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:14 PM", "", "In Development",  0,10824)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersTotal_Units", "7084", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10825)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersUnloading_Hours", "7085", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10826)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ScalesSealersStrappersUnloading_Units", "7086", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10827)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Beds_Hours", "7087", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10828)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Beds_Units", "7088", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10829)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Belting_Hours", "7089", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10830)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Belting_Units", "7090", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10831)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Layout_Hours", "7091", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10832)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Layout_Units", "7092", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10833)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_RunIn_Hours", "7093", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10834)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_RunIn_Units", "7094", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10835)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_SideGuide_Hours", "7095", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10836)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_SideGuide_Units", "7096", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10837)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Supports_Hours", "7097", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10838)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Supports_Units", "7098", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10839)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Total_Footage", "7099", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10840)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Total_Hours", "7100", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10841)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Total_Units", "7101", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10842)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Unloading_Hours", "7102", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10843)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ServoInductunits_Unloading_Units", "7103", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10844)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Beds_Avg_Height", "7104", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10845)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Beds_Hours", "7105", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10846)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Beds_Units", "7106", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10847)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Belting_Hours", "7107", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:15 PM", "", "In Development",  0,10848)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Belting_Units", "7108", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10849)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Diverts", "7109", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10850)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Layout_Hours", "7110", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10851)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Layout_Units", "7111", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10852)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_RunIn_Hours", "7112", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10853)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_RunIn_Units", "7113", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10854)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_SideGuide_Footage", "7114", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10855)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_SideGuide_Hours", "7115", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10856)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_SideGuide_Units", "7116", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10857)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Supports_Hours", "7117", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10858)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Supports_Units", "7118", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10859)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Total_Footage", "7119", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10860)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Total_Hours", "7120", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10861)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Total_Units", "7121", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10862)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Unloading_Hours", "7122", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10863)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_ShoeSorter_Unloading_Units", "7123", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10864)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Beds_Avg_Height", "7124", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10865)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Beds_Hours", "7125", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10866)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Beds_Units", "7126", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10867)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Belting_Hours", "7127", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10868)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Belting_Units", "7128", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10869)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Layout_Hours", "7129", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10870)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Layout_Units", "7130", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:16 PM", "", "In Development",  0,10871)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_RunIn_Hours", "7131", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10872)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_RunIn_Units", "7132", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10873)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_SideGuide_Hours", "7133", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10874)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_SideGuide_Units", "7134", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10875)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Supports_Hours", "7135", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10876)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Supports_Units", "7136", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10877)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Total_Footage", "7137", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10878)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Total_Hours", "7138", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10879)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Total_Units", "7139", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10880)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Unloading_Hours", "7140", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10881)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_SpiralCurvessets_Unloading_Units", "7141", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10882)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Beds_Avg_Height", "7142", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10883)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Beds_Hours", "7143", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10884)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Beds_Units", "7144", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10885)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Belting_Hours", "7145", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10886)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Belting_Units", "7146", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10887)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Layout_Hours", "7147", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10888)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Layout_Units", "7148", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10889)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_RunIn_Hours", "7149", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10890)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_RunIn_Units", "7150", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10891)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_SideGuide_Footage", "7151", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10892)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_SideGuide_Hours", "7152", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10893)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_SideGuide_Units", "7153", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:17 PM", "", "In Development",  0,10894)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Supports_Hours", "7154", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10895)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Supports_Units", "7155", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10896)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Total_Footage", "7156", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10897)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Total_PHours", "7157", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10898)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Total_Units", "7158", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10899)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Unloading_Hours", "7159", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10900)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_VBelt_Unloading_Units", "7160", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10901)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Beds_Avg_Height", "7161", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10902)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Beds_Hours", "7162", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10903)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Beds_Units", "7163", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10904)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Belting_Hours", "7164", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10905)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Belting_Units", "7165", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10906)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Layout_Hours", "7166", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10907)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Layout_Units", "7167", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10908)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_RunIn_Hours", "7168", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10909)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_RunIn_Units", "7169", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10910)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_SideGuide_Footage", "7170", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10911)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_SideGuide_Hours", "7171", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10912)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_SideGuide_Units", "7172", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10913)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Supports_Hours", "7173", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10914)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Supports_Units", "7174", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10915)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Total_Footage", "7175", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10916)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Total_Hours", "7176", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10917)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Total_Units", "7177", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:18 PM", "", "In Development",  0,10918)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Unloading_Hours", "7178", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10919)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("HCAD_WheelDivert_Unloading_Units", "7179", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10920)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_1_Air", "7180", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10921)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_1_Dollars", "7181", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10922)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_1_Hours", "7182", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10923)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_1_Metric", "7183", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10924)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_1_Qty", "7184", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10925)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_2_Air", "7185", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10926)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_2_Dollars", "7186", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10927)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_2_Hours", "7187", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10928)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_2_Metric", "7188", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10929)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_2_Qty", "7189", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10930)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_3_Air", "7190", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10931)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_3_Dollars", "7191", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10932)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_3_Hours", "7192", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10933)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_3_Metric", "7193", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10934)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Style_3_Qty", "7194", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10935)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Total_Air", "7195", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10936)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hours_Misc_Chute_Total_Hours", "7196", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10937)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_80_20_Guards_Air", "7197", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10938)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_80_20_Guards_Dollars", "7198", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10940)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_80_20_Guards_Hours", "7199", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:19 PM", "", "In Development",  0,10942)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_80_20_Guards_Metric", "7200", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10944)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_80_20_Guards_Qty", "7201", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10946)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Angle_Guarding_ft_Air", "7202", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10948)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Angle_Guarding_ft_Dollars", "7203", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10950)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Angle_Guarding_ft_Hours", "7204", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10952)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Angle_Guarding_ft_Metric", "7205", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10954)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Angle_Guarding_ft_Qty", "7206", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10956)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_AR_Induct_Chute_Air", "7207", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10958)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_AR_Induct_Chute_Dollars", "7208", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10960)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_AR_Induct_Chute_Hours", "7209", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10962)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_AR_Induct_Chute_Metric", "7210", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10964)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_AR_Induct_Chute_Qty", "7211", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10966)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_ARSAW_ARSTOWS_Air", "7212", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10968)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_ARSAW_ARSTOWS_Dollars", "7213", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10970)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_ARSAW_ARSTOWS_Hours", "7214", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10972)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_ARSAW_ARSTOWS_Metric", "7215", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10974)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_ARSAW_ARSTOWS_Qty", "7216", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10976)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Autobag_850_Air", "7217", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10978)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Autobag_850_Dollars", "7218", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10980)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Autobag_850_Hours", "7219", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10982)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Autobag_850_Metric", "7220", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:20 PM", "", "In Development",  0,10984)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Autobag_850_Qty", "7221", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10986)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Baffled_Shipping_Chutes_Air", "7222", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10988)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Baffled_Shipping_Chutes_Dollars", "7223", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10990)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Baffled_Shipping_Chutes_Hours", "7224", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10992)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Baffled_Shipping_Chutes_Metric", "7225", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10994)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Baffled_Shipping_Chutes_Qty", "7226", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10996)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Ball_Transfer_Tables_Air", "7227", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,10998)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Ball_Transfer_Tables_Dollars", "7228", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11000)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Ball_Transfer_Tables_Hours", "7229", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11002)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Ball_Transfer_Tables_Metric", "7230", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11004)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Ball_Transfer_Tables_Qty", "7231", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11006)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_BangerBarsHtProte_Air", "7232", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11008)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_BangerBarsHtProte_Dollars", "7233", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11010)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_BangerBarsHtProte_Hours", "7234", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11012)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_BangerBarsHtProte_Metric", "7235", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11014)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_BangerBarsHtProte_Qty", "7236", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11016)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Bottom_Pans_Air", "7237", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11018)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Bottom_Pans_Dollars", "7238", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11020)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Bottom_Pans_Hours", "7239", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11022)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Bottom_Pans_Metric", "7240", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11024)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Bottom_Pans_Qty", "7241", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:21 PM", "", "In Development",  0,11026)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Carton_Erector_Air", "7242", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11028)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Carton_Erector_Dollars", "7243", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11030)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Carton_Erector_Hours", "7244", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11032)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Carton_Erector_Metric", "7245", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11034)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Carton_Erector_Qty", "7246", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11036)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Conveyor_Wipe_Down_Air", "7247", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11038)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Conveyor_Wipe_Down_Dollars", "7248", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11040)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Conveyor_Wipe_Down_Hours", "7249", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11042)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Conveyor_Wipe_Down_Metric", "7250", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11044)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Conveyor_Wipe_Down_Qty", "7251", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11046)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_CVG9_Style_Chute_Air", "7252", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11048)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_CVG9_Style_Chute_Dollars", "7253", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11050)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_CVG9_Style_Chute_Hours", "7254", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11052)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_CVG9_Style_Chute_Metric", "7255", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11054)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_CVG9_Style_Chute_Qty", "7256", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11056)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Deflector_Plows_Air", "7257", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11058)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Deflector_Plows_Dollars", "7258", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11060)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Deflector_Plows_Hours", "7259", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11062)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Deflector_Plows_Metric", "7260", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11064)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Deflector_Plows_Qty", "7261", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11066)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dehnco_Work_Tables_Air", "7262", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:22 PM", "", "In Development",  0,11068)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dehnco_Work_Tables_Dollars", "7263", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11070)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dehnco_Work_Tables_Hours", "7264", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11072)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dehnco_Work_Tables_Metric", "7265", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11074)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dehnco_Work_Tables_Qty", "7266", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11076)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Descrambler_Air", "7267", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11078)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Descrambler_Dollars", "7268", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11080)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Descrambler_Hours", "7269", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11082)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Descrambler_Metric", "7270", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11084)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Descrambler_Qty", "7271", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11086)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dual_Inlet_Spiral_Chute_Air", "7272", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11088)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars", "7273", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11090)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours", "7274", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11092)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric", "7275", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11094)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty", "7276", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11096)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gates_Air", "7277", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11098)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gates_Dollars", "7278", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11100)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gates_Hours", "7279", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11102)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gates_Metric", "7280", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11104)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gates_Qty", "7281", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11106)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gaylord_Tipper_Air", "7282", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11108)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gaylord_Tipper_Dollars", "7283", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:23 PM", "", "In Development",  0,11110)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gaylord_Tipper_Hours", "7284", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11112)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gaylord_Tipper_Metric", "7285", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11114)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gaylord_Tipper_Qty", "7286", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11116)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_GMT_Auto_Unloader_Air", "7287", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11118)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_GMT_Auto_Unloader_Dollars", "7288", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11120)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_GMT_Auto_Unloader_Hours", "7289", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11122)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_GMT_Auto_Unloader_Metric", "7290", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11124)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_GMT_Auto_Unloader_Qty", "7291", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11126)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gravity_Spurs_Air", "7292", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11128)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gravity_Spurs_Dollars", "7293", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11130)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gravity_Spurs_Hours", "7294", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11132)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gravity_Spurs_Metric", "7295", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11134)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Gravity_Spurs_Qty", "7296", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11136)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_HC_Spiral_Chute_Air", "7297", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11138)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_HC_Spiral_Chute_Dollars", "7298", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11140)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_HC_Spiral_Chute_Hours", "7299", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11142)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_HC_Spiral_Chute_Metric", "7300", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11144)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_HC_Spiral_Chute_Qty", "7301", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11146)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Highway_Guarding_P_R_Air", "7302", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:24 PM", "", "In Development",  0,11148)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Highway_Guarding_P_R_Dollars", "7303", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11150)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Highway_Guarding_P_R_Hours", "7304", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11152)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Highway_Guarding_P_R_Metric", "7305", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11154)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Highway_Guarding_P_R_Qty", "7306", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11156)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Intralox_Sorter_Air", "7307", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11158)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Intralox_Sorter_Dollars", "7308", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11160)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Intralox_Sorter_Hours", "7309", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11162)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Intralox_Sorter_Metric", "7310", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11164)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Intralox_Sorter_Qty", "7311", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11166)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Merging_Spirals_Air", "7312", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11168)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Merging_Spirals_Dollars", "7313", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11170)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Merging_Spirals_Hours", "7314", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11172)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Merging_Spirals_Metric", "7315", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11174)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Merging_Spirals_Qty", "7316", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11176)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air", "7317", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11178)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars", "7318", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11180)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours", "7319", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11182)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric", "7320", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:25 PM", "", "In Development",  0,11184)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty", "7321", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11186)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Netting_linear_ft_Air", "7322", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11188)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Netting_linear_ft_Dollars", "7323", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11190)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Netting_linear_ft_Hours", "7324", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11192)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Netting_linear_ft_Metric", "7325", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11194)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Netting_linear_ft_Qty", "7326", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11196)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_PandA_Air", "7327", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11198)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_PandA_Dollars", "7328", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11200)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_PandA_Hours", "7329", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11202)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_PandA_Metric", "7330", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11204)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_PandA_Qty", "7331", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11206)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Personnel_Fencing_Temp_Air", "7332", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11208)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Personnel_Fencing_Temp_Dollars", "7333", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11210)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Personnel_Fencing_Temp_Hours", "7334", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11212)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Personnel_Fencing_Temp_Metric", "7335", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11214)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Personnel_Fencing_Temp_Qty", "7336", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11216)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Pick_Mod_Trash_Chutes_Air", "7337", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11218)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars", "7338", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11220)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Pick_Mod_Trash_Chutes_Hours", "7339", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:26 PM", "", "In Development",  0,11222)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Pick_Mod_Trash_Chutes_Metric", "7340", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11224)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Pick_Mod_Trash_Chutes_Qty", "7341", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11226)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Spirals_Air", "7342", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11228)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Spirals_Dollars", "7343", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11230)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Spirals_Hours", "7344", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11232)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Spirals_Metric", "7345", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11234)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Spirals_Qty", "7346", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11236)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Swing_Arm_Divert_Air", "7347", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11238)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Swing_Arm_Divert_Dollars", "7348", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11240)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Swing_Arm_Divert_Hours", "7349", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11242)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Swing_Arm_Divert_Metric", "7350", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11244)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Powered_Swing_Arm_Divert_Qty", "7351", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11246)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_Chute_Air", "7352", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11248)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_Chute_Dollars", "7353", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11250)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_Chute_Hours", "7354", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11252)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_Chute_Metric", "7355", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11254)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_Chute_Qty", "7356", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11256)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_PUT_Walls_Air", "7357", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:27 PM", "", "In Development",  0,11258)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_PUT_Walls_Dollars", "7358", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11260)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_PUT_Walls_Hours", "7359", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11262)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_PUT_Walls_Metric", "7360", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11264)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Proos_PUT_Walls_Qty", "7361", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11266)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_QA_Chute_Air", "7362", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11268)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_QA_Chute_Dollars", "7363", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11270)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_QA_Chute_Hours", "7364", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11272)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_QA_Chute_Metric", "7365", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11274)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_QA_Chute_Qty", "7366", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11276)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Semi_Auto_Taper_Air", "7367", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11278)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Semi_Auto_Taper_Dollars", "7368", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11280)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Semi_Auto_Taper_Hours", "7369", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11282)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Semi_Auto_Taper_Metric", "7370", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11284)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Semi_Auto_Taper_Qty", "7371", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11286)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Singulator_Air", "7372", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11288)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Singulator_Dollars", "7373", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11290)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Singulator_Hours", "7374", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11292)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Singulator_Metric", "7375", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:28 PM", "", "In Development",  0,11294)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Singulator_Qty", "7376", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11296)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SLAMS_Air", "7377", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11298)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SLAMS_Dollars", "7378", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11300)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SLAMS_Hours", "7379", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11302)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SLAMS_Metric", "7380", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11304)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SLAMS_Qty", "7381", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11306)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SmartPac_Machines_Air", "7382", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11308)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SmartPac_Machines_Dollars", "7383", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11310)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SmartPac_Machines_Hours", "7384", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11312)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SmartPac_Machines_Metric", "7385", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11314)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_SmartPac_Machines_Qty", "7386", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11316)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Snowplow_Chute_Air", "7387", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11318)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Snowplow_Chute_Dollars", "7388", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11320)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Snowplow_Chute_Hours", "7389", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11322)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Snowplow_Chute_Metric", "7390", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11324)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Snowplow_Chute_Qty", "7391", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11326)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Sound_Abatement_Hood_Air", "7392", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11328)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Sound_Abatement_Hood_Dollars", "7393", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:29 PM", "", "In Development",  0,11330)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Sound_Abatement_Hood_Hours", "7394", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11332)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Sound_Abatement_Hood_Metric", "7395", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11334)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Sound_Abatement_Hood_Qty", "7396", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11336)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Chutes_Air", "7397", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11338)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Chutes_Dollars", "7398", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11340)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Chutes_Hours", "7399", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11342)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Chutes_Metric", "7400", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11344)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Chutes_Qty", "7401", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11346)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Netting_Air", "7402", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11348)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Netting_Dollars", "7403", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11350)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Netting_Hours", "7404", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11352)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Netting_Metric", "7405", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11354)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Spiral_Netting_Qty", "7406", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11356)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Stuff_It_De_Stuff_It_Air", "7407", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11358)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Stuff_It_De_Stuff_It_Dollars", "7408", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11360)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Stuff_It_De_Stuff_It_Hours", "7409", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11362)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Stuff_It_De_Stuff_It_Metric", "7410", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11364)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Stuff_It_De_Stuff_It_Qty", "7411", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:30 PM", "", "In Development",  0,11366)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tie_Ins_Air", "7412", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11368)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tie_Ins_Dollars", "7413", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11370)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tie_Ins_Hours", "7414", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11372)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tie_Ins_Metric", "7415", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11374)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tie_Ins_Qty", "7416", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11376)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Plows_Air", "7417", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11378)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Plows_Dollars", "7418", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11380)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Plows_Hours", "7419", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11382)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Plows_Metric", "7420", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11384)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Plows_Qty", "7421", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11386)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Shelves_per_linear_ft_Air", "7422", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11388)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars", "7423", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11390)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Shelves_per_linear_ft_Hours", "7424", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11392)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Shelves_per_linear_ft_Metric", "7425", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11394)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Tote_Shelves_per_linear_ft_Qty", "7426", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11396)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_UPS_90_Curve_Chute_Air", "7427", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11398)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_UPS_90_Curve_Chute_Dollars", "7428", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:31 PM", "", "In Development",  0,11400)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_UPS_90_Curve_Chute_Hours", "7429", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11402)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_UPS_90_Curve_Chute_Metric", "7430", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11404)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_UPS_90_Curve_Chute_Qty", "7431", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11406)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_Tote_Stacker_Air", "7432", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11408)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_Tote_Stacker_Dollars", "7433", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11410)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_Tote_Stacker_Hours", "7434", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11412)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_Tote_Stacker_Metric", "7435", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11414)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_Tote_Stacker_Qty", "7436", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11416)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_VICS_Air", "7437", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11418)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_VICS_Dollars", "7438", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11420)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_VICS_Hours", "7439", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11422)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_VICS_Metric", "7440", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11424)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_USS_VICS_Qty", "7441", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11426)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Vertical_Lifts_Air", "7442", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11428)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Vertical_Lifts_Dollars", "7443", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11430)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Vertical_Lifts_Hours", "7444", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11432)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Vertical_Lifts_Metric", "7445", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11434)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Vertical_Lifts_Qty", "7446", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:32 PM", "", "In Development",  0,11436)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Work_Stations_Air", "7447", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11438)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Work_Stations_Dollars", "7448", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11440)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Work_Stations_Hours", "7449", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11442)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Work_Stations_Metric", "7450", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11444)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Hrs_Misc_Work_Stations_Qty", "7451", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11446)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Linear_Footage_of_Conveyor", "7452", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11448)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Linear_Footage_of_Conveyor_Misc_Hours", "7453", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11449)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs", "7454", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11450)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Linear_Footage_of_Conveyor_Total_Conveyor_Hrs", "7455", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11451)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Linear_Footage_of_Conveyor_With_Buyouts", "7456", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11452)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MechInstallHours", "7457", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11453)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MechInstallHoursQ", "7458", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11454)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_90deg_platform_for_PBC_HRS", "7459", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11455)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_90deg_platform_for_PBC_Metrics", "7460", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11457)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_90deg_platform_for_PBC_QTY", "7461", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11459)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Curve_Chute_HRS", "7462", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11461)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Curve_Chute_Metrics", "7463", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:33 PM", "", "In Development",  0,11463)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Curve_Chute_QTY", "7464", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11465)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Dual_crows_nest_HRS", "7465", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11467)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Dual_crows_nest_Metrics", "7466", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11469)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Dual_crows_nest_QTY", "7467", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11471)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_FT_TOTAL_FOR_AREA", "7468", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11473)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_HRS_TOTAL_FOR_AREA", "7469", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11474)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_PBC_HRS", "7470", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11475)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_PBC_Metrics", "7471", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11477)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_PBC_QTY", "7472", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11479)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Single_crows_nest_HRS", "7473", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11481)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Single_crows_nest_Metrics", "7474", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11483)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Single_crows_nest_QTY", "7475", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11485)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Singulator_HRS", "7476", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11487)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Singulator_Metrics", "7477", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11489)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Singulator_QTY", "7478", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11491)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Spiral_Chute_HRS", "7479", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:34 PM", "", "In Development",  0,11493)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Spiral_Chute_Metrics", "7480", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11495)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Spiral_Chute_QTY", "7481", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11497)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Straight_Chute_HRS", "7482", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11499)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Straight_Chute_Metrics", "7483", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11501)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Straight_Chute_QTY", "7484", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11503)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Total_HRS", "7485", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11505)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Transition_plates_HRS", "7486", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11506)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Transition_plates_Metrics", "7487", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11508)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Misc_Parcel_Items_Transition_plates_QTY", "7488", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11510)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_Air_Devices", "7489", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11512)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_Anchors", "7490", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11513)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air", "7491", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11514)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours", "7492", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11516)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics", "7493", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11518)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY", "7494", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11520)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air", "7495", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11522)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours", "7496", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:35 PM", "", "In Development",  0,11524)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics", "7497", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11526)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY", "7498", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11528)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air", "7499", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11530)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours", "7500", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11532)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics", "7501", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11534)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY", "7502", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11536)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air", "7503", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11538)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours", "7504", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11540)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics", "7505", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11542)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY", "7506", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11544)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air", "7507", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11546)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours", "7508", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11548)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY", "7509", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11550)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea", "7510", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11552)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Deflector_Plows_Air", "7511", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11554)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Deflector_Plows_Hours", "7512", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:36 PM", "", "In Development",  0,11556)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea", "7513", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11558)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Deflector_Plows_QTY", "7514", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11560)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air", "7515", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11562)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours", "7516", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11564)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea", "7517", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11566)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY", "7518", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11568)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Footage_Air", "7519", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11570)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Footage_Hours", "7520", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11572)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea", "7521", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11574)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Footage_QTY", "7522", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11576)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Gates_Air", "7523", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11578)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Gates_Hours", "7524", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11580)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea", "7525", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11582)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Fencing_Gates_QTY", "7526", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11584)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air", "7527", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11586)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours", "7528", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11588)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea", "7529", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:37 PM", "", "In Development",  0,11590)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY", "7530", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11592)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Gravity_Spurs_Air", "7531", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11594)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Gravity_Spurs_Hours", "7532", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11596)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea", "7533", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11598)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Gravity_Spurs_QTY", "7534", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11600)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_large_Air", "7535", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11602)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_large_Hours", "7536", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11604)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_large_Hrs_Ea", "7537", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11606)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_large_QTY", "7538", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11608)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_normal_Air", "7539", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11610)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_normal_Hours", "7540", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11612)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea", "7541", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11614)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Lift_normal_QTY", "7542", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11616)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Light_Curtain_Air", "7543", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:38 PM", "", "In Development",  0,11618)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Light_Curtain_Hours", "7544", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11620)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea", "7545", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11622)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Light_Curtain_QTY", "7546", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11624)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pallet_Gates_Air", "7547", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11626)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pallet_Gates_Hours", "7548", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11628)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea", "7549", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11630)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pallet_Gates_QTY", "7550", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11632)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air", "7551", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11634)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours", "7552", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11636)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea", "7553", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11638)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY", "7554", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11640)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Puller_Air", "7555", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11642)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Puller_Hours", "7556", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11644)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Puller_Hrs_Ea", "7557", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11646)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Puller_QTY", "7558", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11648)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pusher_Air", "7559", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:39 PM", "", "In Development",  0,11650)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pusher_Hours", "7560", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11652)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pusher_Hrs_Ea", "7561", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11654)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Pusher_QTY", "7562", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11656)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Robot_Air", "7563", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11658)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Robot_Hours", "7564", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11660)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Robot_Hrs_Ea", "7565", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11662)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Robot_QTY", "7566", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11664)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Sizing_Station_Air", "7567", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11666)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Sizing_Station_Hours", "7568", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11668)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea", "7569", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11670)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Sizing_Station_QTY", "7570", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11672)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Supports_Hours", "7571", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11674)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Supports_Hrs_Ea", "7572", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11676)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Supports_QTY", "7573", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11678)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Air", "7574", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:40 PM", "", "In Development",  0,11680)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Car_Air", "7575", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11682)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Car_Hours", "7576", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11684)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea", "7577", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11686)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Car_QTY", "7578", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11688)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Hours", "7579", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11690)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_Hrs_Ea", "7580", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11692)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Transfer_QTY", "7581", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11694)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Turntable_Air", "7582", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11696)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Turntable_Hours", "7583", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11698)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Turntable_Hrs_Ea", "7584", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11700)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_MISC_Turntable_QTY", "7585", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11702)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air", "7586", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11704)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours", "7587", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11706)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea", "7588", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11708)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY", "7589", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:41 PM", "", "In Development",  0,11710)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air", "7590", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11712)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours", "7591", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11714)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea", "7592", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11716)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY", "7593", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11718)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air", "7594", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11720)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours", "7595", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11722)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea", "7596", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11724)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY", "7597", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11726)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air", "7598", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11728)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours", "7599", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11730)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea", "7600", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11732)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY", "7601", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11734)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_Chain_Install_Hours", "7602", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11736)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea", "7603", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:42 PM", "", "In Development",  0,11738)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_T5_Chain_Chain_Install_QTY", "7604", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11740)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_Total_Air", "7605", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11742)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_Total_Footage", "7606", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11743)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_Total_Hours", "7607", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11744)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Plt_Cnvyr_Unloading", "7608", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11745)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Bottom_Guards_HRS", "7609", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11746)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Bottom_Guards_Metrics", "7610", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11748)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Bottom_Guards_QTY_FT", "7611", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11750)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Hand_rail_and_cable_HRS", "7612", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11752)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Hand_rail_and_cable_Metrics", "7613", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11754)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Hand_rail_and_cable_QTY_FT", "7614", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11756)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Mount_Motors_Drives_HRS", "7615", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11758)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Mount_Motors_Drives_Metrics", "7616", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11760)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Mount_Motors_Drives_QTY_FT", "7617", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11762)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS", "7618", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:43 PM", "", "In Development",  0,11764)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics", "7619", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11766)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT", "7620", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11768)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Singulated_Flow_Total_HRS", "7621", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11770)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Bar_Grating_Hours", "7622", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11771)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Bar_Grating_Total_Ft_SqFt", "7623", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11773)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_CATWALK_Hours", "7624", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11775)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_CATWALK_Total_Ft_SqFt", "7625", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11777)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_GRID_STRUCTURE_Hours", "7626", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11779)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt", "7627", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11781)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Resin_Deck_Hours", "7628", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11783)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Resin_Deck_Total_Ft_SqFt", "7629", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11785)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Ship_Ladders_Hours", "7630", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11787)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt", "7631", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11789)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Stair_Landing_Hours", "7632", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:44 PM", "", "In Development",  0,11791)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Struct_Catwalk_Stair_Landing_Total_Ft_SqFt", "7633", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11793)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Total_Subsystem_Hours", "7634", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11795)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Bed_Footage", "7635", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11796)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Intelliq", "7636", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11797)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Remove_Guard_Rail_Hours", "7637", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11798)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Remove_Guard_Rail_QTY", "7638", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11800)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Remove_Rollers_Hours", "7639", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11802)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Remove_Rollers_QTY", "7640", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11804)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Guard_Railing_Hours", "7641", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11806)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Guard_Railing_QTY", "7642", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11808)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Modules_Hours", "7643", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11810)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Modules_QTY", "7644", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11812)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Puck_Sets_Hours", "7645", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11814)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Puck_Sets_QTY", "7646", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:45 PM", "", "In Development",  0,11816)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Rollers", "7647", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11818)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Rollers_Hours", "7648", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11819)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Replace_Rollers_QTY", "7649", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11821)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Roller_Centers", "7650", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11823)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Roller_Count", "7651", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11824)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Run_Air_Tubing_Hours", "7652", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11825)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Run_Air_Tubing_QTY", "7653", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11827)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Total_hours_Hours", "7654", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11829)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Total_hours_per_12_ft_Bed", "7655", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11831)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("ZFA_Retrofit_Zone_Length", "7656", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/1/2025 6:39:46 PM", "", "In Development",  0,11832)
        End If
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_ValidValues()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Subparts()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Connections()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_DB()
    Dim ctx as String
    ctx = ContextId
    End Sub

    #End Region

    #Region " Formulas "

    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_a_Sample_Cnvy_Hrs_MDR_Bed_Size() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("a_Sample_Cnvy_Hrs_MDR_Bed_Size").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6716; TYPE:PF
      'This formula is a sample to retrive the "Beds_Misc" Value from "MDR" Conveyor Types in the Conveyor_Hours ComponentDB Table (vw_CAE_MEI_CONVEYOR_HRS_MASTER)

Result = 0.0 ' Default value if lookup fails

'Using Constants for Performance / Memory optimization
Const SearchPropertyName As String = "Conveyor_Type" '<= The Property Name of the Primary Key of the Table
Const SearchConveyorType As String = "MDR"           '<= The Value of the Primary Key to Search for
Const ValueProperty      As String = "Beds_Misc"     '<= The Property Containing the Value we wish to retrieve

'This section is Generic, You should only need to copy this proprty, and adjust the constants above
For Each p As part In Me.Parent.Mech_Install_Metrics(1).Conveyor_Hours.Parts
	If p.properties(SearchPropertyName).value.trim().toLower() = SearchConveyorType.Trim().ToLower Then
		Result = p.properties(ValueProperty).value
	End If
Next p
      '   END FORMULA; PROP ID:6716; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_a_Sample_Cnvy_Hrs_MDR_Bed_Size", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_bool_Include_In_Subsystem() As Boolean
          Dim Result as Boolean
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("bool_Include_In_Subsystem").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6741; TYPE:PF
      Result = False
      '   END FORMULA; PROP ID:6741; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_bool_Include_In_Subsystem", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_DisplayName() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("DisplayName").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6761; TYPE:PF
      Result = "Control Panel: " & Me.DATA_CPNumber
      '   END FORMULA; PROP ID:6761; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_DisplayName", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Anchors_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Anchors_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6717; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6717; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Anchors_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Anchors_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6718; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6718; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Anchors_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Anchors_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6719; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6719; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6720; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6720; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6721; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6721; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6722; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6722; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Total_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Total_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6723; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6723; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Total_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6724; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6724; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Total_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Add_Hours_Dollars_Total_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6725; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6725; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Total_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_112_inches_pipe() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_112_inches_pipe").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6726; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6726; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_112_inches_pipe", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_12_inches_pipe() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_12_inches_pipe").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6727; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6727; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_12_inches_pipe", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_212_inches_pipe() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_212_inches_pipe").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6728; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6728; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_212_inches_pipe", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_3pipe() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_3pipe").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6729; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6729; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_3pipe", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_78_inches_pipe() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_78_inches_pipe").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6730; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6730; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_78_inches_pipe", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_AC() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_AC").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6731; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6731; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_AC", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_CHAINLUB() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_CHAINLUB").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6732; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6732; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_CHAINLUB", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_Dryer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_Dryer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6733; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6733; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_Dryer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_FILTERREG() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_FILTERREG").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6734; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6734; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_FILTERREG", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_RedAC() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_RedAC").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6735; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6735; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_RedAC", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_SUBTOTAL() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_SUBTOTAL").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6736; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6736; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_SUBTOTAL", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_SUBTOTAL_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_SUBTOTAL_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6737; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6737; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_SUBTOTAL_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_SUBTOTAL_Units() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_SUBTOTAL_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6738; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6738; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_SUBTOTAL_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6739; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6739; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Air_Piping_Tubing() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Air_Piping_Tubing").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6740; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6740; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Air_Piping_Tubing", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Bottom_Guards_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Bottom_Guards_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6742; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6742; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Bottom_Guards_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Bottom_Guards_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6743; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6743; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Bottom_Guards_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Bottom_Guards_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6744; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6744; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6745; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6745; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6746; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6746; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6747; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6747; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Hand_rail_and_cable_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6748; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6748; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Hand_rail_and_cable_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6749; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6749; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Hand_rail_and_cable_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6750; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6750; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Mount_Motors_Drives_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6751; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6751; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Mount_Motors_Drives_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6752; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6752; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Mount_Motors_Drives_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6753; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6753; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Total_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Bulk_Flow_Total_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6754; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6754; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Total_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Cost_of_Air_per_Linear_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Cost_of_Air_per_Linear_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6755; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6755; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Cost_of_Air_per_Linear_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_DATA_CPNumber() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("DATA_CPNumber").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6756; TYPE:PF
      result = ""
Dim lst As String() = Me.Parent.HCAD_Import_RawData.Split("~")
Dim uniqueVals As New collection

For Each l As String In lst
	
	Dim vals As String() = l.Split(":")
	Dim found As Boolean = False
	
	For Each uniqueVal In uniqueVals
		
		If uniqueVal.Trim() = vals(0).Trim() Then
			found = True
			Exit For
		End If
		
	Next
	
	If Not found Then
		uniqueVals.Add(vals(0))
	End If
	
Next

Result = uniqueVals(Me.SubpartID)
      '   END FORMULA; PROP ID:6756; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_DATA_CPNumber", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_DATA_Raw() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("DATA_Raw").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6757; TYPE:PF
      Dim cpNum As String = Me.DATA_CPNumber
Dim rawData As String() = Me.Parent.HCAD_Import_RawData.Split("~")

For Each dataPoint In rawData
	
	Dim vals As String() = dataPoint.Split(":")
	
	If cpNum.ToUpper().Trim() = vals(0).ToUpper().Trim() Then
		Result &= dataPoint & "^"
	End If
	
Next
      '   END FORMULA; PROP ID:6757; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_DATA_Raw", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Demo_Removed_existing_Ft() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Demo_Removed_existing_Ft").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6758; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6758; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Ft", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Demo_Removed_existing_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Demo_Removed_existing_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6759; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6759; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Demo_Removed_existing_Scrap_1_or_Keep_2() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Demo_Removed_existing_Scrap_1_or_Keep_2").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6760; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:6760; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Scrap_1_or_Keep_2", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Extra_Filter_Regulators() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Extra_Filter_Regulators").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6762; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6762; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Extra_Filter_Regulators", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Air_Devices() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Air_Devices").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6763; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6763; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Air_Devices", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6764; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6764; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6765; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6765; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6766; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6766; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6767; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6767; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6768; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6768; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6769; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6769; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6770; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6770; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6771; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6771; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6772; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6772; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6773; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6773; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6774; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6774; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6775; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6775; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6776; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6776; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6777; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6777; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6778; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6778; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6779; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6779; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6780; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6780; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6781; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6781; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltBrakeMeter_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltBrakeMeter_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6782; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6782; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltBrakeMeter_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6783; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6783; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6784; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6784; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6785; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6785; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6786; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6786; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6787; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6787; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6788; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6788; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6789; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6789; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6790; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6790; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6791; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6791; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6792; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6792; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6793; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6793; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6794; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6794; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6795; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6795; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6796; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6796; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6797; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6797; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6798; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6798; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6799; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6799; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6800; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6800; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonRoller_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonRoller_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6801; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6801; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonRoller_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6802; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6802; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6803; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6803; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6804; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6804; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6805; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6805; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6806; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6806; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6807; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6807; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6808; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6808; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6809; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6809; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6810; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6810; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6811; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6811; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6812; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6812; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6813; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6813; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6814; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6814; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6815; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6815; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6816; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6816; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6817; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6817; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6818; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6818; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6819; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6819; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltonSlider_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltonSlider_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6820; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6820; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltonSlider_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6821; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6821; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6822; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6822; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6823; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6823; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6824; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6824; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6825; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6825; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6826; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6826; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6827; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6827; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6828; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6828; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6829; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6829; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6830; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6830; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6831; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6831; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6832; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6832; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6833; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6833; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6834; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6834; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6835; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6835; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6836; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6836; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6837; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6837; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6838; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6838; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_BeltStaging_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_BeltStaging_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6839; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6839; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_BeltStaging_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Buyout_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Buyout_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6840; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6840; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Buyout_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Buyout_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Buyout_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6841; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6841; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Buyout_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6842; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6842; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6843; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6843; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6844; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6844; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6845; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6845; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6846; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6846; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6847; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6847; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6848; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6848; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6849; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6849; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6850; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6850; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6851; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6851; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6852; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6852; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6853; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6853; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6854; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6854; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6855; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6855; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6856; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6856; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6857; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6857; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6858; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6858; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Chutes_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Chutes_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6859; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6859; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Chutes_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6860; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6860; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6861; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6861; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Catwalk_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Catwalk_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6862; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6862; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Catwalk_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Catwalk_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Catwalk_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6863; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6863; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Catwalk_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6864; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6864; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6865; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6865; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6866; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6866; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6867; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6867; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6868; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6868; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6869; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6869; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6870; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6870; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6871; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6871; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6872; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6872; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6873; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6873; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Crossovers_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Crossovers_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6874; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6874; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Crossovers_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6875; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6875; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6876; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6876; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6877; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6877; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6878; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6878; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6879; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6879; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6880; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6880; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6881; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6881; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6882; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6882; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6883; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6883; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6884; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6884; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6885; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6885; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6886; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6886; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6887; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6887; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6888; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6888; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6889; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6889; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6890; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6890; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6891; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6891; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ECCTrashBelt_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ECCTrashBelt_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6892; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6892; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ECCTrashBelt_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6893; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6893; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6894; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6894; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6895; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6895; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6896; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6896; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6897; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6897; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6898; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6898; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6899; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6899; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6900; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6900; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6901; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6901; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6902; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6902; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6903; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6903; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6904; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6904; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6905; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6905; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6906; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6906; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6907; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6907; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6908; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6908; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6909; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6909; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_FlatBeltCurves_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_FlatBeltCurves_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6910; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6910; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_FlatBeltCurves_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6911; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6911; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6912; TYPE:PF
      Dim MetricsB5 As Double
MetricsB5 = Me.Parent.Mech_Install_Metrics(1).My_Conveyor_Hours.Quantity(1).Me.Parent.Mech_Install_Metrics(1).My_Conveyor_Hours(1).Beds_Misc
Result = HCAD_Gravity_Beds_Units * MetricsB5
      '   END FORMULA; PROP ID:6912; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6913; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6913; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Belting_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Belting_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6914; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6914; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Belting_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6915; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6915; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6916; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6916; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6917; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6917; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6918; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6918; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6919; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6919; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6920; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6920; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6921; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6921; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6922; TYPE:PF
      Dim MetricsF5 As Double


'Using Constants for Performance / Memory optimization
Const SearchPropertyName As String = "Conveyor_Type" '<= The Property Name of the Primary Key of the Table
Const SearchConveyorType As String = "Gravity"           '<= The Value of the Primary Key to Search for
Const ValueProperty      As String = "Side_Guide_per_bed_per_side"     '<= The Property Containing the Value we wish to retrieve

'This section is Generic, You should only need to copy this proprty, and adjust the constants above
For Each p As part In Me.Parent.Mech_Install_Metrics(1).Conveyor_Hours.Parts
	If p.properties(SearchPropertyName).value.trim().toLower() = SearchConveyorType.Trim().ToLower Then
		MetricsF5 = p.properties(ValueProperty).value
	End If
Next p

Result = HCAD_Gravity_SideGuide_Units * MetricsF5
      '   END FORMULA; PROP ID:6922; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6923; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6923; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6924; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6924; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6925; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6925; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Total_Footage() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6926; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6926; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6927; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6927; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6928; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6928; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6929; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6929; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Gravity_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Gravity_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6930; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6930; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Gravity_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6931; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6931; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6932; TYPE:PF
      Result = 0
      '   END FORMULA; PROP ID:6932; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6933; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6933; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6934; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6934; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6935; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6935; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6936; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6936; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6937; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6937; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6938; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6938; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6939; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6939; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6940; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6940; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6941; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6941; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6942; TYPE:PF
      Result = 0
      '   END FORMULA; PROP ID:6942; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6943; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6943; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6944; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6944; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Unloading_Hours() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6945; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6945; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_GravityTrailerLoader_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_GravityTrailerLoader_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6946; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6946; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_GravityTrailerLoader_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Seismic_Factor() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Seismic_Factor").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6947; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6947; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Seismic_Factor", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6948; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6948; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Total_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Total_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6949; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6949; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Total_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_A_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_A_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6950; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6950; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_A_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_A_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_A_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6951; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6951; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_A_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_B_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_B_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6952; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6952; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_B_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_B_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_B_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6953; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6953; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_B_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_C_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_C_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6954; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6954; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_C_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_C_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_C_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6955; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6955; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_C_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_D_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_D_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6956; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6956; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_D_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_D_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_D_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6957; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6957; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_D_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_E_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_E_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6958; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6958; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_E_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_E_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_E_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6959; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6959; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_E_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_F_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_F_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6960; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6960; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_F_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_F_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_F_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6961; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6961; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_F_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_G_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_G_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6962; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6962; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_G_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_G_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_G_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6963; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6963; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_G_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_K_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_K_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6964; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6964; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_K_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_K_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_K_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6965; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6965; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_K_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_M_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_M_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6966; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6966; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_M_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_M_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_M_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6967; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6967; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_M_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_N_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_N_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6968; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6968; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_N_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_N_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_N_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6969; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6969; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_N_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_P_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_P_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6970; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6970; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_P_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_P_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_P_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6971; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6971; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_P_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_R_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_R_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6972; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6972; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_R_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Hanger_Type_R_Qty() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Hanger_Type_R_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6973; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6973; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Hanger_Type_R_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Header_Steel_and_Hangers_Ea_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Header_Steel_and_Hangers_Ea_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6974; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6974; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Header_Steel_and_Hangers_Ea_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_Header_Steel_Hangers_Ea_Total_Units() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_Header_Steel_Hangers_Ea_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6975; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6975; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_Header_Steel_Hangers_Ea_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6976; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6976; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6977; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6977; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6978; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6978; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6979; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6979; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6980; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6980; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6981; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6981; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6982; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6982; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6983; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6983; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6984; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6984; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6985; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6985; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6986; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6986; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6987; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6987; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6988; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6988; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6989; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6989; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6990; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6990; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6991; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6991; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6992; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6992; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliFlow_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliFlow_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6993; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6993; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliFlow_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6994; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6994; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6995; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6995; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6996; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6996; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6997; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6997; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6998; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:6998; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:6999; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:6999; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7000; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7000; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7001; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7001; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7002; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7002; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7003; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7003; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7004; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7004; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7005; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7005; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7006; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7006; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7007; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7007; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7008; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7008; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7009; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7009; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7010; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7010; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliMerge_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliMerge_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7011; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7011; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliMerge_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7012; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7012; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7013; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7013; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7014; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7014; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7015; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7015; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7016; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7016; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7017; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7017; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7018; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7018; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7019; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7019; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7020; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7020; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7021; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7021; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7022; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7022; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7023; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7023; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7024; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7024; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7025; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7025; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7026; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7026; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7027; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7027; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7028; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7028; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7029; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7029; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_IntelliQAccuglide_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_IntelliQAccuglide_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7030; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7030; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_IntelliQAccuglide_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7031; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7031; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7032; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7032; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7033; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7033; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7034; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7034; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7035; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7035; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Diverts() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Diverts").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7036; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7036; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Diverts", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Gates() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Gates").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7037; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7037; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Gates", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7038; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7038; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7039; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7039; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Pneumatic_Diverts() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Pneumatic_Diverts").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7040; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7040; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Pneumatic_Diverts", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Pneumatic_Transfers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Pneumatic_Transfers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7041; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7041; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Pneumatic_Transfers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7042; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7042; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7043; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7043; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7044; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7044; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7045; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7045; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7046; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7046; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7047; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7047; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7048; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7048; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7049; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7049; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7050; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7050; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7051; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7051; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Transfers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Transfers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7052; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7052; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Transfers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7053; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7053; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_MDR_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_MDR_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7054; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7054; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_MDR_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7055; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7055; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7056; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7056; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7057; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7057; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7058; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7058; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7059; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7059; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7060; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7060; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7061; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7061; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7062; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7062; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7063; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7063; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7064; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7064; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7065; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7065; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7066; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7066; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7067; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7067; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7068; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7068; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7069; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7069; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7070; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7070; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_PoweredTrailerLoader_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_PoweredTrailerLoader_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7071; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7071; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_PoweredTrailerLoader_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersBeds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersBeds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7072; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7072; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersBeds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersBeds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersBeds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7073; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7073; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersBeds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersBelting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersBelting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7074; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7074; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersBelting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersBelting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersBelting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7075; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7075; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersBelting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersLayout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersLayout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7076; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7076; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersLayout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersLayout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersLayout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7077; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7077; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersLayout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersRunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersRunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7078; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7078; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersRunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersRunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersRunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7079; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7079; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersRunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersSideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersSideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7080; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7080; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersSideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersSupports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersSupports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7081; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7081; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersSupports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersSupports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersSupports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7082; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7082; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersSupports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersTotal_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersTotal_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7083; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7083; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersTotal_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersTotal_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersTotal_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7084; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7084; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersTotal_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersUnloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersUnloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7085; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7085; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersUnloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ScalesSealersStrappersUnloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ScalesSealersStrappersUnloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7086; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7086; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ScalesSealersStrappersUnloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7087; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7087; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7088; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7088; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7089; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7089; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7090; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7090; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7091; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7091; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7092; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7092; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7093; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7093; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7094; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7094; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7095; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7095; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7096; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7096; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7097; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7097; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7098; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7098; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Total_Footage() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7099; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7099; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7100; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7100; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7101; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7101; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7102; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7102; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ServoInductunits_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ServoInductunits_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7103; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7103; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ServoInductunits_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7104; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7104; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7105; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7105; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7106; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7106; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7107; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7107; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7108; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7108; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Diverts() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Diverts").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7109; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7109; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Diverts", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7110; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7110; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7111; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7111; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7112; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7112; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7113; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7113; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7114; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7114; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7115; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7115; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7116; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7116; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7117; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7117; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7118; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7118; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7119; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7119; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7120; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7120; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7121; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7121; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7122; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7122; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_ShoeSorter_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_ShoeSorter_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7123; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7123; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_ShoeSorter_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7124; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7124; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7125; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7125; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7126; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7126; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7127; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7127; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7128; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7128; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7129; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7129; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7130; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7130; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7131; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7131; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7132; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7132; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7133; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7133; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7134; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7134; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7135; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7135; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7136; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7136; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7137; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7137; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7138; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7138; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7139; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7139; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7140; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7140; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_SpiralCurvessets_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_SpiralCurvessets_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7141; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7141; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_SpiralCurvessets_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7142; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7142; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7143; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7143; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7144; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7144; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7145; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7145; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7146; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7146; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7147; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7147; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7148; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7148; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7149; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7149; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7150; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7150; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7151; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7151; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7152; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7152; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7153; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7153; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7154; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7154; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7155; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7155; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7156; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7156; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Total_PHours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Total_PHours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7157; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7157; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Total_PHours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7158; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7158; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7159; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7159; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_VBelt_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_VBelt_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7160; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7160; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_VBelt_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Beds_Avg_Height() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Beds_Avg_Height").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7161; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7161; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Beds_Avg_Height", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Beds_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Beds_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7162; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7162; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Beds_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Beds_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Beds_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7163; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7163; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Beds_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Belting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Belting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7164; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7164; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Belting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Belting_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Belting_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7165; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7165; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Belting_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Layout_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Layout_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7166; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7166; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Layout_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Layout_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Layout_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7167; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7167; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Layout_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_RunIn_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_RunIn_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7168; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7168; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_RunIn_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_RunIn_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_RunIn_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7169; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7169; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_RunIn_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_SideGuide_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_SideGuide_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7170; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7170; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_SideGuide_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_SideGuide_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_SideGuide_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7171; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7171; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_SideGuide_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_SideGuide_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_SideGuide_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7172; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7172; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_SideGuide_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7173; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7173; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Supports_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Supports_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7174; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7174; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Supports_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7175; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7175; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7176; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7176; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Total_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Total_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7177; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7177; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Total_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Unloading_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Unloading_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7178; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7178; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Unloading_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_HCAD_WheelDivert_Unloading_Units() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("HCAD_WheelDivert_Unloading_Units").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7179; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7179; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_HCAD_WheelDivert_Unloading_Units", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_1_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_1_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7180; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7180; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_1_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_1_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_1_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7181; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7181; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_1_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_1_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_1_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7182; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7182; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_1_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_1_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_1_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7183; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7183; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_1_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_1_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_1_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7184; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7184; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_1_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_2_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_2_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7185; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7185; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_2_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_2_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_2_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7186; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7186; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_2_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_2_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_2_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7187; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7187; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_2_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_2_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_2_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7188; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7188; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_2_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_2_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_2_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7189; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7189; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_2_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_3_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_3_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7190; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7190; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_3_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_3_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_3_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7191; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7191; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_3_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_3_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_3_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7192; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7192; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_3_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_3_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_3_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7193; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7193; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_3_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Style_3_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Style_3_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7194; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7194; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Style_3_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Total_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Total_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7195; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7195; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Total_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hours_Misc_Chute_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hours_Misc_Chute_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7196; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7196; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hours_Misc_Chute_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_80_20_Guards_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7197; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7197; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_80_20_Guards_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7198; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7198; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_80_20_Guards_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7199; TYPE:PF
      Result = Hrs_Misc_80_20_Guards_Qty*Hrs_Misc_80_20_Guards_Metric
      '   END FORMULA; PROP ID:7199; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_80_20_Guards_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7200; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7200; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_80_20_Guards_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7201; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7201; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Angle_Guarding_ft_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7202; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7202; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Angle_Guarding_ft_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7203; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7203; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Angle_Guarding_ft_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7204; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7204; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Angle_Guarding_ft_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7205; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7205; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Angle_Guarding_ft_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7206; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7206; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_AR_Induct_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7207; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7207; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_AR_Induct_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7208; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7208; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_AR_Induct_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7209; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7209; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_AR_Induct_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7210; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7210; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_AR_Induct_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7211; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7211; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7212; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7212; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7213; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7213; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7214; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7214; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7215; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7215; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7216; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7216; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Autobag_850_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7217; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7217; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Autobag_850_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7218; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7218; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Autobag_850_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7219; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7219; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Autobag_850_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7220; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7220; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Autobag_850_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7221; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7221; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7222; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7222; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7223; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7223; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7224; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7224; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7225; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7225; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7226; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7226; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7227; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7227; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7228; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7228; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7229; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7229; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7230; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7230; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7231; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7231; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_BangerBarsHtProte_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7232; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7232; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_BangerBarsHtProte_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7233; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7233; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_BangerBarsHtProte_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7234; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7234; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_BangerBarsHtProte_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7235; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7235; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_BangerBarsHtProte_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7236; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7236; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Bottom_Pans_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7237; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7237; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Bottom_Pans_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7238; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7238; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Bottom_Pans_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7239; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7239; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Bottom_Pans_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7240; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7240; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Bottom_Pans_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7241; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7241; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Carton_Erector_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7242; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7242; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Carton_Erector_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7243; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7243; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Carton_Erector_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7244; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7244; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Carton_Erector_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7245; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7245; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Carton_Erector_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7246; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7246; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7247; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7247; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7248; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7248; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7249; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7249; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7250; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7250; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7251; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7251; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_CVG9_Style_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7252; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7252; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_CVG9_Style_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7253; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7253; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_CVG9_Style_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7254; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7254; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_CVG9_Style_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7255; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7255; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_CVG9_Style_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7256; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7256; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Deflector_Plows_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7257; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7257; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Deflector_Plows_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7258; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7258; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Deflector_Plows_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7259; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7259; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Deflector_Plows_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7260; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7260; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Deflector_Plows_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7261; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7261; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7262; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7262; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7263; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7263; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7264; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7264; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7265; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7265; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7266; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7266; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Descrambler_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7267; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7267; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Descrambler_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7268; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7268; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Descrambler_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7269; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7269; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Descrambler_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7270; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7270; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Descrambler_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7271; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7271; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7272; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7272; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7273; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7273; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7274; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7274; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7275; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7275; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7276; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7276; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gates_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7277; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7277; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gates_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7278; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7278; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gates_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7279; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7279; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gates_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7280; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7280; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gates_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7281; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7281; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gaylord_Tipper_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7282; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7282; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gaylord_Tipper_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7283; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7283; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gaylord_Tipper_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7284; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7284; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gaylord_Tipper_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7285; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7285; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gaylord_Tipper_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7286; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7286; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7287; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7287; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7288; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7288; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7289; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7289; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7290; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7290; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7291; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7291; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gravity_Spurs_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7292; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7292; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gravity_Spurs_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7293; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7293; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gravity_Spurs_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7294; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7294; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gravity_Spurs_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7295; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7295; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Gravity_Spurs_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7296; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7296; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_HC_Spiral_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7297; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7297; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_HC_Spiral_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7298; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7298; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_HC_Spiral_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7299; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7299; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_HC_Spiral_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7300; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7300; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_HC_Spiral_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7301; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7301; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7302; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7302; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7303; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7303; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7304; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7304; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7305; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7305; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7306; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7306; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Intralox_Sorter_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7307; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7307; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Intralox_Sorter_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7308; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7308; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Intralox_Sorter_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7309; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7309; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Intralox_Sorter_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7310; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7310; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Intralox_Sorter_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7311; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7311; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Merging_Spirals_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7312; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7312; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Merging_Spirals_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7313; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7313; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Merging_Spirals_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7314; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7314; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Merging_Spirals_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7315; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7315; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Merging_Spirals_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7316; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7316; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7317; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7317; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7318; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7318; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7319; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7319; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7320; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7320; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7321; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7321; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Netting_linear_ft_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7322; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7322; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Netting_linear_ft_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7323; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7323; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Netting_linear_ft_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7324; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7324; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Netting_linear_ft_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7325; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7325; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Netting_linear_ft_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7326; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7326; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_PandA_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7327; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7327; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_PandA_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7328; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7328; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_PandA_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7329; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7329; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_PandA_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7330; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7330; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_PandA_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7331; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7331; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7332; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7332; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7333; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7333; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7334; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7334; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7335; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7335; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7336; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7336; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7337; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7337; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7338; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7338; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7339; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7339; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7340; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7340; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7341; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7341; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Spirals_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7342; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7342; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Spirals_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7343; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7343; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Spirals_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7344; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7344; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Spirals_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7345; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7345; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Spirals_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7346; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7346; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7347; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7347; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7348; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7348; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7349; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7349; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7350; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7350; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7351; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7351; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7352; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7352; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7353; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7353; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7354; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7354; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7355; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7355; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7356; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7356; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_PUT_Walls_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7357; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7357; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_PUT_Walls_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7358; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7358; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_PUT_Walls_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7359; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7359; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_PUT_Walls_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7360; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7360; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Proos_PUT_Walls_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7361; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7361; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_QA_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7362; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7362; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_QA_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7363; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7363; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_QA_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7364; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7364; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_QA_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7365; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7365; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_QA_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7366; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7366; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Semi_Auto_Taper_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7367; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7367; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Semi_Auto_Taper_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7368; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7368; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Semi_Auto_Taper_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7369; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7369; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Semi_Auto_Taper_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7370; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7370; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Semi_Auto_Taper_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7371; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7371; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Singulator_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7372; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7372; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Singulator_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7373; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7373; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Singulator_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7374; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7374; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Singulator_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7375; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7375; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Singulator_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7376; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7376; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SLAMS_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7377; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7377; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SLAMS_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7378; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7378; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SLAMS_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7379; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7379; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SLAMS_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7380; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7380; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SLAMS_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7381; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7381; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SmartPac_Machines_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7382; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7382; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SmartPac_Machines_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7383; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7383; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SmartPac_Machines_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7384; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7384; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SmartPac_Machines_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7385; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7385; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_SmartPac_Machines_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7386; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7386; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Snowplow_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7387; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7387; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Snowplow_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7388; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7388; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Snowplow_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7389; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7389; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Snowplow_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7390; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7390; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Snowplow_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7391; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7391; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7392; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7392; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7393; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7393; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7394; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7394; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7395; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7395; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7396; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7396; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Chutes_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7397; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7397; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Chutes_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7398; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7398; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Chutes_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7399; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7399; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Chutes_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7400; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7400; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Chutes_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7401; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7401; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Netting_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7402; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7402; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Netting_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7403; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7403; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Netting_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7404; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7404; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Netting_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7405; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7405; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Spiral_Netting_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7406; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7406; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7407; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7407; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7408; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7408; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7409; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7409; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7410; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7410; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7411; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7411; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tie_Ins_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7412; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7412; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tie_Ins_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7413; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7413; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tie_Ins_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7414; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7414; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tie_Ins_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7415; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7415; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tie_Ins_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7416; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7416; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Plows_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7417; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7417; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Plows_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7418; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7418; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Plows_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7419; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7419; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Plows_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7420; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7420; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Plows_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7421; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7421; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7422; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7422; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7423; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7423; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7424; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7424; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7425; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7425; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7426; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7426; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7427; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7427; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7428; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7428; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7429; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7429; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7430; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7430; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7431; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7431; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_Tote_Stacker_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7432; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7432; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_Tote_Stacker_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7433; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7433; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_Tote_Stacker_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7434; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7434; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_Tote_Stacker_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7435; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7435; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_Tote_Stacker_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7436; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7436; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_VICS_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7437; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7437; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_VICS_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7438; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7438; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_VICS_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7439; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7439; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_VICS_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7440; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7440; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_USS_VICS_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7441; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7441; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Vertical_Lifts_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7442; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7442; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Vertical_Lifts_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7443; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7443; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Vertical_Lifts_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7444; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7444; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Vertical_Lifts_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7445; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7445; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Vertical_Lifts_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7446; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7446; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Work_Stations_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7447; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7447; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Dollars() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Work_Stations_Dollars").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7448; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7448; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Dollars", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Work_Stations_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7449; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7449; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Metric() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Work_Stations_Metric").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7450; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7450; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Metric", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Qty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Hrs_Misc_Work_Stations_Qty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7451; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7451; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Qty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Linear_Footage_of_Conveyor() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Linear_Footage_of_Conveyor").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7452; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7452; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Linear_Footage_of_Conveyor", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Linear_Footage_of_Conveyor_Misc_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Linear_Footage_of_Conveyor_Misc_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7453; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7453; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Linear_Footage_of_Conveyor_Misc_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7454; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7454; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Linear_Footage_of_Conveyor_Total_Conveyor_Hrs() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Linear_Footage_of_Conveyor_Total_Conveyor_Hrs").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7455; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7455; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Linear_Footage_of_Conveyor_Total_Conveyor_Hrs", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Linear_Footage_of_Conveyor_With_Buyouts() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Linear_Footage_of_Conveyor_With_Buyouts").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7456; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7456; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Linear_Footage_of_Conveyor_With_Buyouts", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MechInstallHours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MechInstallHours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7457; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7457; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_MechInstallHours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MechInstallHoursQ() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MechInstallHoursQ").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7458; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:7458; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_MechInstallHoursQ", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7459; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7459; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7460; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7460; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7461; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7461; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Curve_Chute_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7462; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7462; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Curve_Chute_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7463; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7463; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Curve_Chute_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7464; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7464; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Dual_crows_nest_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7465; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7465; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Dual_crows_nest_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7466; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7466; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Dual_crows_nest_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7467; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7467; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_FT_TOTAL_FOR_AREA() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_FT_TOTAL_FOR_AREA").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7468; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7468; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_FT_TOTAL_FOR_AREA", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_HRS_TOTAL_FOR_AREA() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_HRS_TOTAL_FOR_AREA").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7469; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7469; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_HRS_TOTAL_FOR_AREA", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_PBC_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_PBC_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7470; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7470; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_PBC_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_PBC_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7471; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7471; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_PBC_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_PBC_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7472; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7472; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Single_crows_nest_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7473; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7473; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Single_crows_nest_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7474; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7474; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Single_crows_nest_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7475; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7475; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Singulator_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Singulator_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7476; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7476; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Singulator_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Singulator_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7477; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7477; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Singulator_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Singulator_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7478; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7478; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Spiral_Chute_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7479; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7479; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Spiral_Chute_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7480; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7480; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Spiral_Chute_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7481; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7481; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Straight_Chute_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7482; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7482; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Straight_Chute_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7483; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7483; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Straight_Chute_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7484; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7484; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Total_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Total_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7485; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7485; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Total_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Transition_plates_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Transition_plates_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7486; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7486; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Transition_plates_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Transition_plates_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7487; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7487; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Transition_plates_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Misc_Parcel_Items_Transition_plates_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7488; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7488; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_Air_Devices() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_Air_Devices").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7489; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7489; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_Air_Devices", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_Anchors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_Anchors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7490; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7490; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_Anchors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7491; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7491; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7492; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7492; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7493; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7493; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7494; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7494; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7495; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7495; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7496; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7496; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7497; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7497; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7498; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7498; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7499; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7499; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7500; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7500; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7501; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7501; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7502; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7502; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7503; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7503; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7504; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7504; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7505; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7505; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7506; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7506; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7507; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7507; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7508; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7508; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7509; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7509; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7510; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7510; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7511; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7511; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7512; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7512; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7513; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7513; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7514; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7514; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7515; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7515; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7516; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7516; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7517; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7517; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7518; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7518; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7519; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7519; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7520; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7520; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7521; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7521; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7522; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7522; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7523; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7523; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7524; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7524; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7525; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7525; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7526; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7526; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7527; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7527; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7528; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7528; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7529; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7529; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7530; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7530; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7531; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7531; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7532; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7532; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7533; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7533; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7534; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7534; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_large_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7535; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7535; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_large_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7536; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7536; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_large_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7537; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7537; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_large_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7538; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7538; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7539; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7539; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7540; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7540; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7541; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7541; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Lift_normal_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7542; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7542; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7543; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7543; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7544; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7544; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7545; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7545; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7546; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7546; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7547; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7547; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7548; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7548; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7549; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7549; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7550; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7550; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7551; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7551; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7552; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7552; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7553; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7553; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7554; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7554; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Puller_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7555; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7555; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Puller_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7556; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7556; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Puller_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7557; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7557; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Puller_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7558; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7558; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pusher_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7559; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7559; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pusher_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7560; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7560; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pusher_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7561; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7561; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Pusher_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7562; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7562; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Robot_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7563; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7563; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Robot_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7564; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7564; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Robot_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7565; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7565; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Robot_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7566; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7566; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7567; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7567; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7568; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7568; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7569; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7569; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7570; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7570; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Supports_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Supports_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7571; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7571; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Supports_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7572; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7572; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Supports_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Supports_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7573; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7573; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7574; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7574; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7575; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7575; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7576; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7576; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7577; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7577; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7578; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7578; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7579; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7579; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7580; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7580; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Transfer_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7581; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7581; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Turntable_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7582; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7582; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Turntable_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7583; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7583; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Turntable_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7584; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7584; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_MISC_Turntable_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7585; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7585; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7586; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7586; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7587; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7587; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7588; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7588; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7589; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7589; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7590; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7590; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7591; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7591; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7592; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7592; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7593; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7593; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7594; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7594; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7595; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7595; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7596; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7596; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7597; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7597; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7598; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7598; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7599; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7599; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7600; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7600; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7601; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7601; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7602; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7602; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7603; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7603; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7604; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7604; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_Total_Air() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_Total_Air").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7605; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7605; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_Total_Air", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7606; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7606; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7607; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7607; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_Unloading() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Plt_Cnvyr_Unloading").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7608; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7608; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_Unloading", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Bottom_Guards_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Bottom_Guards_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7609; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7609; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Bottom_Guards_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Bottom_Guards_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7610; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7610; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Bottom_Guards_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Bottom_Guards_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7611; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7611; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Hand_rail_and_cable_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7612; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7612; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Hand_rail_and_cable_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7613; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7613; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Hand_rail_and_cable_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7614; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7614; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Mount_Motors_Drives_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7615; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7615; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Mount_Motors_Drives_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7616; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7616; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Mount_Motors_Drives_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7617; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7617; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7618; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7618; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7619; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7619; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7620; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7620; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Total_HRS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Singulated_Flow_Total_HRS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7621; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7621; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Total_HRS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Bar_Grating_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Bar_Grating_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7622; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7622; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Bar_Grating_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Bar_Grating_Total_Ft_SqFt").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7623; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7623; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_CATWALK_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_CATWALK_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7624; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7624; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_CATWALK_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_CATWALK_Total_Ft_SqFt").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7625; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7625; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_GRID_STRUCTURE_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7626; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7626; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_GRID_STRUCTURE_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7627; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7627; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Resin_Deck_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Resin_Deck_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7628; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7628; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Resin_Deck_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Resin_Deck_Total_Ft_SqFt").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7629; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7629; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Ship_Ladders_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Ship_Ladders_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7630; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7630; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Ship_Ladders_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7631; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7631; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Stair_Landing_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Stair_Landing_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7632; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7632; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Stair_Landing_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Struct_Catwalk_Stair_Landing_Total_Ft_SqFt").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7633; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7633; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Total_Subsystem_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Total_Subsystem_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7634; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7634; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Total_Subsystem_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Bed_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Bed_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7635; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7635; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Bed_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Intelliq() As Boolean
          Dim Result as Boolean
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Intelliq").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7636; TYPE:PF
      result = True
      '   END FORMULA; PROP ID:7636; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Intelliq", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Remove_Guard_Rail_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7637; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7637; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Remove_Guard_Rail_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7638; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7638; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Rollers_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Remove_Rollers_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7639; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7639; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Rollers_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Rollers_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Remove_Rollers_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7640; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7640; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Rollers_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Guard_Railing_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7641; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7641; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Guard_Railing_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7642; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7642; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Modules_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Modules_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7643; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7643; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Modules_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Modules_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Modules_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7644; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7644; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Modules_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Puck_Sets_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7645; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7645; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Puck_Sets_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7646; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7646; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Rollers() As Boolean
          Dim Result as Boolean
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Rollers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7647; TYPE:PF
      result = True
      '   END FORMULA; PROP ID:7647; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Rollers_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Rollers_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7648; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7648; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Rollers_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Replace_Rollers_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7649; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7649; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Roller_Centers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Roller_Centers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7650; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7650; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Roller_Centers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Roller_Count() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Roller_Count").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7651; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7651; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Roller_Count", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Run_Air_Tubing_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7652; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7652; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Run_Air_Tubing_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Run_Air_Tubing_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7653; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7653; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Run_Air_Tubing_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Total_hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Total_hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7654; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7654; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Total_hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Total_hours_per_12_ft_Bed() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Total_hours_per_12_ft_Bed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7655; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7655; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Total_hours_per_12_ft_Bed", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Zone_Length() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("ZFA_Retrofit_Zone_Length").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7656; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:7656; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Zone_Length", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Anchors_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Add_Hours_Dollars_Anchors_Dollars"
          Me.Properties("Add_Hours_Dollars_Anchors_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6717; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6717; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Add_Hours_Dollars_Anchors_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Anchors_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Add_Hours_Dollars_Anchors_Hours"
          Me.Properties("Add_Hours_Dollars_Anchors_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6718; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6718; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Add_Hours_Dollars_Anchors_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Anchors_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Add_Hours_Dollars_Anchors_Qty"
          Me.Properties("Add_Hours_Dollars_Anchors_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6719; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6719; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Add_Hours_Dollars_Anchors_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Add_Hours_Dollars_Subsystem_Efficiency_Dollars"
          Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6720; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6720; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Add_Hours_Dollars_Subsystem_Efficiency_Hours"
          Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6721; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6721; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Add_Hours_Dollars_Subsystem_Efficiency_Qty"
          Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6722; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6722; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Add_Hours_Dollars_Subsystem_Efficiency_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Bottom_Guards_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Bottom_Guards_HRS"
          Me.Properties("Bulk_Flow_Bottom_Guards_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6742; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6742; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Bottom_Guards_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Bottom_Guards_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Bottom_Guards_Metrics"
          Me.Properties("Bulk_Flow_Bottom_Guards_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6743; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6743; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Bottom_Guards_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Bottom_Guards_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Bottom_Guards_QTY_FT"
          Me.Properties("Bulk_Flow_Bottom_Guards_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6744; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6744; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Bottom_Guards_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_BULK_FLOW_FOOTAGE_HRS"
          Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6745; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6745; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics"
          Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6746; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6746; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT"
          Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6747; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6747; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Hand_rail_and_cable_HRS"
          Me.Properties("Bulk_Flow_Hand_rail_and_cable_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6748; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6748; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Hand_rail_and_cable_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Hand_rail_and_cable_Metrics"
          Me.Properties("Bulk_Flow_Hand_rail_and_cable_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6749; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6749; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Hand_rail_and_cable_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Hand_rail_and_cable_QTY_FT"
          Me.Properties("Bulk_Flow_Hand_rail_and_cable_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6750; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6750; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Hand_rail_and_cable_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Mount_Motors_Drives_HRS"
          Me.Properties("Bulk_Flow_Mount_Motors_Drives_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6751; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6751; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Mount_Motors_Drives_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Mount_Motors_Drives_Metrics"
          Me.Properties("Bulk_Flow_Mount_Motors_Drives_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6752; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6752; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Mount_Motors_Drives_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Bulk_Flow_Mount_Motors_Drives_QTY_FT"
          Me.Properties("Bulk_Flow_Mount_Motors_Drives_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6753; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6753; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Bulk_Flow_Mount_Motors_Drives_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Demo_Removed_existing_Ft_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Demo_Removed_existing_Ft"
          Me.Properties("Demo_Removed_existing_Ft").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6758; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6758; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Ft_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Demo_Removed_existing_Ft").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Demo_Removed_existing_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Demo_Removed_existing_Hours"
          Me.Properties("Demo_Removed_existing_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6759; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6759; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Demo_Removed_existing_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Demo_Removed_existing_Scrap_1_or_Keep_2_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Demo_Removed_existing_Scrap_1_or_Keep_2"
          Me.Properties("Demo_Removed_existing_Scrap_1_or_Keep_2").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:6760; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:6760; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Scrap_1_or_Keep_2_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Demo_Removed_existing_Scrap_1_or_Keep_2").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_80_20_Guards_Air"
          Me.Properties("Hrs_Misc_80_20_Guards_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7197; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7197; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_80_20_Guards_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_80_20_Guards_Dollars"
          Me.Properties("Hrs_Misc_80_20_Guards_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7198; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7198; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_80_20_Guards_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_80_20_Guards_Hours"
          Me.Properties("Hrs_Misc_80_20_Guards_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7199; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7199; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_80_20_Guards_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_80_20_Guards_Metric"
          Me.Properties("Hrs_Misc_80_20_Guards_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7200; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7200; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_80_20_Guards_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_80_20_Guards_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_80_20_Guards_Qty"
          Me.Properties("Hrs_Misc_80_20_Guards_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7201; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7201; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_80_20_Guards_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Angle_Guarding_ft_Air"
          Me.Properties("Hrs_Misc_Angle_Guarding_ft_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7202; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7202; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Angle_Guarding_ft_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Angle_Guarding_ft_Dollars"
          Me.Properties("Hrs_Misc_Angle_Guarding_ft_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7203; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7203; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Angle_Guarding_ft_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Angle_Guarding_ft_Hours"
          Me.Properties("Hrs_Misc_Angle_Guarding_ft_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7204; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7204; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Angle_Guarding_ft_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Angle_Guarding_ft_Metric"
          Me.Properties("Hrs_Misc_Angle_Guarding_ft_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7205; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7205; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Angle_Guarding_ft_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Angle_Guarding_ft_Qty"
          Me.Properties("Hrs_Misc_Angle_Guarding_ft_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7206; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7206; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Angle_Guarding_ft_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_AR_Induct_Chute_Air"
          Me.Properties("Hrs_Misc_AR_Induct_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7207; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7207; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_AR_Induct_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_AR_Induct_Chute_Dollars"
          Me.Properties("Hrs_Misc_AR_Induct_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7208; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7208; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_AR_Induct_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_AR_Induct_Chute_Hours"
          Me.Properties("Hrs_Misc_AR_Induct_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7209; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7209; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_AR_Induct_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_AR_Induct_Chute_Metric"
          Me.Properties("Hrs_Misc_AR_Induct_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7210; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7210; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_AR_Induct_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_AR_Induct_Chute_Qty"
          Me.Properties("Hrs_Misc_AR_Induct_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7211; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7211; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_AR_Induct_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_ARSAW_ARSTOWS_Air"
          Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7212; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7212; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_ARSAW_ARSTOWS_Dollars"
          Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7213; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7213; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_ARSAW_ARSTOWS_Hours"
          Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7214; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7214; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_ARSAW_ARSTOWS_Metric"
          Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7215; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7215; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_ARSAW_ARSTOWS_Qty"
          Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7216; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7216; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_ARSAW_ARSTOWS_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Autobag_850_Air"
          Me.Properties("Hrs_Misc_Autobag_850_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7217; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7217; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Autobag_850_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Autobag_850_Dollars"
          Me.Properties("Hrs_Misc_Autobag_850_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7218; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7218; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Autobag_850_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Autobag_850_Hours"
          Me.Properties("Hrs_Misc_Autobag_850_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7219; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7219; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Autobag_850_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Autobag_850_Metric"
          Me.Properties("Hrs_Misc_Autobag_850_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7220; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7220; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Autobag_850_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Autobag_850_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Autobag_850_Qty"
          Me.Properties("Hrs_Misc_Autobag_850_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7221; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7221; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Autobag_850_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Baffled_Shipping_Chutes_Air"
          Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7222; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7222; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Baffled_Shipping_Chutes_Dollars"
          Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7223; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7223; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Baffled_Shipping_Chutes_Hours"
          Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7224; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7224; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Baffled_Shipping_Chutes_Metric"
          Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7225; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7225; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Baffled_Shipping_Chutes_Qty"
          Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7226; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7226; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Baffled_Shipping_Chutes_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Ball_Transfer_Tables_Air"
          Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7227; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7227; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Ball_Transfer_Tables_Dollars"
          Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7228; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7228; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Ball_Transfer_Tables_Hours"
          Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7229; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7229; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Ball_Transfer_Tables_Metric"
          Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7230; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7230; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Ball_Transfer_Tables_Qty"
          Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7231; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7231; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Ball_Transfer_Tables_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_BangerBarsHtProte_Air"
          Me.Properties("Hrs_Misc_BangerBarsHtProte_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7232; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7232; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_BangerBarsHtProte_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_BangerBarsHtProte_Dollars"
          Me.Properties("Hrs_Misc_BangerBarsHtProte_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7233; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7233; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_BangerBarsHtProte_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_BangerBarsHtProte_Hours"
          Me.Properties("Hrs_Misc_BangerBarsHtProte_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7234; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7234; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_BangerBarsHtProte_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_BangerBarsHtProte_Metric"
          Me.Properties("Hrs_Misc_BangerBarsHtProte_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7235; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7235; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_BangerBarsHtProte_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_BangerBarsHtProte_Qty"
          Me.Properties("Hrs_Misc_BangerBarsHtProte_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7236; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7236; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_BangerBarsHtProte_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Bottom_Pans_Air"
          Me.Properties("Hrs_Misc_Bottom_Pans_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7237; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7237; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Bottom_Pans_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Bottom_Pans_Dollars"
          Me.Properties("Hrs_Misc_Bottom_Pans_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7238; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7238; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Bottom_Pans_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Bottom_Pans_Hours"
          Me.Properties("Hrs_Misc_Bottom_Pans_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7239; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7239; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Bottom_Pans_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Bottom_Pans_Metric"
          Me.Properties("Hrs_Misc_Bottom_Pans_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7240; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7240; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Bottom_Pans_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Bottom_Pans_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Bottom_Pans_Qty"
          Me.Properties("Hrs_Misc_Bottom_Pans_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7241; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7241; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Bottom_Pans_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Carton_Erector_Air"
          Me.Properties("Hrs_Misc_Carton_Erector_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7242; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7242; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Carton_Erector_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Carton_Erector_Dollars"
          Me.Properties("Hrs_Misc_Carton_Erector_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7243; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7243; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Carton_Erector_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Carton_Erector_Hours"
          Me.Properties("Hrs_Misc_Carton_Erector_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7244; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7244; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Carton_Erector_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Carton_Erector_Metric"
          Me.Properties("Hrs_Misc_Carton_Erector_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7245; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7245; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Carton_Erector_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Carton_Erector_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Carton_Erector_Qty"
          Me.Properties("Hrs_Misc_Carton_Erector_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7246; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7246; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Carton_Erector_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Conveyor_Wipe_Down_Air"
          Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7247; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7247; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Conveyor_Wipe_Down_Dollars"
          Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7248; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7248; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Conveyor_Wipe_Down_Hours"
          Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7249; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7249; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Conveyor_Wipe_Down_Metric"
          Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7250; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7250; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Conveyor_Wipe_Down_Qty"
          Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7251; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7251; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Conveyor_Wipe_Down_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_CVG9_Style_Chute_Air"
          Me.Properties("Hrs_Misc_CVG9_Style_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7252; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7252; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_CVG9_Style_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_CVG9_Style_Chute_Dollars"
          Me.Properties("Hrs_Misc_CVG9_Style_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7253; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7253; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_CVG9_Style_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_CVG9_Style_Chute_Hours"
          Me.Properties("Hrs_Misc_CVG9_Style_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7254; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7254; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_CVG9_Style_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_CVG9_Style_Chute_Metric"
          Me.Properties("Hrs_Misc_CVG9_Style_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7255; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7255; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_CVG9_Style_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_CVG9_Style_Chute_Qty"
          Me.Properties("Hrs_Misc_CVG9_Style_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7256; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7256; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_CVG9_Style_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Deflector_Plows_Air"
          Me.Properties("Hrs_Misc_Deflector_Plows_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7257; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7257; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Deflector_Plows_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Deflector_Plows_Dollars"
          Me.Properties("Hrs_Misc_Deflector_Plows_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7258; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7258; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Deflector_Plows_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Deflector_Plows_Hours"
          Me.Properties("Hrs_Misc_Deflector_Plows_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7259; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7259; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Deflector_Plows_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Deflector_Plows_Metric"
          Me.Properties("Hrs_Misc_Deflector_Plows_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7260; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7260; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Deflector_Plows_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Deflector_Plows_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Deflector_Plows_Qty"
          Me.Properties("Hrs_Misc_Deflector_Plows_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7261; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7261; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Deflector_Plows_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dehnco_Work_Tables_Air"
          Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7262; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7262; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dehnco_Work_Tables_Dollars"
          Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7263; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7263; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dehnco_Work_Tables_Hours"
          Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7264; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7264; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dehnco_Work_Tables_Metric"
          Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7265; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7265; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dehnco_Work_Tables_Qty"
          Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7266; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7266; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dehnco_Work_Tables_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Descrambler_Air"
          Me.Properties("Hrs_Misc_Descrambler_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7267; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7267; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Descrambler_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Descrambler_Dollars"
          Me.Properties("Hrs_Misc_Descrambler_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7268; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7268; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Descrambler_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Descrambler_Hours"
          Me.Properties("Hrs_Misc_Descrambler_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7269; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7269; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Descrambler_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Descrambler_Metric"
          Me.Properties("Hrs_Misc_Descrambler_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7270; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7270; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Descrambler_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Descrambler_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Descrambler_Qty"
          Me.Properties("Hrs_Misc_Descrambler_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7271; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7271; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Descrambler_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dual_Inlet_Spiral_Chute_Air"
          Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7272; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7272; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars"
          Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7273; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7273; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours"
          Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7274; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7274; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric"
          Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7275; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7275; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty"
          Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7276; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7276; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gates_Air"
          Me.Properties("Hrs_Misc_Gates_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7277; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7277; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gates_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gates_Dollars"
          Me.Properties("Hrs_Misc_Gates_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7278; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7278; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gates_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gates_Hours"
          Me.Properties("Hrs_Misc_Gates_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7279; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7279; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gates_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gates_Metric"
          Me.Properties("Hrs_Misc_Gates_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7280; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7280; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gates_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gates_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gates_Qty"
          Me.Properties("Hrs_Misc_Gates_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7281; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7281; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gates_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gaylord_Tipper_Air"
          Me.Properties("Hrs_Misc_Gaylord_Tipper_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7282; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7282; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gaylord_Tipper_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gaylord_Tipper_Dollars"
          Me.Properties("Hrs_Misc_Gaylord_Tipper_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7283; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7283; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gaylord_Tipper_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gaylord_Tipper_Hours"
          Me.Properties("Hrs_Misc_Gaylord_Tipper_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7284; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7284; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gaylord_Tipper_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gaylord_Tipper_Metric"
          Me.Properties("Hrs_Misc_Gaylord_Tipper_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7285; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7285; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gaylord_Tipper_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gaylord_Tipper_Qty"
          Me.Properties("Hrs_Misc_Gaylord_Tipper_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7286; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7286; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gaylord_Tipper_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_GMT_Auto_Unloader_Air"
          Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7287; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7287; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_GMT_Auto_Unloader_Dollars"
          Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7288; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7288; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_GMT_Auto_Unloader_Hours"
          Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7289; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7289; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_GMT_Auto_Unloader_Metric"
          Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7290; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7290; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_GMT_Auto_Unloader_Qty"
          Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7291; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7291; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_GMT_Auto_Unloader_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gravity_Spurs_Air"
          Me.Properties("Hrs_Misc_Gravity_Spurs_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7292; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7292; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gravity_Spurs_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gravity_Spurs_Dollars"
          Me.Properties("Hrs_Misc_Gravity_Spurs_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7293; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7293; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gravity_Spurs_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gravity_Spurs_Hours"
          Me.Properties("Hrs_Misc_Gravity_Spurs_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7294; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7294; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gravity_Spurs_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gravity_Spurs_Metric"
          Me.Properties("Hrs_Misc_Gravity_Spurs_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7295; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7295; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gravity_Spurs_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Gravity_Spurs_Qty"
          Me.Properties("Hrs_Misc_Gravity_Spurs_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7296; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7296; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Gravity_Spurs_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_HC_Spiral_Chute_Air"
          Me.Properties("Hrs_Misc_HC_Spiral_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7297; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7297; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_HC_Spiral_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_HC_Spiral_Chute_Dollars"
          Me.Properties("Hrs_Misc_HC_Spiral_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7298; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7298; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_HC_Spiral_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_HC_Spiral_Chute_Hours"
          Me.Properties("Hrs_Misc_HC_Spiral_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7299; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7299; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_HC_Spiral_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_HC_Spiral_Chute_Metric"
          Me.Properties("Hrs_Misc_HC_Spiral_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7300; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7300; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_HC_Spiral_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_HC_Spiral_Chute_Qty"
          Me.Properties("Hrs_Misc_HC_Spiral_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7301; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7301; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_HC_Spiral_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Highway_Guarding_P_R_Air"
          Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7302; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7302; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Highway_Guarding_P_R_Dollars"
          Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7303; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7303; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Highway_Guarding_P_R_Hours"
          Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7304; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7304; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Highway_Guarding_P_R_Metric"
          Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7305; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7305; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Highway_Guarding_P_R_Qty"
          Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7306; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7306; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Highway_Guarding_P_R_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Intralox_Sorter_Air"
          Me.Properties("Hrs_Misc_Intralox_Sorter_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7307; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7307; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Intralox_Sorter_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Intralox_Sorter_Dollars"
          Me.Properties("Hrs_Misc_Intralox_Sorter_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7308; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7308; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Intralox_Sorter_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Intralox_Sorter_Hours"
          Me.Properties("Hrs_Misc_Intralox_Sorter_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7309; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7309; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Intralox_Sorter_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Intralox_Sorter_Metric"
          Me.Properties("Hrs_Misc_Intralox_Sorter_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7310; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7310; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Intralox_Sorter_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Intralox_Sorter_Qty"
          Me.Properties("Hrs_Misc_Intralox_Sorter_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7311; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7311; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Intralox_Sorter_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Merging_Spirals_Air"
          Me.Properties("Hrs_Misc_Merging_Spirals_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7312; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7312; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Merging_Spirals_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Merging_Spirals_Dollars"
          Me.Properties("Hrs_Misc_Merging_Spirals_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7313; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7313; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Merging_Spirals_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Merging_Spirals_Hours"
          Me.Properties("Hrs_Misc_Merging_Spirals_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7314; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7314; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Merging_Spirals_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Merging_Spirals_Metric"
          Me.Properties("Hrs_Misc_Merging_Spirals_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7315; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7315; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Merging_Spirals_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Merging_Spirals_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Merging_Spirals_Qty"
          Me.Properties("Hrs_Misc_Merging_Spirals_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7316; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7316; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Merging_Spirals_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air"
          Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7317; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7317; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars"
          Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7318; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7318; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours"
          Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7319; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7319; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric"
          Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7320; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7320; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty"
          Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7321; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7321; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Netting_linear_ft_Air"
          Me.Properties("Hrs_Misc_Netting_linear_ft_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7322; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7322; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Netting_linear_ft_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Netting_linear_ft_Dollars"
          Me.Properties("Hrs_Misc_Netting_linear_ft_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7323; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7323; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Netting_linear_ft_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Netting_linear_ft_Hours"
          Me.Properties("Hrs_Misc_Netting_linear_ft_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7324; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7324; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Netting_linear_ft_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Netting_linear_ft_Metric"
          Me.Properties("Hrs_Misc_Netting_linear_ft_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7325; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7325; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Netting_linear_ft_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Netting_linear_ft_Qty"
          Me.Properties("Hrs_Misc_Netting_linear_ft_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7326; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7326; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Netting_linear_ft_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_PandA_Air"
          Me.Properties("Hrs_Misc_PandA_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7327; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7327; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_PandA_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_PandA_Dollars"
          Me.Properties("Hrs_Misc_PandA_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7328; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7328; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_PandA_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_PandA_Hours"
          Me.Properties("Hrs_Misc_PandA_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7329; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7329; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_PandA_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_PandA_Metric"
          Me.Properties("Hrs_Misc_PandA_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7330; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7330; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_PandA_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_PandA_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_PandA_Qty"
          Me.Properties("Hrs_Misc_PandA_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7331; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7331; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_PandA_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Personnel_Fencing_Temp_Air"
          Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7332; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7332; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Personnel_Fencing_Temp_Dollars"
          Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7333; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7333; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Personnel_Fencing_Temp_Hours"
          Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7334; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7334; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Personnel_Fencing_Temp_Metric"
          Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7335; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7335; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Personnel_Fencing_Temp_Qty"
          Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7336; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7336; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Personnel_Fencing_Temp_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Pick_Mod_Trash_Chutes_Air"
          Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7337; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7337; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars"
          Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7338; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7338; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Pick_Mod_Trash_Chutes_Hours"
          Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7339; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7339; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Pick_Mod_Trash_Chutes_Metric"
          Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7340; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7340; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Pick_Mod_Trash_Chutes_Qty"
          Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7341; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7341; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Pick_Mod_Trash_Chutes_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Spirals_Air"
          Me.Properties("Hrs_Misc_Powered_Spirals_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7342; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7342; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Spirals_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Spirals_Dollars"
          Me.Properties("Hrs_Misc_Powered_Spirals_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7343; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7343; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Spirals_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Spirals_Hours"
          Me.Properties("Hrs_Misc_Powered_Spirals_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7344; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7344; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Spirals_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Spirals_Metric"
          Me.Properties("Hrs_Misc_Powered_Spirals_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7345; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7345; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Spirals_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Spirals_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Spirals_Qty"
          Me.Properties("Hrs_Misc_Powered_Spirals_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7346; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7346; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Spirals_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Swing_Arm_Divert_Air"
          Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7347; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7347; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Swing_Arm_Divert_Dollars"
          Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7348; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7348; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Swing_Arm_Divert_Hours"
          Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7349; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7349; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Swing_Arm_Divert_Metric"
          Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7350; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7350; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Powered_Swing_Arm_Divert_Qty"
          Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7351; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7351; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Powered_Swing_Arm_Divert_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_Chute_Air"
          Me.Properties("Hrs_Misc_Proos_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7352; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7352; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_Chute_Dollars"
          Me.Properties("Hrs_Misc_Proos_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7353; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7353; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_Chute_Hours"
          Me.Properties("Hrs_Misc_Proos_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7354; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7354; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_Chute_Metric"
          Me.Properties("Hrs_Misc_Proos_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7355; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7355; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_Chute_Qty"
          Me.Properties("Hrs_Misc_Proos_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7356; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7356; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_PUT_Walls_Air"
          Me.Properties("Hrs_Misc_Proos_PUT_Walls_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7357; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7357; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_PUT_Walls_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_PUT_Walls_Dollars"
          Me.Properties("Hrs_Misc_Proos_PUT_Walls_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7358; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7358; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_PUT_Walls_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_PUT_Walls_Hours"
          Me.Properties("Hrs_Misc_Proos_PUT_Walls_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7359; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7359; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_PUT_Walls_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_PUT_Walls_Metric"
          Me.Properties("Hrs_Misc_Proos_PUT_Walls_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7360; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7360; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_PUT_Walls_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Proos_PUT_Walls_Qty"
          Me.Properties("Hrs_Misc_Proos_PUT_Walls_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7361; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7361; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Proos_PUT_Walls_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_QA_Chute_Air"
          Me.Properties("Hrs_Misc_QA_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7362; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7362; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_QA_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_QA_Chute_Dollars"
          Me.Properties("Hrs_Misc_QA_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7363; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7363; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_QA_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_QA_Chute_Hours"
          Me.Properties("Hrs_Misc_QA_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7364; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7364; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_QA_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_QA_Chute_Metric"
          Me.Properties("Hrs_Misc_QA_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7365; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7365; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_QA_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_QA_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_QA_Chute_Qty"
          Me.Properties("Hrs_Misc_QA_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7366; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7366; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_QA_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Semi_Auto_Taper_Air"
          Me.Properties("Hrs_Misc_Semi_Auto_Taper_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7367; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7367; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Semi_Auto_Taper_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Semi_Auto_Taper_Dollars"
          Me.Properties("Hrs_Misc_Semi_Auto_Taper_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7368; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7368; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Semi_Auto_Taper_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Semi_Auto_Taper_Hours"
          Me.Properties("Hrs_Misc_Semi_Auto_Taper_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7369; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7369; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Semi_Auto_Taper_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Semi_Auto_Taper_Metric"
          Me.Properties("Hrs_Misc_Semi_Auto_Taper_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7370; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7370; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Semi_Auto_Taper_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Semi_Auto_Taper_Qty"
          Me.Properties("Hrs_Misc_Semi_Auto_Taper_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7371; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7371; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Semi_Auto_Taper_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Singulator_Air"
          Me.Properties("Hrs_Misc_Singulator_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7372; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7372; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Singulator_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Singulator_Dollars"
          Me.Properties("Hrs_Misc_Singulator_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7373; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7373; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Singulator_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Singulator_Hours"
          Me.Properties("Hrs_Misc_Singulator_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7374; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7374; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Singulator_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Singulator_Metric"
          Me.Properties("Hrs_Misc_Singulator_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7375; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7375; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Singulator_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Singulator_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Singulator_Qty"
          Me.Properties("Hrs_Misc_Singulator_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7376; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7376; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Singulator_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SLAMS_Air"
          Me.Properties("Hrs_Misc_SLAMS_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7377; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7377; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SLAMS_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SLAMS_Dollars"
          Me.Properties("Hrs_Misc_SLAMS_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7378; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7378; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SLAMS_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SLAMS_Hours"
          Me.Properties("Hrs_Misc_SLAMS_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7379; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7379; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SLAMS_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SLAMS_Metric"
          Me.Properties("Hrs_Misc_SLAMS_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7380; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7380; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SLAMS_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SLAMS_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SLAMS_Qty"
          Me.Properties("Hrs_Misc_SLAMS_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7381; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7381; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SLAMS_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SmartPac_Machines_Air"
          Me.Properties("Hrs_Misc_SmartPac_Machines_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7382; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7382; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SmartPac_Machines_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SmartPac_Machines_Dollars"
          Me.Properties("Hrs_Misc_SmartPac_Machines_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7383; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7383; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SmartPac_Machines_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SmartPac_Machines_Hours"
          Me.Properties("Hrs_Misc_SmartPac_Machines_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7384; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7384; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SmartPac_Machines_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SmartPac_Machines_Metric"
          Me.Properties("Hrs_Misc_SmartPac_Machines_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7385; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7385; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SmartPac_Machines_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_SmartPac_Machines_Qty"
          Me.Properties("Hrs_Misc_SmartPac_Machines_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7386; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7386; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_SmartPac_Machines_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Snowplow_Chute_Air"
          Me.Properties("Hrs_Misc_Snowplow_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7387; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7387; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Snowplow_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Snowplow_Chute_Dollars"
          Me.Properties("Hrs_Misc_Snowplow_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7388; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7388; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Snowplow_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Snowplow_Chute_Hours"
          Me.Properties("Hrs_Misc_Snowplow_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7389; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7389; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Snowplow_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Snowplow_Chute_Metric"
          Me.Properties("Hrs_Misc_Snowplow_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7390; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7390; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Snowplow_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Snowplow_Chute_Qty"
          Me.Properties("Hrs_Misc_Snowplow_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7391; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7391; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Snowplow_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Sound_Abatement_Hood_Air"
          Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7392; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7392; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Sound_Abatement_Hood_Dollars"
          Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7393; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7393; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Sound_Abatement_Hood_Hours"
          Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7394; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7394; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Sound_Abatement_Hood_Metric"
          Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7395; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7395; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Sound_Abatement_Hood_Qty"
          Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7396; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7396; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Sound_Abatement_Hood_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Chutes_Air"
          Me.Properties("Hrs_Misc_Spiral_Chutes_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7397; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7397; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Chutes_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Chutes_Dollars"
          Me.Properties("Hrs_Misc_Spiral_Chutes_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7398; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7398; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Chutes_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Chutes_Hours"
          Me.Properties("Hrs_Misc_Spiral_Chutes_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7399; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7399; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Chutes_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Chutes_Metric"
          Me.Properties("Hrs_Misc_Spiral_Chutes_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7400; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7400; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Chutes_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Chutes_Qty"
          Me.Properties("Hrs_Misc_Spiral_Chutes_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7401; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7401; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Chutes_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Netting_Air"
          Me.Properties("Hrs_Misc_Spiral_Netting_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7402; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7402; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Netting_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Netting_Dollars"
          Me.Properties("Hrs_Misc_Spiral_Netting_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7403; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7403; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Netting_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Netting_Hours"
          Me.Properties("Hrs_Misc_Spiral_Netting_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7404; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7404; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Netting_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Netting_Metric"
          Me.Properties("Hrs_Misc_Spiral_Netting_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7405; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7405; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Netting_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Spiral_Netting_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Spiral_Netting_Qty"
          Me.Properties("Hrs_Misc_Spiral_Netting_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7406; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7406; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Spiral_Netting_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Stuff_It_De_Stuff_It_Air"
          Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7407; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7407; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Stuff_It_De_Stuff_It_Dollars"
          Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7408; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7408; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Stuff_It_De_Stuff_It_Hours"
          Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7409; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7409; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Stuff_It_De_Stuff_It_Metric"
          Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7410; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7410; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Stuff_It_De_Stuff_It_Qty"
          Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7411; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7411; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Stuff_It_De_Stuff_It_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tie_Ins_Air"
          Me.Properties("Hrs_Misc_Tie_Ins_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7412; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7412; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tie_Ins_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tie_Ins_Dollars"
          Me.Properties("Hrs_Misc_Tie_Ins_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7413; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7413; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tie_Ins_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tie_Ins_Hours"
          Me.Properties("Hrs_Misc_Tie_Ins_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7414; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7414; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tie_Ins_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tie_Ins_Metric"
          Me.Properties("Hrs_Misc_Tie_Ins_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7415; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7415; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tie_Ins_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tie_Ins_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tie_Ins_Qty"
          Me.Properties("Hrs_Misc_Tie_Ins_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7416; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7416; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tie_Ins_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Plows_Air"
          Me.Properties("Hrs_Misc_Tote_Plows_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7417; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7417; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Plows_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Plows_Dollars"
          Me.Properties("Hrs_Misc_Tote_Plows_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7418; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7418; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Plows_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Plows_Hours"
          Me.Properties("Hrs_Misc_Tote_Plows_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7419; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7419; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Plows_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Plows_Metric"
          Me.Properties("Hrs_Misc_Tote_Plows_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7420; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7420; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Plows_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Plows_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Plows_Qty"
          Me.Properties("Hrs_Misc_Tote_Plows_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7421; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7421; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Plows_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Shelves_per_linear_ft_Air"
          Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7422; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7422; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars"
          Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7423; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7423; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Shelves_per_linear_ft_Hours"
          Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7424; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7424; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Shelves_per_linear_ft_Metric"
          Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7425; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7425; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Tote_Shelves_per_linear_ft_Qty"
          Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7426; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7426; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Tote_Shelves_per_linear_ft_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_UPS_90_Curve_Chute_Air"
          Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7427; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7427; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_UPS_90_Curve_Chute_Dollars"
          Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7428; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7428; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_UPS_90_Curve_Chute_Hours"
          Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7429; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7429; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_UPS_90_Curve_Chute_Metric"
          Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7430; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7430; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_UPS_90_Curve_Chute_Qty"
          Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7431; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7431; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_UPS_90_Curve_Chute_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_Tote_Stacker_Air"
          Me.Properties("Hrs_Misc_USS_Tote_Stacker_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7432; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7432; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_Tote_Stacker_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_Tote_Stacker_Dollars"
          Me.Properties("Hrs_Misc_USS_Tote_Stacker_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7433; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7433; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_Tote_Stacker_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_Tote_Stacker_Hours"
          Me.Properties("Hrs_Misc_USS_Tote_Stacker_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7434; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7434; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_Tote_Stacker_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_Tote_Stacker_Metric"
          Me.Properties("Hrs_Misc_USS_Tote_Stacker_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7435; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7435; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_Tote_Stacker_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_Tote_Stacker_Qty"
          Me.Properties("Hrs_Misc_USS_Tote_Stacker_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7436; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7436; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_Tote_Stacker_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_VICS_Air"
          Me.Properties("Hrs_Misc_USS_VICS_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7437; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7437; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_VICS_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_VICS_Dollars"
          Me.Properties("Hrs_Misc_USS_VICS_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7438; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7438; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_VICS_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_VICS_Hours"
          Me.Properties("Hrs_Misc_USS_VICS_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7439; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7439; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_VICS_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_VICS_Metric"
          Me.Properties("Hrs_Misc_USS_VICS_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7440; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7440; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_VICS_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_USS_VICS_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_USS_VICS_Qty"
          Me.Properties("Hrs_Misc_USS_VICS_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7441; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7441; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_USS_VICS_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Vertical_Lifts_Air"
          Me.Properties("Hrs_Misc_Vertical_Lifts_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7442; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7442; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Vertical_Lifts_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Vertical_Lifts_Dollars"
          Me.Properties("Hrs_Misc_Vertical_Lifts_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7443; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7443; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Vertical_Lifts_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Vertical_Lifts_Hours"
          Me.Properties("Hrs_Misc_Vertical_Lifts_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7444; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7444; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Vertical_Lifts_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Vertical_Lifts_Metric"
          Me.Properties("Hrs_Misc_Vertical_Lifts_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7445; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7445; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Vertical_Lifts_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Vertical_Lifts_Qty"
          Me.Properties("Hrs_Misc_Vertical_Lifts_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7446; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7446; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Vertical_Lifts_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Work_Stations_Air"
          Me.Properties("Hrs_Misc_Work_Stations_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7447; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7447; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Work_Stations_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Dollars_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Work_Stations_Dollars"
          Me.Properties("Hrs_Misc_Work_Stations_Dollars").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7448; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7448; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Dollars_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Work_Stations_Dollars").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Work_Stations_Hours"
          Me.Properties("Hrs_Misc_Work_Stations_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7449; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7449; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Work_Stations_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Metric_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Work_Stations_Metric"
          Me.Properties("Hrs_Misc_Work_Stations_Metric").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7450; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7450; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Metric_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Work_Stations_Metric").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Hrs_Misc_Work_Stations_Qty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Hrs_Misc_Work_Stations_Qty"
          Me.Properties("Hrs_Misc_Work_Stations_Qty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7451; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7451; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Qty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Hrs_Misc_Work_Stations_Qty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_90deg_platform_for_PBC_HRS"
          Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7459; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7459; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_90deg_platform_for_PBC_Metrics"
          Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7460; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7460; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_90deg_platform_for_PBC_QTY"
          Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7461; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7461; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_90deg_platform_for_PBC_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Curve_Chute_HRS"
          Me.Properties("Misc_Parcel_Items_Curve_Chute_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7462; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7462; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Curve_Chute_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Curve_Chute_Metrics"
          Me.Properties("Misc_Parcel_Items_Curve_Chute_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7463; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7463; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Curve_Chute_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Curve_Chute_QTY"
          Me.Properties("Misc_Parcel_Items_Curve_Chute_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7464; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7464; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Curve_Chute_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Dual_crows_nest_HRS"
          Me.Properties("Misc_Parcel_Items_Dual_crows_nest_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7465; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7465; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Dual_crows_nest_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Dual_crows_nest_Metrics"
          Me.Properties("Misc_Parcel_Items_Dual_crows_nest_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7466; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7466; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Dual_crows_nest_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Dual_crows_nest_QTY"
          Me.Properties("Misc_Parcel_Items_Dual_crows_nest_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7467; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7467; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Dual_crows_nest_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_PBC_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_PBC_HRS"
          Me.Properties("Misc_Parcel_Items_PBC_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7470; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7470; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_PBC_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_PBC_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_PBC_Metrics"
          Me.Properties("Misc_Parcel_Items_PBC_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7471; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7471; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_PBC_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_PBC_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_PBC_QTY"
          Me.Properties("Misc_Parcel_Items_PBC_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7472; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7472; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_PBC_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Single_crows_nest_HRS"
          Me.Properties("Misc_Parcel_Items_Single_crows_nest_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7473; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7473; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Single_crows_nest_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Single_crows_nest_Metrics"
          Me.Properties("Misc_Parcel_Items_Single_crows_nest_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7474; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7474; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Single_crows_nest_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Single_crows_nest_QTY"
          Me.Properties("Misc_Parcel_Items_Single_crows_nest_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7475; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7475; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Single_crows_nest_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Singulator_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Singulator_HRS"
          Me.Properties("Misc_Parcel_Items_Singulator_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7476; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7476; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Singulator_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Singulator_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Singulator_Metrics"
          Me.Properties("Misc_Parcel_Items_Singulator_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7477; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7477; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Singulator_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Singulator_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Singulator_QTY"
          Me.Properties("Misc_Parcel_Items_Singulator_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7478; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7478; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Singulator_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Spiral_Chute_HRS"
          Me.Properties("Misc_Parcel_Items_Spiral_Chute_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7479; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7479; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Spiral_Chute_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Spiral_Chute_Metrics"
          Me.Properties("Misc_Parcel_Items_Spiral_Chute_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7480; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7480; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Spiral_Chute_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Spiral_Chute_QTY"
          Me.Properties("Misc_Parcel_Items_Spiral_Chute_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7481; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7481; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Spiral_Chute_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Straight_Chute_HRS"
          Me.Properties("Misc_Parcel_Items_Straight_Chute_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7482; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7482; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Straight_Chute_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Straight_Chute_Metrics"
          Me.Properties("Misc_Parcel_Items_Straight_Chute_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7483; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7483; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Straight_Chute_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Straight_Chute_QTY"
          Me.Properties("Misc_Parcel_Items_Straight_Chute_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7484; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7484; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Straight_Chute_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Transition_plates_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Transition_plates_HRS"
          Me.Properties("Misc_Parcel_Items_Transition_plates_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7486; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7486; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Transition_plates_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Transition_plates_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Transition_plates_Metrics"
          Me.Properties("Misc_Parcel_Items_Transition_plates_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7487; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7487; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Transition_plates_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Misc_Parcel_Items_Transition_plates_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Misc_Parcel_Items_Transition_plates_QTY"
          Me.Properties("Misc_Parcel_Items_Transition_plates_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7488; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7488; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Misc_Parcel_Items_Transition_plates_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air"
          Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7491; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7491; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours"
          Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7492; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7492; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics"
          Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7493; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7493; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY"
          Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7494; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7494; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air"
          Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7495; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7495; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours"
          Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7496; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7496; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics"
          Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7497; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7497; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY"
          Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7498; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7498; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air"
          Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7499; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7499; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours"
          Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7500; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7500; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics"
          Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7501; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7501; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY"
          Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7502; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7502; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air"
          Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7503; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7503; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours"
          Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7504; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7504; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics"
          Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7505; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7505; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY"
          Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7506; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7506; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air"
          Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7507; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7507; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7508; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7508; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7509; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7509; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7510; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7510; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Deflector_Plows_Air"
          Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7511; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7511; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Deflector_Plows_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7512; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7512; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7513; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7513; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Deflector_Plows_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7514; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7514; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Deflector_Plows_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air"
          Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7515; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7515; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7516; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7516; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7517; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7517; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7518; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7518; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Footage_Air"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7519; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7519; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Footage_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7520; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7520; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7521; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7521; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Footage_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7522; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7522; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Footage_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Gates_Air"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7523; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7523; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Gates_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7524; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7524; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7525; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7525; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Fencing_Gates_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7526; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7526; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Fencing_Gates_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air"
          Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7527; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7527; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7528; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7528; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7529; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7529; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7530; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7530; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Gravity_Spurs_Air"
          Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7531; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7531; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Gravity_Spurs_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7532; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7532; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7533; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7533; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Gravity_Spurs_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7534; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7534; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Gravity_Spurs_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_large_Air"
          Me.Properties("Plt_Cnvyr_MISC_Lift_large_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7535; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7535; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_large_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_large_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Lift_large_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7536; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7536; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_large_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_large_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Lift_large_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7537; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7537; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_large_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_large_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Lift_large_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7538; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7538; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_large_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_normal_Air"
          Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7539; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7539; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_normal_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7540; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7540; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7541; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7541; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Lift_normal_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Lift_normal_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7542; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7542; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Lift_normal_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Light_Curtain_Air"
          Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7543; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7543; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Light_Curtain_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7544; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7544; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7545; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7545; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Light_Curtain_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7546; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7546; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Light_Curtain_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pallet_Gates_Air"
          Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7547; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7547; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pallet_Gates_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7548; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7548; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7549; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7549; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pallet_Gates_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7550; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7550; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pallet_Gates_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air"
          Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7551; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7551; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7552; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7552; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7553; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7553; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7554; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7554; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Puller_Air"
          Me.Properties("Plt_Cnvyr_MISC_Puller_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7555; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7555; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Puller_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Puller_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Puller_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7556; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7556; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Puller_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Puller_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Puller_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7557; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7557; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Puller_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Puller_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Puller_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Puller_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7558; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7558; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Puller_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pusher_Air"
          Me.Properties("Plt_Cnvyr_MISC_Pusher_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7559; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7559; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pusher_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pusher_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Pusher_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7560; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7560; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pusher_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pusher_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Pusher_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7561; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7561; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pusher_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Pusher_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Pusher_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7562; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7562; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Pusher_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Robot_Air"
          Me.Properties("Plt_Cnvyr_MISC_Robot_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7563; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7563; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Robot_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Robot_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Robot_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7564; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7564; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Robot_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Robot_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Robot_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7565; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7565; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Robot_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Robot_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Robot_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Robot_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7566; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7566; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Robot_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Sizing_Station_Air"
          Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7567; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7567; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Sizing_Station_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7568; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7568; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7569; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7569; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Sizing_Station_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7570; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7570; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Sizing_Station_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Supports_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Supports_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Supports_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7571; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7571; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Supports_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Supports_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Supports_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7572; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7572; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Supports_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Supports_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Supports_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Supports_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7573; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7573; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Supports_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Air"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7574; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7574; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Car_Air"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7575; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7575; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Car_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7576; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7576; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7577; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7577; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Car_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7578; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7578; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Car_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7579; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7579; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7580; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7580; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Transfer_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Transfer_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7581; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7581; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Transfer_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Turntable_Air"
          Me.Properties("Plt_Cnvyr_MISC_Turntable_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7582; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7582; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Turntable_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Turntable_Hours"
          Me.Properties("Plt_Cnvyr_MISC_Turntable_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7583; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7583; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Turntable_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Turntable_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_MISC_Turntable_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7584; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7584; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Turntable_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_MISC_Turntable_QTY"
          Me.Properties("Plt_Cnvyr_MISC_Turntable_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7585; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7585; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_MISC_Turntable_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air"
          Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7586; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7586; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours"
          Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7587; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7587; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7588; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7588; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY"
          Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7589; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7589; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air"
          Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7590; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7590; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours"
          Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7591; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7591; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7592; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7592; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY"
          Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7593; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7593; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air"
          Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7594; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7594; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours"
          Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7595; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7595; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7596; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7596; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY"
          Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7597; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7597; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air"
          Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7598; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7598; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours"
          Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7599; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7599; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7600; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7600; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY"
          Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7601; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7601; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_Chain_Install_Hours"
          Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7602; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7602; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea"
          Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7603; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7603; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Plt_Cnvyr_T5_Chain_Chain_Install_QTY"
          Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7604; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7604; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Plt_Cnvyr_T5_Chain_Chain_Install_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Bottom_Guards_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Bottom_Guards_HRS"
          Me.Properties("Singulated_Flow_Bottom_Guards_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7609; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7609; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Bottom_Guards_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Bottom_Guards_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Bottom_Guards_Metrics"
          Me.Properties("Singulated_Flow_Bottom_Guards_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7610; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7610; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Bottom_Guards_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Bottom_Guards_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Bottom_Guards_QTY_FT"
          Me.Properties("Singulated_Flow_Bottom_Guards_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7611; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7611; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Bottom_Guards_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Hand_rail_and_cable_HRS"
          Me.Properties("Singulated_Flow_Hand_rail_and_cable_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7612; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7612; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Hand_rail_and_cable_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Hand_rail_and_cable_Metrics"
          Me.Properties("Singulated_Flow_Hand_rail_and_cable_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7613; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7613; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Hand_rail_and_cable_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Hand_rail_and_cable_QTY_FT"
          Me.Properties("Singulated_Flow_Hand_rail_and_cable_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7614; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7614; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Hand_rail_and_cable_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Mount_Motors_Drives_HRS"
          Me.Properties("Singulated_Flow_Mount_Motors_Drives_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7615; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7615; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Mount_Motors_Drives_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Mount_Motors_Drives_Metrics"
          Me.Properties("Singulated_Flow_Mount_Motors_Drives_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7616; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7616; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Mount_Motors_Drives_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_Mount_Motors_Drives_QTY_FT"
          Me.Properties("Singulated_Flow_Mount_Motors_Drives_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7617; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7617; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_Mount_Motors_Drives_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS"
          Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7618; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7618; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics"
          Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7619; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7619; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT"
          Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7620; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7620; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Bar_Grating_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Bar_Grating_Hours"
          Me.Properties("Struct_Catwalk_Bar_Grating_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7622; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7622; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Bar_Grating_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Bar_Grating_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Bar_Grating_Total_Ft_SqFt"
          Me.Properties("Struct_Catwalk_Bar_Grating_Total_Ft_SqFt").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7623; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7623; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Bar_Grating_Total_Ft_SqFt").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_CATWALK_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_CATWALK_Hours"
          Me.Properties("Struct_Catwalk_CATWALK_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7624; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7624; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_CATWALK_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_CATWALK_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_CATWALK_Total_Ft_SqFt"
          Me.Properties("Struct_Catwalk_CATWALK_Total_Ft_SqFt").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7625; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7625; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_CATWALK_Total_Ft_SqFt").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_GRID_STRUCTURE_Hours"
          Me.Properties("Struct_Catwalk_GRID_STRUCTURE_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7626; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7626; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_GRID_STRUCTURE_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_GRID_STRUCTURE_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt"
          Me.Properties("Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7627; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7627; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Resin_Deck_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Resin_Deck_Hours"
          Me.Properties("Struct_Catwalk_Resin_Deck_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7628; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7628; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Resin_Deck_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Resin_Deck_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Resin_Deck_Total_Ft_SqFt"
          Me.Properties("Struct_Catwalk_Resin_Deck_Total_Ft_SqFt").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7629; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7629; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Resin_Deck_Total_Ft_SqFt").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Ship_Ladders_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Ship_Ladders_Hours"
          Me.Properties("Struct_Catwalk_Ship_Ladders_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7630; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7630; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Ship_Ladders_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Ship_Ladders_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt"
          Me.Properties("Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7631; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7631; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Stair_Landing_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Stair_Landing_Hours"
          Me.Properties("Struct_Catwalk_Stair_Landing_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7632; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7632; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Stair_Landing_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Stair_Landing_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Struct_Catwalk_Stair_Landing_Total_Ft_SqFt"
          Me.Properties("Struct_Catwalk_Stair_Landing_Total_Ft_SqFt").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7633; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7633; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Struct_Catwalk_Stair_Landing_Total_Ft_SqFt").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Remove_Guard_Rail_Hours"
          Me.Properties("ZFA_Retrofit_Remove_Guard_Rail_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7637; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7637; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Remove_Guard_Rail_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Remove_Guard_Rail_QTY"
          Me.Properties("ZFA_Retrofit_Remove_Guard_Rail_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7638; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7638; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Remove_Guard_Rail_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Rollers_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Remove_Rollers_Hours"
          Me.Properties("ZFA_Retrofit_Remove_Rollers_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7639; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7639; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Rollers_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Remove_Rollers_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Remove_Rollers_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Remove_Rollers_QTY"
          Me.Properties("ZFA_Retrofit_Remove_Rollers_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7640; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7640; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Rollers_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Remove_Rollers_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Guard_Railing_Hours"
          Me.Properties("ZFA_Retrofit_Replace_Guard_Railing_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7641; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7641; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Guard_Railing_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Guard_Railing_QTY"
          Me.Properties("ZFA_Retrofit_Replace_Guard_Railing_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7642; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7642; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Guard_Railing_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Modules_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Modules_Hours"
          Me.Properties("ZFA_Retrofit_Replace_Modules_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7643; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7643; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Modules_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Modules_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Modules_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Modules_QTY"
          Me.Properties("ZFA_Retrofit_Replace_Modules_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7644; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7644; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Modules_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Modules_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Puck_Sets_Hours"
          Me.Properties("ZFA_Retrofit_Replace_Puck_Sets_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7645; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7645; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Puck_Sets_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Puck_Sets_QTY"
          Me.Properties("ZFA_Retrofit_Replace_Puck_Sets_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7646; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7646; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Puck_Sets_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Rollers_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Rollers_Hours"
          Me.Properties("ZFA_Retrofit_Replace_Rollers_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7648; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7648; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Rollers_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Replace_Rollers_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Replace_Rollers_QTY"
          Me.Properties("ZFA_Retrofit_Replace_Rollers_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7649; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7649; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Replace_Rollers_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Run_Air_Tubing_Hours"
          Me.Properties("ZFA_Retrofit_Run_Air_Tubing_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7652; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7652; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Run_Air_Tubing_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Run_Air_Tubing_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Run_Air_Tubing_QTY"
          Me.Properties("ZFA_Retrofit_Run_Air_Tubing_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7653; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7653; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Run_Air_Tubing_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Run_Air_Tubing_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_ZFA_Retrofit_Total_hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "ZFA_Retrofit_Total_hours_Hours"
          Me.Properties("ZFA_Retrofit_Total_hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7654; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7654; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Total_hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("ZFA_Retrofit_Total_hours_Hours").ErrorReporting
          End Function
        
          Public Function Formula_Add_Hours_Dollars_Anchors_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Add_Hours_Dollars_Anchors_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Add_Hours_Dollars_Anchors_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Anchors_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Bottom_Guards_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Bottom_Guards_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Bottom_Guards_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Bottom_Guards_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Demo_Removed_existing_Ft_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Ft_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Demo_Removed_existing_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Demo_Removed_existing_Scrap_1_or_Keep_2_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Demo_Removed_existing_Scrap_1_or_Keep_2_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_80_20_Guards_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_80_20_Guards_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_80_20_Guards_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_80_20_Guards_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_80_20_Guards_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_80_20_Guards_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Angle_Guarding_ft_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_AR_Induct_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_AR_Induct_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Autobag_850_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Autobag_850_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Autobag_850_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Autobag_850_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Autobag_850_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Autobag_850_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Ball_Transfer_Tables_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_BangerBarsHtProte_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_BangerBarsHtProte_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Bottom_Pans_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Bottom_Pans_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Bottom_Pans_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Bottom_Pans_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Bottom_Pans_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Bottom_Pans_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Carton_Erector_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Carton_Erector_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Carton_Erector_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Carton_Erector_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Carton_Erector_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Carton_Erector_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_CVG9_Style_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Deflector_Plows_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Deflector_Plows_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Deflector_Plows_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Deflector_Plows_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Deflector_Plows_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Deflector_Plows_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dehnco_Work_Tables_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Descrambler_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Descrambler_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Descrambler_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Descrambler_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Descrambler_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Descrambler_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gates_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gates_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gates_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gates_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gates_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gates_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gaylord_Tipper_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gaylord_Tipper_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_GMT_Auto_Unloader_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Gravity_Spurs_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Gravity_Spurs_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_HC_Spiral_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Highway_Guarding_P_R_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Intralox_Sorter_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Intralox_Sorter_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Merging_Spirals_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Merging_Spirals_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Merging_Spirals_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Merging_Spirals_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Merging_Spirals_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Merging_Spirals_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Netting_linear_ft_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Netting_linear_ft_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_PandA_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_PandA_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_PandA_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_PandA_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_PandA_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_PandA_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Spirals_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Spirals_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Spirals_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Spirals_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Spirals_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Spirals_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Proos_PUT_Walls_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_QA_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_QA_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_QA_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_QA_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_QA_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_QA_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Semi_Auto_Taper_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Singulator_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Singulator_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Singulator_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Singulator_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Singulator_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Singulator_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SLAMS_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SLAMS_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SLAMS_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SLAMS_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SLAMS_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SLAMS_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_SmartPac_Machines_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_SmartPac_Machines_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Snowplow_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Snowplow_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Sound_Abatement_Hood_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Chutes_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Chutes_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Netting_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Netting_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Netting_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Netting_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Spiral_Netting_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Spiral_Netting_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tie_Ins_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tie_Ins_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tie_Ins_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tie_Ins_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tie_Ins_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tie_Ins_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Plows_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Plows_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Plows_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Plows_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Plows_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Plows_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_Tote_Stacker_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_VICS_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_VICS_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_VICS_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_VICS_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_USS_VICS_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_USS_VICS_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Vertical_Lifts_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Vertical_Lifts_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Work_Stations_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Work_Stations_Dollars_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Dollars_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Work_Stations_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Work_Stations_Metric_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Metric_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Hrs_Misc_Work_Stations_Qty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Hrs_Misc_Work_Stations_Qty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Curve_Chute_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Curve_Chute_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Dual_crows_nest_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_PBC_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_PBC_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_PBC_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_PBC_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Single_crows_nest_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Single_crows_nest_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Singulator_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Singulator_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Singulator_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Singulator_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Spiral_Chute_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Spiral_Chute_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Straight_Chute_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Straight_Chute_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Transition_plates_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Transition_plates_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Misc_Parcel_Items_Transition_plates_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Misc_Parcel_Items_Transition_plates_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_large_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_large_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Lift_normal_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Puller_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Puller_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Pusher_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Pusher_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Robot_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Robot_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Supports_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Supports_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Supports_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Transfer_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Transfer_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_MISC_Turntable_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_MISC_Turntable_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Bottom_Guards_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Bottom_Guards_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Bottom_Guards_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Bottom_Guards_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Bar_Grating_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Bar_Grating_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_CATWALK_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_CATWALK_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_GRID_STRUCTURE_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Resin_Deck_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Resin_Deck_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Ship_Ladders_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Ship_Ladders_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Stair_Landing_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Stair_Landing_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Remove_Rollers_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Rollers_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Remove_Rollers_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Remove_Rollers_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Modules_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Modules_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Modules_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Modules_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Rollers_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Replace_Rollers_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Replace_Rollers_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Run_Air_Tubing_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Run_Air_Tubing_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_ZFA_Retrofit_Total_hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Mech_Install_CP_Comps.Formula_ZFA_Retrofit_Total_hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_a_Sample_Cnvy_Hrs_MDR_Bed_Size_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_bool_Include_In_Subsystem_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DisplayName_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Anchors_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Anchors_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Anchors_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Total_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Total_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_112_inches_pipe_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_12_inches_pipe_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_212_inches_pipe_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_3pipe_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_78_inches_pipe_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_AC_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_CHAINLUB_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_Dryer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_FILTERREG_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_RedAC_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_SUBTOTAL_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_SUBTOTAL_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_SUBTOTAL_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_Tubing_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Bottom_Guards_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Bottom_Guards_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Bottom_Guards_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Hand_rail_and_cable_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Hand_rail_and_cable_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Mount_Motors_Drives_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Mount_Motors_Drives_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Total_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Cost_of_Air_per_Linear_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DATA_CPNumber_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DATA_Raw_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Demo_Removed_existing_Ft_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Demo_Removed_existing_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Demo_Removed_existing_Scrap_1_or_Keep_2_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Extra_Filter_Regulators_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Air_Devices_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Buyout_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Buyout_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Catwalk_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Catwalk_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Belting_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Seismic_Factor_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Total_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_A_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_A_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_B_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_B_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_C_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_C_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_D_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_D_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_E_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_E_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_F_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_F_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_G_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_G_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_K_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_K_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_M_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_M_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_N_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_N_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_P_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_P_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_R_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_R_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Header_Steel_and_Hangers_Ea_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Header_Steel_Hangers_Ea_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Diverts_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Gates_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Pneumatic_Diverts_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Pneumatic_Transfers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Transfers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBeds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBeds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBelting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBelting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersLayout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersLayout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersRunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersRunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersSideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersSupports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersSupports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersTotal_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersTotal_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersUnloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersUnloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Diverts_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Total_PHours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Beds_Avg_Height_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Beds_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Beds_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Belting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Belting_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Layout_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Layout_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_RunIn_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_RunIn_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_SideGuide_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_SideGuide_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_SideGuide_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Supports_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Total_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Unloading_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Unloading_Units_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Total_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Dollars_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Metric_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Qty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_Misc_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_Total_Conveyor_Hrs_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_With_Buyouts_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MechInstallHours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MechInstallHoursQ_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Curve_Chute_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Curve_Chute_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Curve_Chute_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_FT_TOTAL_FOR_AREA_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_HRS_TOTAL_FOR_AREA_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_PBC_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_PBC_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_PBC_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Single_crows_nest_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Single_crows_nest_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Single_crows_nest_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Singulator_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Singulator_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Singulator_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Spiral_Chute_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Spiral_Chute_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Spiral_Chute_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Straight_Chute_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Straight_Chute_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Straight_Chute_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Total_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Transition_plates_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Transition_plates_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Transition_plates_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Air_Devices_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Anchors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Supports_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Supports_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Total_Air_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Unloading_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Bottom_Guards_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Bottom_Guards_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Bottom_Guards_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Hand_rail_and_cable_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Hand_rail_and_cable_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Mount_Motors_Drives_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Mount_Motors_Drives_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Total_HRS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Bar_Grating_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_CATWALK_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Resin_Deck_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Ship_Ladders_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Stair_Landing_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Total_Subsystem_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Bed_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Intelliq_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Rollers_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Rollers_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Modules_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Modules_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Rollers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Rollers_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Rollers_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Roller_Centers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Roller_Count_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Total_hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Total_hours_per_12_ft_Bed_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Zone_Length_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_a_Sample_Cnvy_Hrs_MDR_Bed_Size_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_bool_Include_In_Subsystem_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DisplayName_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Anchors_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Anchors_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Anchors_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Subsystem_Efficiency_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Total_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Add_Hours_Dollars_Total_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_112_inches_pipe_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_12_inches_pipe_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_212_inches_pipe_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_3pipe_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_78_inches_pipe_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_AC_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_CHAINLUB_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_Dryer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_FILTERREG_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_RedAC_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_SUBTOTAL_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_SUBTOTAL_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_SUBTOTAL_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Air_Piping_Tubing_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Bottom_Guards_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Bottom_Guards_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Bottom_Guards_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_BULK_FLOW_FOOTAGE_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Hand_rail_and_cable_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Hand_rail_and_cable_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Hand_rail_and_cable_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Mount_Motors_Drives_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Mount_Motors_Drives_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Mount_Motors_Drives_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Bulk_Flow_Total_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Cost_of_Air_per_Linear_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DATA_CPNumber_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DATA_Raw_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Demo_Removed_existing_Ft_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Demo_Removed_existing_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Demo_Removed_existing_Scrap_1_or_Keep_2_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Extra_Filter_Regulators_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Air_Devices_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltBrakeMeter_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonRoller_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltonSlider_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_BeltStaging_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Buyout_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Buyout_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Chutes_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Catwalk_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Catwalk_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Crossovers_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ECCTrashBelt_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Beds_Units_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_FlatBeltCurves_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Belting_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Gravity_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_GravityTrailerLoader_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Seismic_Factor_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Total_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_A_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_A_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_B_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_B_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_C_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_C_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_D_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_D_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_E_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_E_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_F_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_F_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_G_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_G_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_K_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_K_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_M_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_M_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_N_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_N_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_P_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_P_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_R_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Hanger_Type_R_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Header_Steel_and_Hangers_Ea_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_Header_Steel_Hangers_Ea_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliFlow_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Layout_Units_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliMerge_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_IntelliQAccuglide_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Diverts_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Gates_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Pneumatic_Diverts_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Pneumatic_Transfers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Transfers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_MDR_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_PoweredTrailerLoader_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBeds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBeds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBelting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersBelting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersLayout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersLayout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersRunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersRunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersSideGuide_Units_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersSupports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersSupports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersTotal_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersTotal_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersUnloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ScalesSealersStrappersUnloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ServoInductunits_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Diverts_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_ShoeSorter_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_SpiralCurvessets_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Beds_Avg_Height_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Total_PHours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_VBelt_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Beds_Avg_Height_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Beds_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Beds_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Belting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Belting_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Layout_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Layout_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_RunIn_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_RunIn_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_SideGuide_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_SideGuide_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_SideGuide_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Supports_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Total_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Unloading_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_HCAD_WheelDivert_Unloading_Units_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_1_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_2_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Style_3_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Total_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hours_Misc_Chute_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_80_20_Guards_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Angle_Guarding_ft_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_AR_Induct_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_ARSAW_ARSTOWS_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Autobag_850_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Baffled_Shipping_Chutes_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Ball_Transfer_Tables_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_BangerBarsHtProte_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Bottom_Pans_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Carton_Erector_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Conveyor_Wipe_Down_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_CVG9_Style_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Deflector_Plows_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dehnco_Work_Tables_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Descrambler_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Dual_Inlet_Spiral_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gates_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gaylord_Tipper_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_GMT_Auto_Unloader_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Gravity_Spurs_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_HC_Spiral_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Highway_Guarding_P_R_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Intralox_Sorter_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Merging_Spirals_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Mesh_Ugaurd_per_linear_ft_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Netting_linear_ft_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_PandA_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Personnel_Fencing_Temp_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Pick_Mod_Trash_Chutes_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Spirals_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Powered_Swing_Arm_Divert_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Proos_PUT_Walls_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_QA_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Semi_Auto_Taper_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Singulator_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SLAMS_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_SmartPac_Machines_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Snowplow_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Sound_Abatement_Hood_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Chutes_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Spiral_Netting_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Stuff_It_De_Stuff_It_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tie_Ins_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Plows_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Tote_Shelves_per_linear_ft_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_UPS_90_Curve_Chute_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_Tote_Stacker_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_USS_VICS_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Vertical_Lifts_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Dollars_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Metric_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Hrs_Misc_Work_Stations_Qty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_Misc_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_Perc_Complete_Sys_Hrs_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_Total_Conveyor_Hrs_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Linear_Footage_of_Conveyor_With_Buyouts_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MechInstallHours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MechInstallHoursQ_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_90deg_platform_for_PBC_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Curve_Chute_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Curve_Chute_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Curve_Chute_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Dual_crows_nest_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_FT_TOTAL_FOR_AREA_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_HRS_TOTAL_FOR_AREA_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_PBC_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_PBC_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_PBC_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Single_crows_nest_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Single_crows_nest_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Single_crows_nest_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Singulator_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Singulator_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Singulator_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Spiral_Chute_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Spiral_Chute_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Spiral_Chute_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Straight_Chute_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Straight_Chute_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Straight_Chute_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Total_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Transition_plates_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Transition_plates_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Misc_Parcel_Items_Transition_plates_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Air_Devices_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Anchors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_0_to_8_ft_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_12_1_to_18_ft_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_18_1_ft_and_up_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_CDLR_8_1_to_12_ft_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_Wed_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Chain_Trans_Cnvyr_Air_Op_WedHrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Deflector_Plows_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Empty_Pallet_Collector_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Footage_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Fencing_Gates_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Flr_Mount_Truck_Pallet_Stop_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Gravity_Spurs_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_large_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Lift_normal_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Light_Curtain_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pallet_Gates_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Plt_Flow_Rails_per_lin_foot_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Puller_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Pusher_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Robot_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Sizing_Station_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Supports_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Supports_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Supports_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Car_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Transfer_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_MISC_Turntable_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_0_to_5_ft_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_10_1_to_15_ft_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_15_1_ft_and_up_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_5_1_to_10_ft_Units_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_Hrs_Ea_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_T5_Chain_Chain_Install_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Total_Air_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Plt_Cnvyr_Unloading_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Bottom_Guards_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Bottom_Guards_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Bottom_Guards_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Hand_rail_and_cable_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Hand_rail_and_cable_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Hand_rail_and_cable_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Mount_Motors_Drives_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Mount_Motors_Drives_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Mount_Motors_Drives_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_Metrics_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_SINGULATED_FLOW_FOOTAGE_QTY_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Singulated_Flow_Total_HRS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Bar_Grating_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Bar_Grating_Total_Ft_SqFt_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_CATWALK_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_CATWALK_Total_Ft_SqFt_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_GRID_STRUCTURE_Total_Ft_SqFt_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Resin_Deck_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Resin_Deck_Total_Ft_SqFt_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Ship_Ladders_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Ship_Ladders_Total_Ft_SqFt_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Stair_Landing_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Struct_Catwalk_Stair_Landing_Total_Ft_SqFt_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Total_Subsystem_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Bed_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Intelliq_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Guard_Rail_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Rollers_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Remove_Rollers_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Guard_Railing_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Modules_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Modules_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Puck_Sets_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Rollers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Rollers_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Replace_Rollers_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Roller_Centers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Roller_Count_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Run_Air_Tubing_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Total_hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Total_hours_per_12_ft_Bed_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_ZFA_Retrofit_Zone_Length_USERCHANGE() as Boolean
      Return True
      End Function
    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Function GetRecordsetSQL(ByVal lngDBConID as Long) as String Implements RuleStream.IRsPartFormulas.GetRecordsetSQL
    Dim strSelectStmt As String = ""
    Return strSelectStmt
    End Function
    #End Region

    #Region "Event Handling "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub AddRsEventHandlerMappings()
    
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub RemoveRsEventHandlerMappings()
    
    End Sub
    #End Region

    End Class

  