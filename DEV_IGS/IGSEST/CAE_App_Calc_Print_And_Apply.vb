Option Strict Off
Option Explicit On 
Option Infer On

'$ Application: IGSEST
'$ PartFamily: CAE_App_Calc_Print_And_Apply
'$ GenerateDate: 07/17/2025 11:55:31

    Imports Microsoft.VisualBasic
    Imports System
    Imports System.IO
    Imports System.Data
    Imports System.Windows.Forms
    Imports System.Collections
    Imports System.Diagnostics
    Imports System.Math
    Imports System.Xml
    Imports System.Xml.Linq
    Imports RuleStream
    Imports RuleStream.Kernel
    Imports System.Collections.Generic
    Imports RulestreamTCUtilities
    Imports IGSEST.swMateType_e
    Imports IGSEST.swMateAlign_e
    Imports IGSEST.severity

    Public Class [CAE_App_Calc_Print_And_Apply]
    
    Inherits RuleStream.Kernel.Part
    Implements RuleStream.IRsPartFormulas

    '*************************************************************************
    '*                                                                       *
    '*   This source code, together with any object or execution files       *
    '*   generated herefrom (whether by compiling, translating, or linking   *
    '*   this source file to any header files, resource files, library       *
    '*   files, other source files or object files) are confidential and     *
    '*   proprietary to Siemens Product Lifecycle Management Software Inc.   *
    '*   No person may sell, offer for sale, copy, use, compile, translate   *
    '*   or link this source                                                 *
    '*   file without the written prior approval of Siemens Product          *
    '*   Lifecycle Management Software Inc.                                  *
    '*                                                                       *
    '*   Copyright (C) 2024 Siemens. All rights reserved.                    *
    '*                                                                       *
    '*************************************************************************

    Private this as CAE_App_Calc_Print_And_Apply = me

    #Region " IRsPartFormulas Implementation "

    Public Function GetNormalValue(ByVal Value as Object, ByVal propertyName As String, ByVal context As String) As Double Implements RuleStream.IRsPartFormulas.GetNormalValue
    Dim MethodName as String = string.format("Formula_{0}_NORMALVALUE{1}", propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method, Value)
    End Function

    Public Function GetOptimalPartFamily(ByVal subpartSpecName As String, ByVal context As String) As String Implements RuleStream.IRsPartFormulas.GetOptimalPartFamily
    Dim MethodName as String = string.format("Formula_{0}_OPTIMALPARTFAMILY{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetPartNames(ByVal subpartSpecName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetPartNames
    Dim MethodName as String = string.format("Formula_{0}_PARTNAMES{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetParts(ByVal specName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetParts
    Dim MethodName as String = string.format("Formula_{0}_PARTS{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetProcessStepComment(ByVal processId As String, ByVal processStep As String) As String Implements RuleStream.IRsPartFormulas.GetProcessStepComment
    Dim Result as String = ""
    
    Return Result
    End Function

    Public Function GetProcessStepStatus(ByVal processId As String, ByVal processStep As String) As Integer Implements RuleStream.IRsPartFormulas.GetProcessStepStatus
    Dim Result as Integer 'Long
    
    Return Result
    End Function

    Public Function GetQuantity(ByVal subpartSpecName As String, ByVal context As String) As Integer Implements RuleStream.IRsPartFormulas.GetQuantity
    Dim MethodName as String = string.format("Formula_{0}_QUANTITY{1}",subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResult(ByVal propertyName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetResult
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResultCustomCheckDependancy(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetResultCustomCheckDependancy
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetUserChange(ByVal specName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetUserChange
    Dim MethodName as String = string.format("Formula_{0}_USERCHANGE{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetHideCalculatedValue(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetHideCalculatedValue
    Dim MethodName as String = string.format("Formula_{0}_HIDE_CALCULATED_VALUE{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Sub NewContextInit() Implements RuleStream.IRsPartFormulas.NewContextInit
    NewContextInit_Properties()
    NewContextInit_ValidValues()
    NewContextInit_Subparts()
    NewContextInit_Connections()
    NewContextInit_DB()
    End Sub

    Public Sub OnChanged(ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method)
    Select Case specName & "_" & context
    End Select
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Sub OnChanged(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Function OnChangedStatus(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String)As Boolean Implements RuleStream.IRsPartFormulas.OnChangedStatus
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Dim Status as Boolean = False
    Select Case specName & "_" & context
    Case Else
    Status = False
    End Select
    Return Status
    End Function

    #End Region

    #Region " Properties, Subparts, Connections "
    
          Public Property [Brush_Length_Factor_IN]() As Double
      Get
      Return Properties("Brush_Length_Factor_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Brush_Length_Factor_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Customer_Date]() As String
      Get
      Return Properties("Customer_Date").Value
      End Get
      Set(ByVal Value As String)
      Properties("Customer_Date").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Customer_Location]() As String
      Get
      Return Properties("Customer_Location").Value
      End Get
      Set(ByVal Value As String)
      Properties("Customer_Location").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Customer_Name]() As String
      Get
      Return Properties("Customer_Name").Value
      End Get
      Set(ByVal Value As String)
      Properties("Customer_Name").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Customer_Proposal_Number]() As String
      Get
      Return Properties("Customer_Proposal_Number").Value
      End Get
      Set(ByVal Value As String)
      Properties("Customer_Proposal_Number").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Max_Pneumatic_Stroke_IN]() As Double
      Get
      Return Properties("Max_Pneumatic_Stroke_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Max_Pneumatic_Stroke_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic]() As Double
      Get
      Return Properties("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo]() As Double
      Get
      Return Properties("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Pneumatic_Min_Head_to_Head_IN]() As Double
      Get
      Return Properties("Pneumatic_Min_Head_to_Head_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Pneumatic_Min_Head_to_Head_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Pneumatic_Tamp_Min_Gap_IN]() As Double
      Get
      Return Properties("Pneumatic_Tamp_Min_Gap_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Pneumatic_Tamp_Min_Gap_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Servo_Min_Head_to_Head_IN]() As Double
      Get
      Return Properties("Servo_Min_Head_to_Head_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Servo_Min_Head_to_Head_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Servo_Tamp_Min_Gap_IN]() As Double
      Get
      Return Properties("Servo_Tamp_Min_Gap_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Servo_Tamp_Min_Gap_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [User_UOM_System]() As String
      Get
      Return Properties("User_UOM_System").Value
      End Get
      Set(ByVal Value As String)
      Properties("User_UOM_System").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Acq_Label_Data_Acquisition_Method]() As String
      Get
      Return Properties("Acq_Label_Data_Acquisition_Method").Value
      End Get
      Set(ByVal Value As String)
      Properties("Acq_Label_Data_Acquisition_Method").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Acq_Label_Data_Acquisition_Travel_IN]() As Double
      Get
      Return Properties("Acq_Label_Data_Acquisition_Travel_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Acq_Label_Data_Acquisition_Travel_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Acq_Label_Data_Acquisition_Travel_User]() As Double
      Get
      Return Properties("Acq_Label_Data_Acquisition_Travel_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Acq_Label_Data_Acquisition_Travel_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Acq_Label_Data_Acquisition_Travel_User_UOM]() As String
      Get
      Return Properties("Acq_Label_Data_Acquisition_Travel_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Acq_Label_Data_Acquisition_Travel_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Acq_Max_Host_Resp_Time_Secs]() As Double
      Get
      Return Properties("Acq_Max_Host_Resp_Time_Secs").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Acq_Max_Host_Resp_Time_Secs").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Acq_Max_Local_Lookup_Time_Secs]() As Double
      Get
      Return Properties("Acq_Max_Local_Lookup_Time_Secs").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Acq_Max_Local_Lookup_Time_Secs").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_App_Belt_Length_Req_FT]() As Double
      Get
      Return Properties("Conv_Total_App_Belt_Length_Req_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conv_Total_App_Belt_Length_Req_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_App_Belt_Length_Req_FT_User]() As Double
      Get
      Return Properties("Conv_Total_App_Belt_Length_Req_FT_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conv_Total_App_Belt_Length_Req_FT_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_App_Belt_Length_Req_FT_User_UOM]() As String
      Get
      Return Properties("Conv_Total_App_Belt_Length_Req_FT_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Conv_Total_App_Belt_Length_Req_FT_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_App_Belt_Length_Req_IN]() As Double
      Get
      Return Properties("Conv_Total_App_Belt_Length_Req_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conv_Total_App_Belt_Length_Req_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_App_Belt_Length_Req_IN_User]() As Double
      Get
      Return Properties("Conv_Total_App_Belt_Length_Req_IN_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conv_Total_App_Belt_Length_Req_IN_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_App_Belt_Length_Req_IN_User_UOM]() As String
      Get
      Return Properties("Conv_Total_App_Belt_Length_Req_IN_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Conv_Total_App_Belt_Length_Req_IN_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_Solution_Length_FT]() As Double
      Get
      Return Properties("Conv_Total_Solution_Length_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conv_Total_Solution_Length_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_Solution_Length_FT_User]() As Double
      Get
      Return Properties("Conv_Total_Solution_Length_FT_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conv_Total_Solution_Length_FT_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conv_Total_Solution_Length_FT_User_UOM]() As String
      Get
      Return Properties("Conv_Total_Solution_Length_FT_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Conv_Total_Solution_Length_FT_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Accumulation_Convey_Type_Pre_Panda]() As String
      Get
      Return Properties("Gen_Accumulation_Convey_Type_Pre_Panda").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_Accumulation_Convey_Type_Pre_Panda").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Accumulation_Zone_Length_IN]() As Double
      Get
      Return Properties("Gen_Accumulation_Zone_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Accumulation_Zone_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Accumulation_Zone_Length_User]() As Double
      Get
      Return Properties("Gen_Accumulation_Zone_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Accumulation_Zone_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Accumulation_Zone_Length_User_UOM]() As String
      Get
      Return Properties("Gen_Accumulation_Zone_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_Accumulation_Zone_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Accumulation_Zone_Quantity]() As Long
      Get
      Return Properties("Gen_Accumulation_Zone_Quantity").Value
      End Get
      Set(ByVal Value As Long)
      Properties("Gen_Accumulation_Zone_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Belt_Speed_IN]() As Double
      Get
      Return Properties("Gen_Belt_Speed_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Belt_Speed_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Belt_Speed_User]() As Double
      Get
      Return Properties("Gen_Belt_Speed_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Belt_Speed_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Belt_Speed_User_Max_Value]() As Double
      Get
      Return Properties("Gen_Belt_Speed_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Belt_Speed_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Belt_Speed_User_Min_Value]() As Double
      Get
      Return Properties("Gen_Belt_Speed_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Belt_Speed_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Belt_Speed_User_UOM]() As String
      Get
      Return Properties("Gen_Belt_Speed_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_Belt_Speed_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Acc_Dec_Rate_IN]() As Double
      Get
      Return Properties("Gen_BM_Belt_Acc_Dec_Rate_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Acc_Dec_Rate_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Acc_Dec_Rate_User]() As Double
      Get
      Return Properties("Gen_BM_Belt_Acc_Dec_Rate_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Acc_Dec_Rate_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value]() As Double
      Get
      Return Properties("Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value]() As Double
      Get
      Return Properties("Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Acc_Dec_Rate_User_UOM]() As String
      Get
      Return Properties("Gen_BM_Belt_Acc_Dec_Rate_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_BM_Belt_Acc_Dec_Rate_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Gap_Stop_Min_Carton_IN]() As Double
      Get
      Return Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Gap_Stop_Min_Carton_User]() As Double
      Get
      Return Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM]() As String
      Get
      Return Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Input_Speed_IN]() As Double
      Get
      Return Properties("Gen_BM_Belt_Input_Speed_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Input_Speed_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Input_Speed_User]() As Double
      Get
      Return Properties("Gen_BM_Belt_Input_Speed_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_Input_Speed_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_Input_Speed_User_UOM]() As String
      Get
      Return Properties("Gen_BM_Belt_Input_Speed_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_BM_Belt_Input_Speed_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_PTO_Ratio]() As Double
      Get
      Return Properties("Gen_BM_Belt_PTO_Ratio").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_PTO_Ratio").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_BM_Belt_PTO_Target_Ratio]() As Double
      Get
      Return Properties("Gen_BM_Belt_PTO_Target_Ratio").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_BM_Belt_PTO_Target_Ratio").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Conveyor_Type]() As String
      Get
      Return Properties("Gen_Conveyor_Type").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_Conveyor_Type").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Conveyor_Width_IN]() As Double
      Get
      Return Properties("Gen_Conveyor_Width_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Conveyor_Width_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Conveyor_Width_User]() As Double
      Get
      Return Properties("Gen_Conveyor_Width_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Conveyor_Width_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Conveyor_Width_User_UOM]() As String
      Get
      Return Properties("Gen_Conveyor_Width_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_Conveyor_Width_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_MDR_Min_Gap_Throughput_Limit_IN]() As Double
      Get
      Return Properties("Gen_MDR_Min_Gap_Throughput_Limit_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_MDR_Min_Gap_Throughput_Limit_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_MDR_Min_Gap_Throughput_Limit_User]() As Double
      Get
      Return Properties("Gen_MDR_Min_Gap_Throughput_Limit_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_MDR_Min_Gap_Throughput_Limit_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_MDR_Min_Gap_Throughput_Limit_User_UOM]() As String
      Get
      Return Properties("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Gen_Throughput_Rate]() As Double
      Get
      Return Properties("Gen_Throughput_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Gen_Throughput_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Panels_Scanned_Quantity]() As Long
      Get
      Return Properties("Ind_Scan_Carton_Panels_Scanned_Quantity").Value
      End Get
      Set(ByVal Value As Long)
      Properties("Ind_Scan_Carton_Panels_Scanned_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Percent_Max_Length_Scanned]() As Double
      Get
      Return Properties("Ind_Scan_Carton_Percent_Max_Length_Scanned").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Carton_Percent_Max_Length_Scanned").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Percent_Max_Length_Scanned_User]() As Double
      Get
      Return Properties("Ind_Scan_Carton_Percent_Max_Length_Scanned_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Carton_Percent_Max_Length_Scanned_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Presentation]() As String
      Get
      Return Properties("Ind_Scan_Carton_Presentation").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Carton_Presentation").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Scanned_Max_Lin_Length_IN]() As Double
      Get
      Return Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Scanned_Max_Lin_Length_User]() As Double
      Get
      Return Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM]() As String
      Get
      Return Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Label_Orientation]() As String
      Get
      Return Properties("Ind_Scan_Label_Orientation").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Label_Orientation").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scan_App_Min_Gap_IN]() As Double
      Get
      Return Properties("Ind_Scan_Scan_App_Min_Gap_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Scan_App_Min_Gap_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scan_App_Min_Gap_User]() As Double
      Get
      Return Properties("Ind_Scan_Scan_App_Min_Gap_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Scan_App_Min_Gap_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scan_App_Min_Gap_User_UOM]() As String
      Get
      Return Properties("Ind_Scan_Scan_App_Min_Gap_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Scan_App_Min_Gap_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scan_Window_Length_Req_IN]() As Double
      Get
      Return Properties("Ind_Scan_Scan_Window_Length_Req_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Scan_Window_Length_Req_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scan_Window_Length_Req_User]() As Double
      Get
      Return Properties("Ind_Scan_Scan_Window_Length_Req_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Scan_Window_Length_Req_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scan_Window_Length_Req_User_UOM]() As String
      Get
      Return Properties("Ind_Scan_Scan_Window_Length_Req_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Scan_Window_Length_Req_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scanner_Config]() As String
      Get
      Return Properties("Ind_Scan_Scanner_Config").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Scanner_Config").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scanner_Data_Transmit_Mode]() As String
      Get
      Return Properties("Ind_Scan_Scanner_Data_Transmit_Mode").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Scanner_Data_Transmit_Mode").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scanner_Min_Xmit_Point_IN]() As Double
      Get
      Return Properties("Ind_Scan_Scanner_Min_Xmit_Point_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Scanner_Min_Xmit_Point_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scanner_Min_Xmit_Point_User]() As Double
      Get
      Return Properties("Ind_Scan_Scanner_Min_Xmit_Point_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Scanner_Min_Xmit_Point_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Scanner_Min_Xmit_Point_User_UOM]() As String
      Get
      Return Properties("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Shadowing_Allowed]() As String
      Get
      Return Properties("Ind_Scan_Shadowing_Allowed").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Shadowing_Allowed").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Shadowing_Potential]() As String
      Get
      Return Properties("Ind_Scan_Shadowing_Potential").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Shadowing_Potential").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Tracking_Photocell_Distance_IN]() As Double
      Get
      Return Properties("Ind_Scan_Tracking_Photocell_Distance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Tracking_Photocell_Distance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Tracking_Photocell_Distance_User]() As Double
      Get
      Return Properties("Ind_Scan_Tracking_Photocell_Distance_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Tracking_Photocell_Distance_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Tracking_Photocell_Distance_User_Max_Val]() As Double
      Get
      Return Properties("Ind_Scan_Tracking_Photocell_Distance_User_Max_Val").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Tracking_Photocell_Distance_User_Max_Val").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Tracking_Photocell_Distance_User_Min_Val]() As Double
      Get
      Return Properties("Ind_Scan_Tracking_Photocell_Distance_User_Min_Val").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ind_Scan_Tracking_Photocell_Distance_User_Min_Val").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ind_Scan_Tracking_Photocell_Distance_User_UOM]() As String
      Get
      Return Properties("Ind_Scan_Tracking_Photocell_Distance_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ind_Scan_Tracking_Photocell_Distance_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MDR_RAT_Swivel_Rate]() As Double
      Get
      Return Properties("MDR_RAT_Swivel_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MDR_RAT_Swivel_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Average_IN]() As Double
      Get
      Return Properties("MTBH_Height_Average_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Average_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Average_User]() As Double
      Get
      Return Properties("MTBH_Height_Average_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Average_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Average_User_UOM]() As String
      Get
      Return Properties("MTBH_Height_Average_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Height_Average_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Maximum_IN]() As Double
      Get
      Return Properties("MTBH_Height_Maximum_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Maximum_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Maximum_User]() As Double
      Get
      Return Properties("MTBH_Height_Maximum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Maximum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Maximum_User_Max_Value]() As Double
      Get
      Return Properties("MTBH_Height_Maximum_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Maximum_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Maximum_User_UOM]() As String
      Get
      Return Properties("MTBH_Height_Maximum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Height_Maximum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Minimum_IN]() As Double
      Get
      Return Properties("MTBH_Height_Minimum_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Minimum_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Minimum_User]() As Double
      Get
      Return Properties("MTBH_Height_Minimum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Minimum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Minimum_User_Min_Value]() As Double
      Get
      Return Properties("MTBH_Height_Minimum_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Height_Minimum_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Height_Minimum_User_UOM]() As String
      Get
      Return Properties("MTBH_Height_Minimum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Height_Minimum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Average_IN]() As Double
      Get
      Return Properties("MTBH_Length_Average_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Average_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Average_User]() As Double
      Get
      Return Properties("MTBH_Length_Average_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Average_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Average_User_UOM]() As String
      Get
      Return Properties("MTBH_Length_Average_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Length_Average_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Maximum_IN]() As Double
      Get
      Return Properties("MTBH_Length_Maximum_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Maximum_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Maximum_User]() As Double
      Get
      Return Properties("MTBH_Length_Maximum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Maximum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Maximum_User_Max_Value]() As Double
      Get
      Return Properties("MTBH_Length_Maximum_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Maximum_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Maximum_User_UOM]() As String
      Get
      Return Properties("MTBH_Length_Maximum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Length_Maximum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Minimum_IN]() As Double
      Get
      Return Properties("MTBH_Length_Minimum_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Minimum_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Minimum_User]() As Double
      Get
      Return Properties("MTBH_Length_Minimum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Minimum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Minimum_User_Min_Value]() As Double
      Get
      Return Properties("MTBH_Length_Minimum_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Length_Minimum_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Length_Minimum_User_UOM]() As String
      Get
      Return Properties("MTBH_Length_Minimum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Length_Minimum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Use_Local]() As String
      Get
      Return Properties("MTBH_Use_Local").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Use_Local").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Average_LBS]() As Double
      Get
      Return Properties("MTBH_Weight_Average_LBS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Average_LBS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Average_User]() As Double
      Get
      Return Properties("MTBH_Weight_Average_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Average_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Average_User_UOM]() As String
      Get
      Return Properties("MTBH_Weight_Average_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Weight_Average_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Maximum_LBS]() As Double
      Get
      Return Properties("MTBH_Weight_Maximum_LBS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Maximum_LBS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Maximum_User]() As Double
      Get
      Return Properties("MTBH_Weight_Maximum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Maximum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Maximum_User_Max_Value]() As Double
      Get
      Return Properties("MTBH_Weight_Maximum_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Maximum_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Maximum_User_UOM]() As String
      Get
      Return Properties("MTBH_Weight_Maximum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Weight_Maximum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Minimum_LBS]() As Double
      Get
      Return Properties("MTBH_Weight_Minimum_LBS").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Minimum_LBS").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Minimum_User]() As Double
      Get
      Return Properties("MTBH_Weight_Minimum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Minimum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Minimum_User_Min_Value]() As Double
      Get
      Return Properties("MTBH_Weight_Minimum_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Weight_Minimum_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Weight_Minimum_User_UOM]() As String
      Get
      Return Properties("MTBH_Weight_Minimum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Weight_Minimum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Average_IN]() As Double
      Get
      Return Properties("MTBH_Width_Average_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Average_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Average_User]() As Double
      Get
      Return Properties("MTBH_Width_Average_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Average_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Average_User_UOM]() As String
      Get
      Return Properties("MTBH_Width_Average_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Width_Average_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Maximum_IN]() As Double
      Get
      Return Properties("MTBH_Width_Maximum_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Maximum_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Maximum_User]() As Double
      Get
      Return Properties("MTBH_Width_Maximum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Maximum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Maximum_User_Max_Value]() As Double
      Get
      Return Properties("MTBH_Width_Maximum_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Maximum_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Maximum_User_UOM]() As String
      Get
      Return Properties("MTBH_Width_Maximum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Width_Maximum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Minimum_IN]() As Double
      Get
      Return Properties("MTBH_Width_Minimum_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Minimum_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Minimum_User]() As Double
      Get
      Return Properties("MTBH_Width_Minimum_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Minimum_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Minimum_User_Min_Value]() As Double
      Get
      Return Properties("MTBH_Width_Minimum_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MTBH_Width_Minimum_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MTBH_Width_Minimum_User_UOM]() As String
      Get
      Return Properties("MTBH_Width_Minimum_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("MTBH_Width_Minimum_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Carton_Stability_Length_IN]() As Double
      Get
      Return Properties("Output_Carton_Stability_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Carton_Stability_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Carton_Stability_Length_User]() As Double
      Get
      Return Properties("Output_Carton_Stability_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Carton_Stability_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Carton_Stability_Length_User_UOM]() As String
      Get
      Return Properties("Output_Carton_Stability_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Carton_Stability_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induct_Max_Lgth_of_Carton_Scanned_IN]() As Double
      Get
      Return Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induct_Max_Lgth_of_Carton_Scanned_User]() As Double
      Get
      Return Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM]() As String
      Get
      Return Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induct_Scan_Data_Cap_Window_Lgth_IN]() As Double
      Get
      Return Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induct_Scan_Data_Cap_Window_Lgth_User]() As Double
      Get
      Return Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM]() As String
      Get
      Return Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induction_Scan_Window_Length_IN]() As Double
      Get
      Return Properties("Output_Induction_Scan_Window_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Induction_Scan_Window_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induction_Scan_Window_Length_User]() As Double
      Get
      Return Properties("Output_Induction_Scan_Window_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Induction_Scan_Window_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Induction_Scan_Window_Length_User_UOM]() As String
      Get
      Return Properties("Output_Induction_Scan_Window_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Induction_Scan_Window_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Label_Data_Acq_Distance_App_1_IN]() As Double
      Get
      Return Properties("Output_Label_Data_Acq_Distance_App_1_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Label_Data_Acq_Distance_App_1_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Label_Data_Acq_Distance_App_1_User]() As Double
      Get
      Return Properties("Output_Label_Data_Acq_Distance_App_1_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Label_Data_Acq_Distance_App_1_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Label_Data_Acq_Distance_App_1_User_UOM]() As String
      Get
      Return Properties("Output_Label_Data_Acq_Distance_App_1_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Label_Data_Acq_Distance_App_1_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Label_Data_Acq_Distance_App_2_IN]() As Double
      Get
      Return Properties("Output_Label_Data_Acq_Distance_App_2_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Label_Data_Acq_Distance_App_2_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Label_Data_Acq_Distance_App_2_User]() As Double
      Get
      Return Properties("Output_Label_Data_Acq_Distance_App_2_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Label_Data_Acq_Distance_App_2_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Label_Data_Acq_Distance_App_2_User_UOM]() As String
      Get
      Return Properties("Output_Label_Data_Acq_Distance_App_2_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Label_Data_Acq_Distance_App_2_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN]() As Double
      Get
      Return Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User]() As Double
      Get
      Return Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM]() As String
      Get
      Return Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_Between_Applicator_1_2_IN]() As Double
      Get
      Return Properties("Output_Min_Distance_Between_Applicator_1_2_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Distance_Between_Applicator_1_2_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_Between_Applicator_1_2_User]() As Double
      Get
      Return Properties("Output_Min_Distance_Between_Applicator_1_2_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Distance_Between_Applicator_1_2_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_Between_Applicator_1_2_User_UO]() As String
      Get
      Return Properties("Output_Min_Distance_Between_Applicator_1_2_User_UO").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Min_Distance_Between_Applicator_1_2_User_UO").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_for_Printer_Setup_IN]() As Double
      Get
      Return Properties("Output_Min_Distance_for_Printer_Setup_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Distance_for_Printer_Setup_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_for_Printer_Setup_User]() As Double
      Get
      Return Properties("Output_Min_Distance_for_Printer_Setup_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Distance_for_Printer_Setup_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_for_Printer_Setup_User_UOM]() As String
      Get
      Return Properties("Output_Min_Distance_for_Printer_Setup_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Min_Distance_for_Printer_Setup_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_IN]() As Double
      Get
      Return Properties("Output_Min_Distance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Distance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_User]() As Double
      Get
      Return Properties("Output_Min_Distance_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Min_Distance_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Min_Distance_User_UOM]() As String
      Get
      Return Properties("Output_Min_Distance_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Min_Distance_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_PandA_Belt_Exit_PE_Distance_IN]() As Double
      Get
      Return Properties("Output_PandA_Belt_Exit_PE_Distance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_PandA_Belt_Exit_PE_Distance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_PandA_Belt_Exit_PE_Distance_User]() As Double
      Get
      Return Properties("Output_PandA_Belt_Exit_PE_Distance_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_PandA_Belt_Exit_PE_Distance_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_PandA_Belt_Exit_PE_Distance_User_UOM]() As String
      Get
      Return Properties("Output_PandA_Belt_Exit_PE_Distance_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_PandA_Belt_Exit_PE_Distance_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Double_FT]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Double_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Double_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Double_FT_User]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Double_FT_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Double_FT_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Double_FT_User_UOM]() As String
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Double_FT_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Total_Calc_Belt_Length_Double_FT_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Double_IN]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Double_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Double_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Double_IN_User]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Double_IN_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Double_IN_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Double_IN_User_UOM]() As String
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Double_IN_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Total_Calc_Belt_Length_Double_IN_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Single_FT]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Single_FT").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Single_FT").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Single_FT_User]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Single_FT_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Single_FT_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Single_FT_User_UOM]() As String
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Single_FT_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Total_Calc_Belt_Length_Single_FT_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Single_IN]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Single_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Single_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Single_IN_User]() As Double
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Single_IN_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Total_Calc_Belt_Length_Single_IN_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Total_Calc_Belt_Length_Single_IN_User_UOM]() As String
      Get
      Return Properties("Output_Total_Calc_Belt_Length_Single_IN_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Total_Calc_Belt_Length_Single_IN_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Ver_Max_Length_of_Carton_Scanned_IN]() As Double
      Get
      Return Properties("Output_Ver_Max_Length_of_Carton_Scanned_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Ver_Max_Length_of_Carton_Scanned_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Ver_Max_Length_of_Carton_Scanned_User]() As Double
      Get
      Return Properties("Output_Ver_Max_Length_of_Carton_Scanned_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Ver_Max_Length_of_Carton_Scanned_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Ver_Max_Length_of_Carton_Scanned_User_UOM]() As String
      Get
      Return Properties("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Ver_Scan_Data_Capture_Window_Length_IN]() As Double
      Get
      Return Properties("Output_Ver_Scan_Data_Capture_Window_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Ver_Scan_Data_Capture_Window_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Ver_Scan_Data_Capture_Window_Length_User]() As Double
      Get
      Return Properties("Output_Ver_Scan_Data_Capture_Window_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Ver_Scan_Data_Capture_Window_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Ver_Scan_Data_Capture_Window_Length_User_UO]() As String
      Get
      Return Properties("Output_Ver_Scan_Data_Capture_Window_Length_User_UO").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Ver_Scan_Data_Capture_Window_Length_User_UO").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Verify_Scanner_Distance_to_Xmit_IN]() As Double
      Get
      Return Properties("Output_Verify_Scanner_Distance_to_Xmit_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Verify_Scanner_Distance_to_Xmit_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Verify_Scanner_Distance_to_Xmit_User]() As Double
      Get
      Return Properties("Output_Verify_Scanner_Distance_to_Xmit_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Verify_Scanner_Distance_to_Xmit_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Verify_Scanner_Distance_to_Xmit_User_UOM]() As String
      Get
      Return Properties("Output_Verify_Scanner_Distance_to_Xmit_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Verify_Scanner_Distance_to_Xmit_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Verify_Scanner_Window_Length_IN]() As Double
      Get
      Return Properties("Output_Verify_Scanner_Window_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Verify_Scanner_Window_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Verify_Scanner_Window_Length_User]() As Double
      Get
      Return Properties("Output_Verify_Scanner_Window_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Output_Verify_Scanner_Window_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Output_Verify_Scanner_Window_Length_User_UOM]() As String
      Get
      Return Properties("Output_Verify_Scanner_Window_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Output_Verify_Scanner_Window_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Down_Stroke_Tamp_Clearance_IN]() As Double
      Get
      Return Properties("App_Down_Stroke_Tamp_Clearance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Down_Stroke_Tamp_Clearance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Down_Stroke_Tamp_Clearance_User]() As Double
      Get
      Return Properties("App_Down_Stroke_Tamp_Clearance_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Down_Stroke_Tamp_Clearance_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Down_Stroke_Tamp_Clearance_User_Max_Value]() As Double
      Get
      Return Properties("App_Down_Stroke_Tamp_Clearance_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Down_Stroke_Tamp_Clearance_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Down_Stroke_Tamp_Clearance_User_Min_Value]() As Double
      Get
      Return Properties("App_Down_Stroke_Tamp_Clearance_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Down_Stroke_Tamp_Clearance_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Down_Stroke_Tamp_Clearance_User_UOM]() As String
      Get
      Return Properties("App_Down_Stroke_Tamp_Clearance_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Down_Stroke_Tamp_Clearance_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Fixed_Printer_Overhead]() As Double
      Get
      Return Properties("App_Label_Applicator_Fixed_Printer_Overhead").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Applicator_Fixed_Printer_Overhead").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Quantity]() As Long
      Get
      Return Properties("App_Label_Applicator_Quantity").Value
      End Get
      Set(ByVal Value As Long)
      Properties("App_Label_Applicator_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Reason_For_Multiple]() As String
      Get
      Return Properties("App_Label_Applicator_Reason_For_Multiple").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Applicator_Reason_For_Multiple").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Tamp_Brush_Required]() As String
      Get
      Return Properties("App_Label_Applicator_Tamp_Brush_Required").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Applicator_Tamp_Brush_Required").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Tamp_Pad_Length_IN]() As Double
      Get
      Return Properties("App_Label_Applicator_Tamp_Pad_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Applicator_Tamp_Pad_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Tamp_Pad_Length_User]() As Double
      Get
      Return Properties("App_Label_Applicator_Tamp_Pad_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Applicator_Tamp_Pad_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu]() As Double
      Get
      Return Properties("App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu]() As Double
      Get
      Return Properties("App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Tamp_Pad_Length_User_UOM]() As String
      Get
      Return Properties("App_Label_Applicator_Tamp_Pad_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Applicator_Tamp_Pad_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Type]() As String
      Get
      Return Properties("App_Label_Applicator_Type").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Applicator_Type").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Applicator_Type_Tamp]() As String
      Get
      Return Properties("App_Label_Applicator_Type_Tamp").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Applicator_Type_Tamp").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Print_Speed_IN]() As Double
      Get
      Return Properties("App_Label_Print_Speed_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Print_Speed_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Print_Speed_User]() As Double
      Get
      Return Properties("App_Label_Print_Speed_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Print_Speed_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Print_Speed_User_UOM]() As String
      Get
      Return Properties("App_Label_Print_Speed_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Print_Speed_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Print_Time]() As Double
      Get
      Return Properties("App_Label_Print_Time").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Print_Time").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Printed_Length_IN]() As Double
      Get
      Return Properties("App_Label_Printed_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Printed_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Printed_Length_User]() As Double
      Get
      Return Properties("App_Label_Printed_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Printed_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Printed_Length_User_Max_Value]() As Double
      Get
      Return Properties("App_Label_Printed_Length_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Printed_Length_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Printed_Length_User_Min_Value]() As Double
      Get
      Return Properties("App_Label_Printed_Length_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Label_Printed_Length_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Label_Printed_Length_User_UOM]() As String
      Get
      Return Properties("App_Label_Printed_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Label_Printed_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Max_Tamp_Stroke_Req_IN]() As Double
      Get
      Return Properties("App_Max_Tamp_Stroke_Req_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Max_Tamp_Stroke_Req_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Max_Tamp_Stroke_Req_User]() As Double
      Get
      Return Properties("App_Max_Tamp_Stroke_Req_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Max_Tamp_Stroke_Req_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Max_Tamp_Stroke_Req_User_UOM]() As String
      Get
      Return Properties("App_Max_Tamp_Stroke_Req_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Max_Tamp_Stroke_Req_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN]() As Double
      Get
      Return Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User]() As Double
      Get
      Return Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM]() As String
      Get
      Return Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN]() As Double
      Get
      Return Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User]() As Double
      Get
      Return Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM]() As String
      Get
      Return Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN]() As Double
      Get
      Return Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User]() As Double
      Get
      Return Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM]() As String
      Get
      Return Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Req_Compl_PandA_Cycle_IN]() As Double
      Get
      Return Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Req_Compl_PandA_Cycle_User]() As Double
      Get
      Return Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM]() As String
      Get
      Return Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Spacing_Avg_Carton_IN]() As Double
      Get
      Return Properties("App_Min_H_to_H_Spacing_Avg_Carton_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_H_to_H_Spacing_Avg_Carton_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Spacing_Avg_Carton_User]() As Double
      Get
      Return Properties("App_Min_H_to_H_Spacing_Avg_Carton_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_H_to_H_Spacing_Avg_Carton_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Spacing_Avg_Carton_User_UOM]() As String
      Get
      Return Properties("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Spacing_Largest_Carton_IN]() As Double
      Get
      Return Properties("App_Min_H_to_H_Spacing_Largest_Carton_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_H_to_H_Spacing_Largest_Carton_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Spacing_Largest_Carton_User]() As Double
      Get
      Return Properties("App_Min_H_to_H_Spacing_Largest_Carton_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_H_to_H_Spacing_Largest_Carton_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_H_to_H_Spacing_Largest_Carton_User_UOM]() As String
      Get
      Return Properties("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Pitch_Btw_App_IN]() As Double
      Get
      Return Properties("App_Min_Pitch_Btw_App_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Pitch_Btw_App_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Pitch_Btw_App_User]() As Double
      Get
      Return Properties("App_Min_Pitch_Btw_App_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Pitch_Btw_App_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Pitch_Btw_App_User_Max_Value]() As Double
      Get
      Return Properties("App_Min_Pitch_Btw_App_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Pitch_Btw_App_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Pitch_Btw_App_User_Min_Value]() As Double
      Get
      Return Properties("App_Min_Pitch_Btw_App_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Min_Pitch_Btw_App_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Min_Pitch_Btw_App_User_UOM]() As String
      Get
      Return Properties("App_Min_Pitch_Btw_App_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Min_Pitch_Btw_App_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Return_Stroke_Tamp_Clearance_IN]() As Double
      Get
      Return Properties("App_Return_Stroke_Tamp_Clearance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Return_Stroke_Tamp_Clearance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Return_Stroke_Tamp_Clearance_User]() As Double
      Get
      Return Properties("App_Return_Stroke_Tamp_Clearance_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Return_Stroke_Tamp_Clearance_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Return_Stroke_Tamp_Clearance_User_Max_Value]() As Double
      Get
      Return Properties("App_Return_Stroke_Tamp_Clearance_User_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Return_Stroke_Tamp_Clearance_User_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Return_Stroke_Tamp_Clearance_User_Min_Value]() As Double
      Get
      Return Properties("App_Return_Stroke_Tamp_Clearance_User_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Return_Stroke_Tamp_Clearance_User_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Return_Stroke_Tamp_Clearance_User_UOM]() As String
      Get
      Return Properties("App_Return_Stroke_Tamp_Clearance_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Return_Stroke_Tamp_Clearance_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Tamp_Cycle_Time_Pneumatic_Side_Apply]() As Double
      Get
      Return Properties("App_Tamp_Cycle_Time_Pneumatic_Side_Apply").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Tamp_Cycle_Time_Pneumatic_Side_Apply").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Tamp_Home_Height_Above_Conveyor_IN]() As Double
      Get
      Return Properties("App_Tamp_Home_Height_Above_Conveyor_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Tamp_Home_Height_Above_Conveyor_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Tamp_Home_Height_Above_Conveyor_User]() As Double
      Get
      Return Properties("App_Tamp_Home_Height_Above_Conveyor_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("App_Tamp_Home_Height_Above_Conveyor_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [App_Tamp_Home_Height_Above_Conveyor_User_UOM]() As String
      Get
      Return Properties("App_Tamp_Home_Height_Above_Conveyor_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("App_Tamp_Home_Height_Above_Conveyor_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Min_Gap_Required_IN]() As Double
      Get
      Return Properties("Reject_Diverter_Min_Gap_Required_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Reject_Diverter_Min_Gap_Required_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Min_Gap_Required_User]() As Double
      Get
      Return Properties("Reject_Diverter_Min_Gap_Required_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Reject_Diverter_Min_Gap_Required_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Min_Gap_Required_User_UOM]() As String
      Get
      Return Properties("Reject_Diverter_Min_Gap_Required_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Reject_Diverter_Min_Gap_Required_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Required]() As String
      Get
      Return Properties("Reject_Diverter_Required").Value
      End Get
      Set(ByVal Value As String)
      Properties("Reject_Diverter_Required").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN]() As Double
      Get
      Return Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM]() As String
      Get
      Return Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User]() As Double
      Get
      Return Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN]() As Double
      Get
      Return Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM]() As String
      Get
      Return Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User]() As Double
      Get
      Return Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Reject_Diverter_Type]() As String
      Get
      Return Properties("Reject_Diverter_Type").Value
      End Get
      Set(ByVal Value As String)
      Properties("Reject_Diverter_Type").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Gap_on_Max_Box_IN]() As Double
      Get
      Return Properties("Scale_Min_Gap_on_Max_Box_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Min_Gap_on_Max_Box_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Gap_on_Max_Box_User]() As Double
      Get
      Return Properties("Scale_Min_Gap_on_Max_Box_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Min_Gap_on_Max_Box_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Gap_on_Max_Box_User_UOM]() As String
      Get
      Return Properties("Scale_Min_Gap_on_Max_Box_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Min_Gap_on_Max_Box_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Gap_on_Min_Box_IN]() As Double
      Get
      Return Properties("Scale_Min_Gap_on_Min_Box_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Min_Gap_on_Min_Box_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Gap_on_Min_Box_User]() As Double
      Get
      Return Properties("Scale_Min_Gap_on_Min_Box_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Min_Gap_on_Min_Box_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Gap_on_Min_Box_User_UOM]() As String
      Get
      Return Properties("Scale_Min_Gap_on_Min_Box_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Min_Gap_on_Min_Box_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Head_to_Head_IN]() As Double
      Get
      Return Properties("Scale_Min_Head_to_Head_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Min_Head_to_Head_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Head_to_Head_User]() As Double
      Get
      Return Properties("Scale_Min_Head_to_Head_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Min_Head_to_Head_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Min_Head_to_Head_User_UOM]() As String
      Get
      Return Properties("Scale_Min_Head_to_Head_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Min_Head_to_Head_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_PandA_Scale_Required]() As String
      Get
      Return Properties("Scale_PandA_Scale_Required").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_PandA_Scale_Required").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Bed_Length_IN]() As Double
      Get
      Return Properties("Scale_Scale_Bed_Length_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Scale_Bed_Length_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Bed_Length_User]() As Double
      Get
      Return Properties("Scale_Scale_Bed_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Scale_Bed_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Bed_Length_User_UOM]() As String
      Get
      Return Properties("Scale_Scale_Bed_Length_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Scale_Bed_Length_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Gap_Override_IN]() As Double
      Get
      Return Properties("Scale_Scale_Gap_Override_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Scale_Gap_Override_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Gap_Override_User]() As Double
      Get
      Return Properties("Scale_Scale_Gap_Override_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Scale_Scale_Gap_Override_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Gap_Override_User_UOM]() As String
      Get
      Return Properties("Scale_Scale_Gap_Override_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Scale_Gap_Override_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Scale_Type]() As String
      Get
      Return Properties("Scale_Scale_Type").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Scale_Type").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Scale_Spacing_Type]() As String
      Get
      Return Properties("Scale_Spacing_Type").Value
      End Get
      Set(ByVal Value As String)
      Properties("Scale_Spacing_Type").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Carton_Panels_Scanned_Quantity]() As Long
      Get
      Return Properties("Ver_Scan_Carton_Panels_Scanned_Quantity").Value
      End Get
      Set(ByVal Value As Long)
      Properties("Ver_Scan_Carton_Panels_Scanned_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Carton_Presentation]() As String
      Get
      Return Properties("Ver_Scan_Carton_Presentation").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Carton_Presentation").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Distance_Last_Tamp__Scan_Window_IN]() As Double
      Get
      Return Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value]() As Double
      Get
      Return Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value]() As Double
      Get
      Return Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Distance_Last_Tamp__Scan_Window_User]() As Double
      Get
      Return Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM]() As String
      Get
      Return Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Label_Orientation]() As String
      Get
      Return Properties("Ver_Scan_Label_Orientation").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Label_Orientation").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Max_Linear_Length_Carton_Scanned_IN]() As Double
      Get
      Return Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Max_Linear_Length_Carton_Scanned_User]() As Double
      Get
      Return Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM]() As String
      Get
      Return Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Min_Gap_Scan_Application_IN]() As Double
      Get
      Return Properties("Ver_Scan_Min_Gap_Scan_Application_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Min_Gap_Scan_Application_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Min_Gap_Scan_Application_User]() As Double
      Get
      Return Properties("Ver_Scan_Min_Gap_Scan_Application_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Min_Gap_Scan_Application_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Min_Gap_Scan_Application_User_UOM]() As String
      Get
      Return Properties("Ver_Scan_Min_Gap_Scan_Application_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Min_Gap_Scan_Application_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Min_Xmit_Point_FromScan_Window_IN]() As Double
      Get
      Return Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Min_Xmit_Point_FromScan_Window_User]() As Double
      Get
      Return Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM]() As String
      Get
      Return Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Percent_Max_Carton_Length_Scanned]() As Double
      Get
      Return Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Percent_Max_Carton_Length_Scanned_User]() As Double
      Get
      Return Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Rescan_Barcode_For_Verification]() As String
      Get
      Return Properties("Ver_Scan_Rescan_Barcode_For_Verification").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Rescan_Barcode_For_Verification").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Scan_Window_Length_Req_IN]() As Double
      Get
      Return Properties("Ver_Scan_Scan_Window_Length_Req_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Scan_Window_Length_Req_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Scan_Window_Length_Req_User]() As Double
      Get
      Return Properties("Ver_Scan_Scan_Window_Length_Req_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Scan_Window_Length_Req_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Scan_Window_Length_Req_User_UOM]() As String
      Get
      Return Properties("Ver_Scan_Scan_Window_Length_Req_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Scan_Window_Length_Req_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Scanner_Configuration]() As String
      Get
      Return Properties("Ver_Scan_Scanner_Configuration").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Scanner_Configuration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Scanner_Data_Transmit_Mode]() As String
      Get
      Return Properties("Ver_Scan_Scanner_Data_Transmit_Mode").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Scanner_Data_Transmit_Mode").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Shadowing_Allowed]() As String
      Get
      Return Properties("Ver_Scan_Shadowing_Allowed").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Shadowing_Allowed").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Shadowing_Potential]() As String
      Get
      Return Properties("Ver_Scan_Shadowing_Potential").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Shadowing_Potential").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Tracking_Photocell_Distance_IN]() As Double
      Get
      Return Properties("Ver_Scan_Tracking_Photocell_Distance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Tracking_Photocell_Distance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Tracking_Photocell_Distance_Max_Value]() As Double
      Get
      Return Properties("Ver_Scan_Tracking_Photocell_Distance_Max_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Tracking_Photocell_Distance_Max_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Tracking_Photocell_Distance_Min_Value]() As Double
      Get
      Return Properties("Ver_Scan_Tracking_Photocell_Distance_Min_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Tracking_Photocell_Distance_Min_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Tracking_Photocell_Distance_User]() As Double
      Get
      Return Properties("Ver_Scan_Tracking_Photocell_Distance_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Ver_Scan_Tracking_Photocell_Distance_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Ver_Scan_Tracking_Photocell_Distance_User_UOM]() As String
      Get
      Return Properties("Ver_Scan_Tracking_Photocell_Distance_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Ver_Scan_Tracking_Photocell_Distance_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Caclucation_Errors_Present]() As Long
      Get
      Return Properties("Summary_Caclucation_Errors_Present").Value
      End Get
      Set(ByVal Value As Long)
      Properties("Summary_Caclucation_Errors_Present").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Caclucation_Warnings_Present]() As Long
      Get
      Return Properties("Summary_Caclucation_Warnings_Present").Value
      End Get
      Set(ByVal Value As Long)
      Properties("Summary_Caclucation_Warnings_Present").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Carton_Length_User]() As Double
      Get
      Return Properties("Summary_Carton_Length_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Summary_Carton_Length_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_H_to_H_Spacing_Limit_Set_By]() As String
      Get
      Return Properties("Summary_Min_H_to_H_Spacing_Limit_Set_By").Value
      End Get
      Set(ByVal Value As String)
      Properties("Summary_Min_H_to_H_Spacing_Limit_Set_By").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_H_to_H_Spacing_Req_IN]() As Double
      Get
      Return Properties("Summary_Min_H_to_H_Spacing_Req_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Summary_Min_H_to_H_Spacing_Req_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_H_to_H_Spacing_Req_User]() As Double
      Get
      Return Properties("Summary_Min_H_to_H_Spacing_Req_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Summary_Min_H_to_H_Spacing_Req_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_H_to_H_Spacing_Req_User_UOM]() As String
      Get
      Return Properties("Summary_Min_H_to_H_Spacing_Req_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Summary_Min_H_to_H_Spacing_Req_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_T_to_H_Gap_Limit_Set_By]() As String
      Get
      Return Properties("Summary_Min_T_to_H_Gap_Limit_Set_By").Value
      End Get
      Set(ByVal Value As String)
      Properties("Summary_Min_T_to_H_Gap_Limit_Set_By").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_T_to_H_Gap_Req_IN]() As Double
      Get
      Return Properties("Summary_Min_T_to_H_Gap_Req_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Summary_Min_T_to_H_Gap_Req_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_T_to_H_Gap_Req_User]() As Double
      Get
      Return Properties("Summary_Min_T_to_H_Gap_Req_User").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Summary_Min_T_to_H_Gap_Req_User").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Summary_Min_T_to_H_Gap_Req_User_UOM]() As String
      Get
      Return Properties("Summary_Min_T_to_H_Gap_Req_User_UOM").Value
      End Get
      Set(ByVal Value As String)
      Properties("Summary_Min_T_to_H_Gap_Req_User_UOM").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Transnorm_TS4800_Control_Reaction_Time_Distance_IN]() As Double
      Get
      Return Properties("Transnorm_TS4800_Control_Reaction_Time_Distance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Transnorm_TS4800_Control_Reaction_Time_Distance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Transnorm_TS4800_Divert_Angle]() As Double
      Get
      Return Properties("Transnorm_TS4800_Divert_Angle").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Transnorm_TS4800_Divert_Angle").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Transnorm_TS4800_Divert_Shifting_Distance_IN]() As Double
      Get
      Return Properties("Transnorm_TS4800_Divert_Shifting_Distance_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Transnorm_TS4800_Divert_Shifting_Distance_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Transnorm_TS4800_Encoder_Resolution_IN]() As Double
      Get
      Return Properties("Transnorm_TS4800_Encoder_Resolution_IN").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Transnorm_TS4800_Encoder_Resolution_IN").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Transnorm_TS4800_Required_Gap_Max_Box]() As Double
      Get
      Return Properties("Transnorm_TS4800_Required_Gap_Max_Box").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Transnorm_TS4800_Required_Gap_Max_Box").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Debug_Mode]() As Boolean
      Get
      Return Properties("Debug_Mode").Value
      End Get
      Set(ByVal Value As Boolean)
      Properties("Debug_Mode").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [XMLObjectName]() As String
      Get
      Return Properties("XMLObjectName").Value
      End Get
      Set(ByVal Value As String)
      Properties("XMLObjectName").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [XMLObjectType]() As String
      Get
      Return Properties("XMLObjectType").Value
      End Get
      Set(ByVal Value As String)
      Properties("XMLObjectType").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [XMLObjectValue]() As String
      Get
      Return Properties("XMLObjectValue").Value
      End Get
      Set(ByVal Value As String)
      Properties("XMLObjectValue").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [PartNumber]() As String
      Get
      Return Properties("PartNumber").Value
      End Get
      Set(ByVal Value As String)
      Properties("PartNumber").CalculatedValue = Value
      End Set
      End Property
    
      Public ReadOnly Property [PandA_Theoretical_Max_Throughput_Rate]() As Rulestream.Kernel.Subpart
      Get
      Return Subparts("PandA_Theoretical_Max_Throughput_Rate")
      End Get
      End Property
    
      Public ReadOnly Property [My_EHS350_Data]() As Rulestream.Kernel.Connection
      Get
      Return Connections("My_EHS350_Data")
      End Get
      End Property
    
      Public ReadOnly Property [My_PRD]() As Rulestream.Kernel.Connection
      Get
      Return Connections("My_PRD")
      End Get
      End Property
    
      Public ReadOnly Property [Ind_Scan_My_Scan_Config]() As Rulestream.Kernel.Connection
      Get
      Return Connections("Ind_Scan_My_Scan_Config")
      End Get
      End Property
    
      Public ReadOnly Property [Ver_Scan_My_Scan_Config]() As Rulestream.Kernel.Connection
      Get
      Return Connections("Ver_Scan_My_Scan_Config")
      End Get
      End Property
    
      Public ReadOnly Property [My_Setup]() As Rulestream.Kernel.Connection
      Get
      Return Connections("My_Setup")
      End Get
      End Property
    
      Public ReadOnly Property [MySource]() As Rulestream.Kernel.Connection
      Get
      Return Connections("MySource")
      End Get
      End Property
    
    #End Region

    #Region " Initialization "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize() Implements RuleStream.IRsPartFormulas.Initialize
    Dim oSpec As Rulestream.Kernel.Spec = Nothing
    Dim oConnection as Rulestream.Kernel.Connection = Nothing
    Dim oSubpart as Rulestream.Kernel.Subpart = Nothing
    dim oMasterDoc as Rulestream.Kernel.MasterDoc = Nothing
    InitPart("CAE_App_Calc_Print_And_Apply", <a><![CDATA[CAE_App_Calc_Print_And_Apply]]></a>.Value, 416, "IGSEST",  "N", "N", False, False, "In Development", "", "", "", "", "",  "GLOBAL\H602502", "07/17/2025 11:43:02")
    AddProperty("10076", "Brush_Length_Factor_IN", <a><![CDATA[Brush_Length_Factor_IN]]></a>.Value, "AppCalc^'Belted PandA'!S87", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 3:27:33 PM")
    AddProperty("10383", "Customer_Date", <a><![CDATA[Customer_Date]]></a>.Value, "AppCalc^'Belted PandA Layout'!G9", "String","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/17/2025 11:43:02 AM")
    AddProperty("10381", "Customer_Location", <a><![CDATA[Customer_Location]]></a>.Value, "AppCalc^'Belted PandA Layout'!G7", "String","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 1:09:59 PM")
    AddProperty("10380", "Customer_Name", <a><![CDATA[Customer_Name]]></a>.Value, "AppCalc^'Belted PandA Layout'!G6", "String","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 1:10:03 PM")
    AddProperty("10382", "Customer_Proposal_Number", <a><![CDATA[Customer_Proposal_Number]]></a>.Value, "AppCalc^'Belted PandA Layout'!G8", "String","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 1:09:55 PM")
    AddProperty("10133", "Max_Pneumatic_Stroke_IN", <a><![CDATA[Max_Pneumatic_Stroke_IN]]></a>.Value, "AppCalc^'Belted PandA'!S91", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 6:50:51 PM")
    AddProperty("10204", "Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic", <a><![CDATA[Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic]]></a>.Value, "AppCalc^'Belted PandA'!S99", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 12:22:45 PM")
    AddProperty("10203", "Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo", <a><![CDATA[Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo]]></a>.Value, "AppCalc^'Belted PandA'!S98", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 12:16:57 PM")
    AddProperty("10146", "Pneumatic_Min_Head_to_Head_IN", <a><![CDATA[Pneumatic_Min_Head_to_Head_IN]]></a>.Value, "AppCalc^'Belted PandA'!S96", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:43:54 PM")
    AddProperty("10132", "Pneumatic_Tamp_Min_Gap_IN", <a><![CDATA[Pneumatic_Tamp_Min_Gap_IN]]></a>.Value, "AppCalc^'Belted PandA'!S91", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 6:41:46 PM")
    AddProperty("10144", "Servo_Min_Head_to_Head_IN", <a><![CDATA[Servo_Min_Head_to_Head_IN]]></a>.Value, "AppCalc^'Belted PandA'!S95", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 12:08:12 PM")
    AddProperty("10130", "Servo_Tamp_Min_Gap_IN", <a><![CDATA[Servo_Tamp_Min_Gap_IN]]></a>.Value, "AppCalc^'Belted PandA'!S91", "Double","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 6:49:05 PM")
    AddProperty("9808", "User_UOM_System", <a><![CDATA[User_UOM_System]]></a>.Value, "", "String","","AppCalc_PandA","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:02:15 PM")
    AddProperty("9951", "Acq_Label_Data_Acquisition_Method", <a><![CDATA[Acq_Label_Data_Acquisition_Method]]></a>.Value, "AppCalc^'Belted PandA'!74", "String","","AppCalc_PandA_Acquisition","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:15:41 PM")
    AddProperty("9956", "Acq_Label_Data_Acquisition_Travel_IN", <a><![CDATA[Acq_Label_Data_Acquisition_Travel_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Acquisition","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:47:28 PM")
    AddProperty("9954", "Acq_Label_Data_Acquisition_Travel_User", <a><![CDATA[Acq_Label_Data_Acquisition_Travel_User]]></a>.Value, "AppCalc^'Belted PandA'!77", "Double","","AppCalc_PandA_Acquisition","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:58:41 PM")
    AddProperty("9955", "Acq_Label_Data_Acquisition_Travel_User_UOM", <a><![CDATA[Acq_Label_Data_Acquisition_Travel_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Acquisition","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:20:53 PM")
    AddProperty("9952", "Acq_Max_Host_Resp_Time_Secs", <a><![CDATA[Acq_Max_Host_Resp_Time_Secs]]></a>.Value, "AppCalc^'Belted PandA'!75", "Double","","AppCalc_PandA_Acquisition","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:30:55 PM")
    AddProperty("9953", "Acq_Max_Local_Lookup_Time_Secs", <a><![CDATA[Acq_Max_Local_Lookup_Time_Secs]]></a>.Value, "AppCalc^'Belted PandA'!76", "Double","","AppCalc_PandA_Acquisition","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:30:43 PM")
    AddProperty("10006", "Conv_Total_App_Belt_Length_Req_FT", <a><![CDATA[Conv_Total_App_Belt_Length_Req_FT]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 3:06:14 PM")
    AddProperty("10003", "Conv_Total_App_Belt_Length_Req_FT_User", <a><![CDATA[Conv_Total_App_Belt_Length_Req_FT_User]]></a>.Value, "AppCalc^'Belted PandA'!J131", "Double","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 6:13:14 PM")
    AddProperty("10000", "Conv_Total_App_Belt_Length_Req_FT_User_UOM", <a><![CDATA[Conv_Total_App_Belt_Length_Req_FT_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:03:11 PM")
    AddProperty("10005", "Conv_Total_App_Belt_Length_Req_IN", <a><![CDATA[Conv_Total_App_Belt_Length_Req_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 3:05:42 PM")
    AddProperty("10002", "Conv_Total_App_Belt_Length_Req_IN_User", <a><![CDATA[Conv_Total_App_Belt_Length_Req_IN_User]]></a>.Value, "AppCalc^'Belted PandA'!J130", "Double","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 6:12:31 PM")
    AddProperty("9999", "Conv_Total_App_Belt_Length_Req_IN_User_UOM", <a><![CDATA[Conv_Total_App_Belt_Length_Req_IN_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 3:02:54 PM")
    AddProperty("10007", "Conv_Total_Solution_Length_FT", <a><![CDATA[Conv_Total_Solution_Length_FT]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 3:06:37 PM")
    AddProperty("10004", "Conv_Total_Solution_Length_FT_User", <a><![CDATA[Conv_Total_Solution_Length_FT_User]]></a>.Value, "AppCalc^'Belted PandA'!J131", "Double","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 6:21:16 PM")
    AddProperty("10001", "Conv_Total_Solution_Length_FT_User_UOM", <a><![CDATA[Conv_Total_Solution_Length_FT_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Conveyor","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:03:23 PM")
    AddProperty("9832", "Gen_Accumulation_Convey_Type_Pre_Panda", <a><![CDATA[Gen_Accumulation_Convey_Type_Pre_Panda]]></a>.Value, "AppCalc^'Belted PandA'!J38", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:37:20 PM")
    AddProperty("9825", "Gen_Accumulation_Zone_Length_IN", <a><![CDATA[Gen_Accumulation_Zone_Length_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:47:42 PM")
    AddProperty("9818", "Gen_Accumulation_Zone_Length_User", <a><![CDATA[Gen_Accumulation_Zone_Length_User]]></a>.Value, "AppCalc^'Belted PandA'!J35", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:37:28 PM")
    AddProperty("9811", "Gen_Accumulation_Zone_Length_User_UOM", <a><![CDATA[Gen_Accumulation_Zone_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:37:33 PM")
    AddProperty("9830", "Gen_Accumulation_Zone_Quantity", <a><![CDATA[Gen_Accumulation_Zone_Quantity]]></a>.Value, "AppCalc^'Belted PandA'!J34", "Long","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:37:39 PM")
    AddProperty("9823", "Gen_Belt_Speed_IN", <a><![CDATA[Gen_Belt_Speed_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:50:50 PM")
    AddProperty("9816", "Gen_Belt_Speed_User", <a><![CDATA[Gen_Belt_Speed_User]]></a>.Value, "AppCalc^'Belted PandA'!J32", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:37:47 PM")
    AddProperty("9903", "Gen_Belt_Speed_User_Max_Value", <a><![CDATA[Gen_Belt_Speed_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:37:51 PM")
    AddProperty("9904", "Gen_Belt_Speed_User_Min_Value", <a><![CDATA[Gen_Belt_Speed_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:03 PM")
    AddProperty("9809", "Gen_Belt_Speed_User_UOM", <a><![CDATA[Gen_Belt_Speed_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:09 PM")
    AddProperty("9826", "Gen_BM_Belt_Acc_Dec_Rate_IN", <a><![CDATA[Gen_BM_Belt_Acc_Dec_Rate_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:47:57 PM")
    AddProperty("9819", "Gen_BM_Belt_Acc_Dec_Rate_User", <a><![CDATA[Gen_BM_Belt_Acc_Dec_Rate_User]]></a>.Value, "AppCalc^'Belted PandA'!J37", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:40:52 PM")
    AddProperty("9905", "Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value", <a><![CDATA[Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:23 PM")
    AddProperty("9906", "Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value", <a><![CDATA[Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:27 PM")
    AddProperty("9812", "Gen_BM_Belt_Acc_Dec_Rate_User_UOM", <a><![CDATA[Gen_BM_Belt_Acc_Dec_Rate_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:32 PM")
    AddProperty("9827", "Gen_BM_Belt_Gap_Stop_Min_Carton_IN", <a><![CDATA[Gen_BM_Belt_Gap_Stop_Min_Carton_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:48:12 PM")
    AddProperty("9820", "Gen_BM_Belt_Gap_Stop_Min_Carton_User", <a><![CDATA[Gen_BM_Belt_Gap_Stop_Min_Carton_User]]></a>.Value, "AppCalc^'Belted PandA'!J39", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:44:12 PM")
    AddProperty("9813", "Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM", <a><![CDATA[Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:43 PM")
    AddProperty("9828", "Gen_BM_Belt_Input_Speed_IN", <a><![CDATA[Gen_BM_Belt_Input_Speed_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:48:26 PM")
    AddProperty("9821", "Gen_BM_Belt_Input_Speed_User", <a><![CDATA[Gen_BM_Belt_Input_Speed_User]]></a>.Value, "AppCalc^'Belted PandA'!J41", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:50 PM")
    AddProperty("9814", "Gen_BM_Belt_Input_Speed_User_UOM", <a><![CDATA[Gen_BM_Belt_Input_Speed_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:55 PM")
    AddProperty("9833", "Gen_BM_Belt_PTO_Ratio", <a><![CDATA[Gen_BM_Belt_PTO_Ratio]]></a>.Value, "AppCalc^'Belted PandA'!J40", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:38:59 PM")
    AddProperty("9893", "Gen_BM_Belt_PTO_Target_Ratio", <a><![CDATA[Gen_BM_Belt_PTO_Target_Ratio]]></a>.Value, "AppCalc^'Belted PandA'!S47", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:02 PM")
    AddProperty("9831", "Gen_Conveyor_Type", <a><![CDATA[Gen_Conveyor_Type]]></a>.Value, "AppCalc^'Belted PandA'!J36", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:07 PM")
    AddProperty("9824", "Gen_Conveyor_Width_IN", <a><![CDATA[Gen_Conveyor_Width_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:48:41 PM")
    AddProperty("9817", "Gen_Conveyor_Width_User", <a><![CDATA[Gen_Conveyor_Width_User]]></a>.Value, "AppCalc^'Belted PandA'!J33", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:15 PM")
    AddProperty("9810", "Gen_Conveyor_Width_User_UOM", <a><![CDATA[Gen_Conveyor_Width_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:20 PM")
    AddProperty("9829", "Gen_MDR_Min_Gap_Throughput_Limit_IN", <a><![CDATA[Gen_MDR_Min_Gap_Throughput_Limit_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:48:55 PM")
    AddProperty("9822", "Gen_MDR_Min_Gap_Throughput_Limit_User", <a><![CDATA[Gen_MDR_Min_Gap_Throughput_Limit_User]]></a>.Value, "AppCalc^'Belted PandA'!J42", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:28 PM")
    AddProperty("9815", "Gen_MDR_Min_Gap_Throughput_Limit_User_UOM", <a><![CDATA[Gen_MDR_Min_Gap_Throughput_Limit_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:33 PM")
    AddProperty("9806", "Gen_Throughput_Rate", <a><![CDATA[Gen_Throughput_Rate]]></a>.Value, "AppCalc^'BeltedPandA'!J31", "Double","","AppCalc_PandA_General_Input","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:39:37 PM")
    AddProperty("9917", "Ind_Scan_Carton_Panels_Scanned_Quantity", <a><![CDATA[Ind_Scan_Carton_Panels_Scanned_Quantity]]></a>.Value, "AppCalc^'Belted PandA'!J52", "Long","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:33:29 PM")
    AddProperty("9923", "Ind_Scan_Carton_Percent_Max_Length_Scanned", <a><![CDATA[Ind_Scan_Carton_Percent_Max_Length_Scanned]]></a>.Value, "AppCalc^'Belted PandA'!60", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:09:32 PM")
    AddProperty("9924", "Ind_Scan_Carton_Percent_Max_Length_Scanned_User", <a><![CDATA[Ind_Scan_Carton_Percent_Max_Length_Scanned_User]]></a>.Value, "AppCalc^'Belted PandA'!60", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:38:17 PM")
    AddProperty("9919", "Ind_Scan_Carton_Presentation", <a><![CDATA[Ind_Scan_Carton_Presentation]]></a>.Value, "AppCalc^'Belted PandA'!54", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:33:40 PM")
    AddProperty("9929", "Ind_Scan_Carton_Scanned_Max_Lin_Length_IN", <a><![CDATA[Ind_Scan_Carton_Scanned_Max_Lin_Length_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:49:32 PM")
    AddProperty("9933", "Ind_Scan_Carton_Scanned_Max_Lin_Length_User", <a><![CDATA[Ind_Scan_Carton_Scanned_Max_Lin_Length_User]]></a>.Value, "AppCalc^'Belted PandA'!J62", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:04:22 PM")
    AddProperty("9938", "Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM", <a><![CDATA[Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:39:11 PM")
    AddProperty("9918", "Ind_Scan_Label_Orientation", <a><![CDATA[Ind_Scan_Label_Orientation]]></a>.Value, "AppCalc^'Belted PandA'!53", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:32:55 PM")
    AddProperty("9925", "Ind_Scan_Scan_App_Min_Gap_IN", <a><![CDATA[Ind_Scan_Scan_App_Min_Gap_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:49:45 PM")
    AddProperty("9926", "Ind_Scan_Scan_App_Min_Gap_User", <a><![CDATA[Ind_Scan_Scan_App_Min_Gap_User]]></a>.Value, "AppCalc^'Belted PandA'!J57", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:40:24 PM")
    AddProperty("9935", "Ind_Scan_Scan_App_Min_Gap_User_UOM", <a><![CDATA[Ind_Scan_Scan_App_Min_Gap_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:39:18 PM")
    AddProperty("9927", "Ind_Scan_Scan_Window_Length_Req_IN", <a><![CDATA[Ind_Scan_Scan_Window_Length_Req_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:49:56 PM")
    AddProperty("9931", "Ind_Scan_Scan_Window_Length_Req_User", <a><![CDATA[Ind_Scan_Scan_Window_Length_Req_User]]></a>.Value, "AppCalc^'Belted PandA'!J58", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:38:26 PM")
    AddProperty("9936", "Ind_Scan_Scan_Window_Length_Req_User_UOM", <a><![CDATA[Ind_Scan_Scan_Window_Length_Req_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:39:34 PM")
    AddProperty("9916", "Ind_Scan_Scanner_Config", <a><![CDATA[Ind_Scan_Scanner_Config]]></a>.Value, "AppCalc^'Belted PandA'!51", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:27:42 PM")
    AddProperty("9922", "Ind_Scan_Scanner_Data_Transmit_Mode", <a><![CDATA[Ind_Scan_Scanner_Data_Transmit_Mode]]></a>.Value, "AppCalc^'Belted PandA'!59", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:35:10 PM")
    AddProperty("9930", "Ind_Scan_Scanner_Min_Xmit_Point_IN", <a><![CDATA[Ind_Scan_Scanner_Min_Xmit_Point_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:50:14 PM")
    AddProperty("9934", "Ind_Scan_Scanner_Min_Xmit_Point_User", <a><![CDATA[Ind_Scan_Scanner_Min_Xmit_Point_User]]></a>.Value, "AppCalc^'Belted PandA'!J63", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 6:47:26 PM")
    AddProperty("9939", "Ind_Scan_Scanner_Min_Xmit_Point_User_UOM", <a><![CDATA[Ind_Scan_Scanner_Min_Xmit_Point_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:39:26 PM")
    AddProperty("9921", "Ind_Scan_Shadowing_Allowed", <a><![CDATA[Ind_Scan_Shadowing_Allowed]]></a>.Value, "AppCalc^'Belted PandA'!56", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:35:36 PM")
    AddProperty("9920", "Ind_Scan_Shadowing_Potential", <a><![CDATA[Ind_Scan_Shadowing_Potential]]></a>.Value, "AppCalc^'Belted PandA'!55", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:34:29 PM")
    AddProperty("9928", "Ind_Scan_Tracking_Photocell_Distance_IN", <a><![CDATA[Ind_Scan_Tracking_Photocell_Distance_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:50:24 PM")
    AddProperty("9932", "Ind_Scan_Tracking_Photocell_Distance_User", <a><![CDATA[Ind_Scan_Tracking_Photocell_Distance_User]]></a>.Value, "AppCalc^'Belted PandA'!J61", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:33:53 PM")
    AddProperty("9948", "Ind_Scan_Tracking_Photocell_Distance_User_Max_Val", <a><![CDATA[Ind_Scan_Tracking_Photocell_Distance_User_Max_Val]]></a>.Value, "", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:00:57 PM")
    AddProperty("9949", "Ind_Scan_Tracking_Photocell_Distance_User_Min_Val", <a><![CDATA[Ind_Scan_Tracking_Photocell_Distance_User_Min_Val]]></a>.Value, "", "Double","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 7:01:03 PM")
    AddProperty("9937", "Ind_Scan_Tracking_Photocell_Distance_User_UOM", <a><![CDATA[Ind_Scan_Tracking_Photocell_Distance_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Induction_Scanning","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 4:39:42 PM")
    AddProperty("9998", "MDR_RAT_Swivel_Rate", <a><![CDATA[MDR_RAT_Swivel_Rate]]></a>.Value, "AppCalc^'MDR Sort'!S39", "Double","","AppCalc_PandA_MDR","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:46:12 PM")
    AddProperty("9875", "MTBH_Height_Average_IN", <a><![CDATA[MTBH_Height_Average_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:50:50 PM")
    AddProperty("9858", "MTBH_Height_Average_User", <a><![CDATA[MTBH_Height_Average_User]]></a>.Value, "AppCalc^'Belted PandA'!H49", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:51 PM")
    AddProperty("9852", "MTBH_Height_Average_User_UOM", <a><![CDATA[MTBH_Height_Average_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:28:36 PM")
    AddProperty("9874", "MTBH_Height_Maximum_IN", <a><![CDATA[MTBH_Height_Maximum_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:50:58 PM")
    AddProperty("9857", "MTBH_Height_Maximum_User", <a><![CDATA[MTBH_Height_Maximum_User]]></a>.Value, "AppCalc^'Belted PandA'!H48", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:45 PM")
    AddProperty("9913", "MTBH_Height_Maximum_User_Max_Value", <a><![CDATA[MTBH_Height_Maximum_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:28:10 PM")
    AddProperty("9851", "MTBH_Height_Maximum_User_UOM", <a><![CDATA[MTBH_Height_Maximum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:26:42 PM")
    AddProperty("9873", "MTBH_Height_Minimum_IN", <a><![CDATA[MTBH_Height_Minimum_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:51:08 PM")
    AddProperty("9856", "MTBH_Height_Minimum_User", <a><![CDATA[MTBH_Height_Minimum_User]]></a>.Value, "AppCalc^'Belted PandA'!H47", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:35 PM")
    AddProperty("9912", "MTBH_Height_Minimum_User_Min_Value", <a><![CDATA[MTBH_Height_Minimum_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:26:16 PM")
    AddProperty("9850", "MTBH_Height_Minimum_User_UOM", <a><![CDATA[MTBH_Height_Minimum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:25:02 PM")
    AddProperty("9868", "MTBH_Length_Average_IN", <a><![CDATA[MTBH_Length_Average_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:51:20 PM")
    AddProperty("9846", "MTBH_Length_Average_User", <a><![CDATA[MTBH_Length_Average_User]]></a>.Value, "AppCalc^'Belted PandA'!D49", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:56:58 PM")
    AddProperty("9837", "MTBH_Length_Average_User_UOM", <a><![CDATA[MTBH_Length_Average_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 2:48:29 PM")
    AddProperty("9867", "MTBH_Length_Maximum_IN", <a><![CDATA[MTBH_Length_Maximum_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:51:31 PM")
    AddProperty("9845", "MTBH_Length_Maximum_User", <a><![CDATA[MTBH_Length_Maximum_User]]></a>.Value, "AppCalc^'Belted PandA'!D48", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:56:52 PM")
    AddProperty("9909", "MTBH_Length_Maximum_User_Max_Value", <a><![CDATA[MTBH_Length_Maximum_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:10:28 PM")
    AddProperty("9836", "MTBH_Length_Maximum_User_UOM", <a><![CDATA[MTBH_Length_Maximum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 2:44:22 PM")
    AddProperty("9866", "MTBH_Length_Minimum_IN", <a><![CDATA[MTBH_Length_Minimum_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:51:42 PM")
    AddProperty("9844", "MTBH_Length_Minimum_User", <a><![CDATA[MTBH_Length_Minimum_User]]></a>.Value, "AppCalc^'Belted PandA'!D47", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:08 PM")
    AddProperty("9908", "MTBH_Length_Minimum_User_Min_Value", <a><![CDATA[MTBH_Length_Minimum_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 2:42:41 PM")
    AddProperty("9835", "MTBH_Length_Minimum_User_UOM", <a><![CDATA[MTBH_Length_Minimum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 2:44:13 PM")
    AddProperty("9834", "MTBH_Use_Local", <a><![CDATA[MTBH_Use_Local]]></a>.Value, "AppCalc^'Belted PandA'!J40", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:47:52 PM")
    AddProperty("9880", "MTBH_Weight_Average_LBS", <a><![CDATA[MTBH_Weight_Average_LBS]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:51:57 PM")
    AddProperty("9861", "MTBH_Weight_Average_User", <a><![CDATA[MTBH_Weight_Average_User]]></a>.Value, "AppCalc^'Belted PandA'!J49", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:58:09 PM")
    AddProperty("9864", "MTBH_Weight_Average_User_UOM", <a><![CDATA[MTBH_Weight_Average_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:36:06 PM")
    AddProperty("9878", "MTBH_Weight_Maximum_LBS", <a><![CDATA[MTBH_Weight_Maximum_LBS]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:52:09 PM")
    AddProperty("9860", "MTBH_Weight_Maximum_User", <a><![CDATA[MTBH_Weight_Maximum_User]]></a>.Value, "AppCalc^'Belted PandA'!J48", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:58:03 PM")
    AddProperty("9915", "MTBH_Weight_Maximum_User_Max_Value", <a><![CDATA[MTBH_Weight_Maximum_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:35:27 PM")
    AddProperty("9863", "MTBH_Weight_Maximum_User_UOM", <a><![CDATA[MTBH_Weight_Maximum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:33:51 PM")
    AddProperty("9877", "MTBH_Weight_Minimum_LBS", <a><![CDATA[MTBH_Weight_Minimum_LBS]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:52:21 PM")
    AddProperty("9859", "MTBH_Weight_Minimum_User", <a><![CDATA[MTBH_Weight_Minimum_User]]></a>.Value, "AppCalc^'Belted PandA'!J47", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:57 PM")
    AddProperty("9914", "MTBH_Weight_Minimum_User_Min_Value", <a><![CDATA[MTBH_Weight_Minimum_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:32:45 PM")
    AddProperty("9862", "MTBH_Weight_Minimum_User_UOM", <a><![CDATA[MTBH_Weight_Minimum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:30:28 PM")
    AddProperty("9872", "MTBH_Width_Average_IN", <a><![CDATA[MTBH_Width_Average_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:52:31 PM")
    AddProperty("9855", "MTBH_Width_Average_User", <a><![CDATA[MTBH_Width_Average_User]]></a>.Value, "AppCalc^'Belted PandA'!F49", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:29 PM")
    AddProperty("9843", "MTBH_Width_Average_User_UOM", <a><![CDATA[MTBH_Width_Average_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:14:54 PM")
    AddProperty("9871", "MTBH_Width_Maximum_IN", <a><![CDATA[MTBH_Width_Maximum_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:52:42 PM")
    AddProperty("9854", "MTBH_Width_Maximum_User", <a><![CDATA[MTBH_Width_Maximum_User]]></a>.Value, "AppCalc^'Belted PandA'!F48", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:22 PM")
    AddProperty("9911", "MTBH_Width_Maximum_User_Max_Value", <a><![CDATA[MTBH_Width_Maximum_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:19:26 PM")
    AddProperty("9842", "MTBH_Width_Maximum_User_UOM", <a><![CDATA[MTBH_Width_Maximum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:12:33 PM")
    AddProperty("9870", "MTBH_Width_Minimum_IN", <a><![CDATA[MTBH_Width_Minimum_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:52:54 PM")
    AddProperty("9853", "MTBH_Width_Minimum_User", <a><![CDATA[MTBH_Width_Minimum_User]]></a>.Value, "AppCalc^'Belted PandA'!F47", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:57:15 PM")
    AddProperty("9910", "MTBH_Width_Minimum_User_Min_Value", <a><![CDATA[MTBH_Width_Minimum_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 3:19:35 PM")
    AddProperty("9841", "MTBH_Width_Minimum_User_UOM", <a><![CDATA[MTBH_Width_Minimum_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_MTBH","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/11/2025 2:54:47 PM")
    AddProperty("10321", "Output_Carton_Stability_Length_IN", <a><![CDATA[Output_Carton_Stability_Length_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:14 PM")
    AddProperty("10319", "Output_Carton_Stability_Length_User", <a><![CDATA[Output_Carton_Stability_Length_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O14", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:28:41 PM")
    AddProperty("10300", "Output_Carton_Stability_Length_User_UOM", <a><![CDATA[Output_Carton_Stability_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:55:58 PM")
    AddProperty("10318", "Output_Induct_Max_Lgth_of_Carton_Scanned_IN", <a><![CDATA[Output_Induct_Max_Lgth_of_Carton_Scanned_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:19 PM")
    AddProperty("10317", "Output_Induct_Max_Lgth_of_Carton_Scanned_User", <a><![CDATA[Output_Induct_Max_Lgth_of_Carton_Scanned_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O13", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:28:48 PM")
    AddProperty("10299", "Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM", <a><![CDATA[Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:55:47 PM")
    AddProperty("10324", "Output_Induct_Scan_Data_Cap_Window_Lgth_IN", <a><![CDATA[Output_Induct_Scan_Data_Cap_Window_Lgth_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:24 PM")
    AddProperty("10323", "Output_Induct_Scan_Data_Cap_Window_Lgth_User", <a><![CDATA[Output_Induct_Scan_Data_Cap_Window_Lgth_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O16", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:29:07 PM")
    AddProperty("10302", "Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM", <a><![CDATA[Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:56:18 PM")
    AddProperty("10322", "Output_Induction_Scan_Window_Length_IN", <a><![CDATA[Output_Induction_Scan_Window_Length_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:29 PM")
    AddProperty("10320", "Output_Induction_Scan_Window_Length_User", <a><![CDATA[Output_Induction_Scan_Window_Length_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O15", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:29:12 PM")
    AddProperty("10301", "Output_Induction_Scan_Window_Length_User_UOM", <a><![CDATA[Output_Induction_Scan_Window_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:56:10 PM")
    AddProperty("10326", "Output_Label_Data_Acq_Distance_App_1_IN", <a><![CDATA[Output_Label_Data_Acq_Distance_App_1_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:34 PM")
    AddProperty("10325", "Output_Label_Data_Acq_Distance_App_1_User", <a><![CDATA[Output_Label_Data_Acq_Distance_App_1_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O17", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:29:25 PM")
    AddProperty("10303", "Output_Label_Data_Acq_Distance_App_1_User_UOM", <a><![CDATA[Output_Label_Data_Acq_Distance_App_1_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:56:26 PM")
    AddProperty("10328", "Output_Label_Data_Acq_Distance_App_2_IN", <a><![CDATA[Output_Label_Data_Acq_Distance_App_2_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:40 PM")
    AddProperty("10327", "Output_Label_Data_Acq_Distance_App_2_User", <a><![CDATA[Output_Label_Data_Acq_Distance_App_2_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O18", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:30:08 PM")
    AddProperty("10304", "Output_Label_Data_Acq_Distance_App_2_User_UOM", <a><![CDATA[Output_Label_Data_Acq_Distance_App_2_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:56:37 PM")
    AddProperty("10352", "Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN", <a><![CDATA[Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:09:40 PM")
    AddProperty("10351", "Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User", <a><![CDATA[Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB14", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:08:40 PM")
    AddProperty("10307", "Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM", <a><![CDATA[Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:57:18 PM")
    AddProperty("10350", "Output_Min_Distance_Between_Applicator_1_2_IN", <a><![CDATA[Output_Min_Distance_Between_Applicator_1_2_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:07:36 PM")
    AddProperty("10349", "Output_Min_Distance_Between_Applicator_1_2_User", <a><![CDATA[Output_Min_Distance_Between_Applicator_1_2_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB13", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:06:38 PM")
    AddProperty("10306", "Output_Min_Distance_Between_Applicator_1_2_User_UO", <a><![CDATA[Output_Min_Distance_Between_Applicator_1_2_User_UO]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:57:07 PM")
    AddProperty("10330", "Output_Min_Distance_for_Printer_Setup_IN", <a><![CDATA[Output_Min_Distance_for_Printer_Setup_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:30:45 PM")
    AddProperty("10329", "Output_Min_Distance_for_Printer_Setup_User", <a><![CDATA[Output_Min_Distance_for_Printer_Setup_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!O19", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 9:29:39 PM")
    AddProperty("10305", "Output_Min_Distance_for_Printer_Setup_User_UOM", <a><![CDATA[Output_Min_Distance_for_Printer_Setup_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:56:51 PM")
    AddProperty("10366", "Output_Min_Distance_IN", <a><![CDATA[Output_Min_Distance_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:42:06 PM")
    AddProperty("10365", "Output_Min_Distance_User", <a><![CDATA[Output_Min_Distance_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AO17", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:41:35 PM")
    AddProperty("10364", "Output_Min_Distance_User_UOM", <a><![CDATA[Output_Min_Distance_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:39:34 PM")
    AddProperty("10362", "Output_PandA_Belt_Exit_PE_Distance_IN", <a><![CDATA[Output_PandA_Belt_Exit_PE_Distance_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:22:04 PM")
    AddProperty("10361", "Output_PandA_Belt_Exit_PE_Distance_User", <a><![CDATA[Output_PandA_Belt_Exit_PE_Distance_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB19", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:21:26 PM")
    AddProperty("10312", "Output_PandA_Belt_Exit_PE_Distance_User_UOM", <a><![CDATA[Output_PandA_Belt_Exit_PE_Distance_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:58:03 PM")
    AddProperty("10379", "Output_Total_Calc_Belt_Length_Double_FT", <a><![CDATA[Output_Total_Calc_Belt_Length_Double_FT]]></a>.Value, "Conversion to FT", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 5:49:33 PM")
    AddProperty("10378", "Output_Total_Calc_Belt_Length_Double_FT_User", <a><![CDATA[Output_Total_Calc_Belt_Length_Double_FT_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AJ19", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:59:34 PM")
    AddProperty("10316", "Output_Total_Calc_Belt_Length_Double_FT_User_UOM", <a><![CDATA[Output_Total_Calc_Belt_Length_Double_FT_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:59:01 PM")
    AddProperty("10377", "Output_Total_Calc_Belt_Length_Double_IN", <a><![CDATA[Output_Total_Calc_Belt_Length_Double_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:56:19 PM")
    AddProperty("10370", "Output_Total_Calc_Belt_Length_Double_IN_User", <a><![CDATA[Output_Total_Calc_Belt_Length_Double_IN_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AG19", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:28:49 PM")
    AddProperty("10314", "Output_Total_Calc_Belt_Length_Double_IN_User_UOM", <a><![CDATA[Output_Total_Calc_Belt_Length_Double_IN_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:29:12 PM")
    AddProperty("10369", "Output_Total_Calc_Belt_Length_Single_FT", <a><![CDATA[Output_Total_Calc_Belt_Length_Single_FT]]></a>.Value, "Conversion to FT", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 5:49:50 PM")
    AddProperty("10368", "Output_Total_Calc_Belt_Length_Single_FT_User", <a><![CDATA[Output_Total_Calc_Belt_Length_Single_FT_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AJ14", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:49:54 PM")
    AddProperty("10315", "Output_Total_Calc_Belt_Length_Single_FT_User_UOM", <a><![CDATA[Output_Total_Calc_Belt_Length_Single_FT_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:58:55 PM")
    AddProperty("10367", "Output_Total_Calc_Belt_Length_Single_IN", <a><![CDATA[Output_Total_Calc_Belt_Length_Single_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:48:56 PM")
    AddProperty("10363", "Output_Total_Calc_Belt_Length_Single_IN_User", <a><![CDATA[Output_Total_Calc_Belt_Length_Single_IN_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AG14", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:47:47 PM")
    AddProperty("10313", "Output_Total_Calc_Belt_Length_Single_IN_User_UOM", <a><![CDATA[Output_Total_Calc_Belt_Length_Single_IN_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:58:17 PM")
    AddProperty("10356", "Output_Ver_Max_Length_of_Carton_Scanned_IN", <a><![CDATA[Output_Ver_Max_Length_of_Carton_Scanned_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:12:49 PM")
    AddProperty("10355", "Output_Ver_Max_Length_of_Carton_Scanned_User", <a><![CDATA[Output_Ver_Max_Length_of_Carton_Scanned_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB16", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:12:08 PM")
    AddProperty("10309", "Output_Ver_Max_Length_of_Carton_Scanned_User_UOM", <a><![CDATA[Output_Ver_Max_Length_of_Carton_Scanned_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:57:34 PM")
    AddProperty("10360", "Output_Ver_Scan_Data_Capture_Window_Length_IN", <a><![CDATA[Output_Ver_Scan_Data_Capture_Window_Length_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:18:38 PM")
    AddProperty("10359", "Output_Ver_Scan_Data_Capture_Window_Length_User", <a><![CDATA[Output_Ver_Scan_Data_Capture_Window_Length_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB18", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:17:47 PM")
    AddProperty("10311", "Output_Ver_Scan_Data_Capture_Window_Length_User_UO", <a><![CDATA[Output_Ver_Scan_Data_Capture_Window_Length_User_UO]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:57:52 PM")
    AddProperty("10358", "Output_Verify_Scanner_Distance_to_Xmit_IN", <a><![CDATA[Output_Verify_Scanner_Distance_to_Xmit_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:16:55 PM")
    AddProperty("10357", "Output_Verify_Scanner_Distance_to_Xmit_User", <a><![CDATA[Output_Verify_Scanner_Distance_to_Xmit_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB17", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:17:06 PM")
    AddProperty("10310", "Output_Verify_Scanner_Distance_to_Xmit_User_UOM", <a><![CDATA[Output_Verify_Scanner_Distance_to_Xmit_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:57:45 PM")
    AddProperty("10354", "Output_Verify_Scanner_Window_Length_IN", <a><![CDATA[Output_Verify_Scanner_Window_Length_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:11:15 PM")
    AddProperty("10353", "Output_Verify_Scanner_Window_Length_User", <a><![CDATA[Output_Verify_Scanner_Window_Length_User]]></a>.Value, "AppCalc^'Belted PandA Layout'!AB15", "Double","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 12:10:46 PM")
    AddProperty("10308", "Output_Verify_Scanner_Window_Length_User_UOM", <a><![CDATA[Output_Verify_Scanner_Window_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Output","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:57:26 PM")
    AddProperty("10060", "App_Down_Stroke_Tamp_Clearance_IN", <a><![CDATA[App_Down_Stroke_Tamp_Clearance_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:53:59 PM")
    AddProperty("10057", "App_Down_Stroke_Tamp_Clearance_User", <a><![CDATA[App_Down_Stroke_Tamp_Clearance_User]]></a>.Value, "AppCalc^'Belted PandA'!J88", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:50:32 PM")
    AddProperty("10059", "App_Down_Stroke_Tamp_Clearance_User_Max_Value", <a><![CDATA[App_Down_Stroke_Tamp_Clearance_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:50:46 PM")
    AddProperty("10058", "App_Down_Stroke_Tamp_Clearance_User_Min_Value", <a><![CDATA[App_Down_Stroke_Tamp_Clearance_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:50:54 PM")
    AddProperty("10035", "App_Down_Stroke_Tamp_Clearance_User_UOM", <a><![CDATA[App_Down_Stroke_Tamp_Clearance_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:06:15 PM")
    AddProperty("10029", "App_Label_Applicator_Fixed_Printer_Overhead", <a><![CDATA[App_Label_Applicator_Fixed_Printer_Overhead]]></a>.Value, "AppCalc^'Belted PandA'!J87", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:52:01 PM")
    AddProperty("10025", "App_Label_Applicator_Quantity", <a><![CDATA[App_Label_Applicator_Quantity]]></a>.Value, "AppCalc^'Belted PandA'!J80", "Long","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:42:58 PM")
    AddProperty("10026", "App_Label_Applicator_Reason_For_Multiple", <a><![CDATA[App_Label_Applicator_Reason_For_Multiple]]></a>.Value, "AppCalc^'Belted PandA'!J81", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:45:06 PM")
    AddProperty("10028", "App_Label_Applicator_Tamp_Brush_Required", <a><![CDATA[App_Label_Applicator_Tamp_Brush_Required]]></a>.Value, "AppCalc^'Belted PandA'!J86", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:49:28 PM")
    AddProperty("10056", "App_Label_Applicator_Tamp_Pad_Length_IN", <a><![CDATA[App_Label_Applicator_Tamp_Pad_Length_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:45:57 PM")
    AddProperty("10053", "App_Label_Applicator_Tamp_Pad_Length_User", <a><![CDATA[App_Label_Applicator_Tamp_Pad_Length_User]]></a>.Value, "AppCalc^'Belted PandA'!J85", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:51:32 PM")
    AddProperty("10054", "App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu", <a><![CDATA[App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:51:40 PM")
    AddProperty("10055", "App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu", <a><![CDATA[App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:29:50 PM")
    AddProperty("10052", "App_Label_Applicator_Tamp_Pad_Length_User_UOM", <a><![CDATA[App_Label_Applicator_Tamp_Pad_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:22:27 PM")
    AddProperty("10024", "App_Label_Applicator_Type", <a><![CDATA[App_Label_Applicator_Type]]></a>.Value, "AppCalc^'Belted PandA'!J79", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:41:28 PM")
    AddProperty("10027", "App_Label_Applicator_Type_Tamp", <a><![CDATA[App_Label_Applicator_Type_Tamp]]></a>.Value, "AppCalc^'Belted PandA'!J82", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:46:14 PM")
    AddProperty("10051", "App_Label_Print_Speed_IN", <a><![CDATA[App_Label_Print_Speed_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:48:06 PM")
    AddProperty("10050", "App_Label_Print_Speed_User", <a><![CDATA[App_Label_Print_Speed_User]]></a>.Value, "AppCalc^'Belted PandA'!J84", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:47:50 PM")
    AddProperty("10033", "App_Label_Print_Speed_User_UOM", <a><![CDATA[App_Label_Print_Speed_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 1:13:11 PM")
    AddProperty("10031", "App_Label_Print_Time", <a><![CDATA[App_Label_Print_Time]]></a>.Value, "AppCalc^'Belted PandA'!J92", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:56:12 PM")
    AddProperty("10049", "App_Label_Printed_Length_IN", <a><![CDATA[App_Label_Printed_Length_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:14:38 PM")
    AddProperty("10046", "App_Label_Printed_Length_User", <a><![CDATA[App_Label_Printed_Length_User]]></a>.Value, "AppCalc^'Belted PandA'!J83", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:13:45 PM")
    AddProperty("10047", "App_Label_Printed_Length_User_Max_Value", <a><![CDATA[App_Label_Printed_Length_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:15:12 PM")
    AddProperty("10048", "App_Label_Printed_Length_User_Min_Value", <a><![CDATA[App_Label_Printed_Length_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:11:30 PM")
    AddProperty("10032", "App_Label_Printed_Length_User_UOM", <a><![CDATA[App_Label_Printed_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:05:09 PM")
    AddProperty("10072", "App_Max_Tamp_Stroke_Req_IN", <a><![CDATA[App_Max_Tamp_Stroke_Req_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 3:17:48 PM")
    AddProperty("10071", "App_Max_Tamp_Stroke_Req_User", <a><![CDATA[App_Max_Tamp_Stroke_Req_User]]></a>.Value, "AppCalc^'Belted PandA'!J94", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 6:44:01 PM")
    AddProperty("10039", "App_Max_Tamp_Stroke_Req_User_UOM", <a><![CDATA[App_Max_Tamp_Stroke_Req_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:06:55 PM")
    AddProperty("10141", "App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN", <a><![CDATA[App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:22:46 PM")
    AddProperty("10140", "App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User", <a><![CDATA[App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User]]></a>.Value, "AppCalc^'Belted PandA'!J97", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:21:42 PM")
    AddProperty("10139", "App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM", <a><![CDATA[App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:14:28 PM")
    AddProperty("10205", "App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN", <a><![CDATA[App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 12:25:36 PM")
    AddProperty("10149", "App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User", <a><![CDATA[App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User]]></a>.Value, "AppCalc^'Belted PandA'!J99", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 12:24:40 PM")
    AddProperty("10148", "App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM", <a><![CDATA[App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:49:47 PM")
    AddProperty("10137", "App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN", <a><![CDATA[App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:11:30 PM")
    AddProperty("10074", "App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User", <a><![CDATA[App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User]]></a>.Value, "AppCalc^'Belted PandA'!J95", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:05:47 PM")
    AddProperty("10073", "App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM", <a><![CDATA[App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 3:19:07 PM")
    AddProperty("10147", "App_Min_H_to_H_Req_Compl_PandA_Cycle_IN", <a><![CDATA[App_Min_H_to_H_Req_Compl_PandA_Cycle_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:49:27 PM")
    AddProperty("10143", "App_Min_H_to_H_Req_Compl_PandA_Cycle_User", <a><![CDATA[App_Min_H_to_H_Req_Compl_PandA_Cycle_User]]></a>.Value, "AppCalc^'Belted PandA'!J96", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:48:48 PM")
    AddProperty("10142", "App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM", <a><![CDATA[App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:23:21 PM")
    AddProperty("10208", "App_Min_H_to_H_Spacing_Avg_Carton_IN", <a><![CDATA[App_Min_H_to_H_Spacing_Avg_Carton_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 1:10:42 PM")
    AddProperty("10207", "App_Min_H_to_H_Spacing_Avg_Carton_User", <a><![CDATA[App_Min_H_to_H_Spacing_Avg_Carton_User]]></a>.Value, "AppCalc^'Belted PandA'!J100", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 1:10:09 PM")
    AddProperty("10206", "App_Min_H_to_H_Spacing_Avg_Carton_User_UOM", <a><![CDATA[App_Min_H_to_H_Spacing_Avg_Carton_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 12:26:14 PM")
    AddProperty("10138", "App_Min_H_to_H_Spacing_Largest_Carton_IN", <a><![CDATA[App_Min_H_to_H_Spacing_Largest_Carton_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:13:47 PM")
    AddProperty("10136", "App_Min_H_to_H_Spacing_Largest_Carton_User", <a><![CDATA[App_Min_H_to_H_Spacing_Largest_Carton_User]]></a>.Value, "AppCalc^'Belted PandA'!J96", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:13:17 PM")
    AddProperty("10135", "App_Min_H_to_H_Spacing_Largest_Carton_User_UOM", <a><![CDATA[App_Min_H_to_H_Spacing_Largest_Carton_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 8:07:47 PM")
    AddProperty("10068", "App_Min_Pitch_Btw_App_IN", <a><![CDATA[App_Min_Pitch_Btw_App_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:49:55 PM")
    AddProperty("10065", "App_Min_Pitch_Btw_App_User", <a><![CDATA[App_Min_Pitch_Btw_App_User]]></a>.Value, "AppCalc^'Belted PandA'!J90", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:49:04 PM")
    AddProperty("10067", "App_Min_Pitch_Btw_App_User_Max_Value", <a><![CDATA[App_Min_Pitch_Btw_App_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:48:51 PM")
    AddProperty("10066", "App_Min_Pitch_Btw_App_User_Min_Value", <a><![CDATA[App_Min_Pitch_Btw_App_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:48:42 PM")
    AddProperty("10037", "App_Min_Pitch_Btw_App_User_UOM", <a><![CDATA[App_Min_Pitch_Btw_App_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:06:36 PM")
    AddProperty("10064", "App_Return_Stroke_Tamp_Clearance_IN", <a><![CDATA[App_Return_Stroke_Tamp_Clearance_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:57:32 PM")
    AddProperty("10061", "App_Return_Stroke_Tamp_Clearance_User", <a><![CDATA[App_Return_Stroke_Tamp_Clearance_User]]></a>.Value, "AppCalc^'Belted PandA'!J89", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:53:34 PM")
    AddProperty("10063", "App_Return_Stroke_Tamp_Clearance_User_Max_Value", <a><![CDATA[App_Return_Stroke_Tamp_Clearance_User_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:53:41 PM")
    AddProperty("10062", "App_Return_Stroke_Tamp_Clearance_User_Min_Value", <a><![CDATA[App_Return_Stroke_Tamp_Clearance_User_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 2:53:47 PM")
    AddProperty("10036", "App_Return_Stroke_Tamp_Clearance_User_UOM", <a><![CDATA[App_Return_Stroke_Tamp_Clearance_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:06:26 PM")
    AddProperty("10030", "App_Tamp_Cycle_Time_Pneumatic_Side_Apply", <a><![CDATA[App_Tamp_Cycle_Time_Pneumatic_Side_Apply]]></a>.Value, "AppCalc^'Belted PandA'!J91", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 12:55:15 PM")
    AddProperty("10070", "App_Tamp_Home_Height_Above_Conveyor_IN", <a><![CDATA[App_Tamp_Home_Height_Above_Conveyor_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 3:08:31 PM")
    AddProperty("10069", "App_Tamp_Home_Height_Above_Conveyor_User", <a><![CDATA[App_Tamp_Home_Height_Above_Conveyor_User]]></a>.Value, "AppCalc^'Belted PandA'!J93", "Double","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 6:44:55 PM")
    AddProperty("10038", "App_Tamp_Home_Height_Above_Conveyor_User_UOM", <a><![CDATA[App_Tamp_Home_Height_Above_Conveyor_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Printer_Applicator","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/14/2025 1:06:47 PM")
    AddProperty("9985", "Reject_Diverter_Min_Gap_Required_IN", <a><![CDATA[Reject_Diverter_Min_Gap_Required_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:16:25 PM")
    AddProperty("9973", "Reject_Diverter_Min_Gap_Required_User", <a><![CDATA[Reject_Diverter_Min_Gap_Required_User]]></a>.Value, "AppCalc^'Belted PandA'!J125", "Double","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 2:32:46 PM")
    AddProperty("9970", "Reject_Diverter_Min_Gap_Required_User_UOM", <a><![CDATA[Reject_Diverter_Min_Gap_Required_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:06:31 PM")
    AddProperty("9968", "Reject_Diverter_Required", <a><![CDATA[Reject_Diverter_Required]]></a>.Value, "AppCalc^'Belted PandA'!J123", "String","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 12:58:01 PM")
    AddProperty("9990", "Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN", <a><![CDATA[Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:20:46 PM")
    AddProperty("9972", "Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM", <a><![CDATA[Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:06:53 PM")
    AddProperty("9989", "Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User", <a><![CDATA[Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User]]></a>.Value, "AppCalc^'Belted PandA'!J127", "Double","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:57:30 PM")
    AddProperty("9987", "Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN", <a><![CDATA[Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:20:15 PM")
    AddProperty("9971", "Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM", <a><![CDATA[Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:06:40 PM")
    AddProperty("9988", "Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User", <a><![CDATA[Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User]]></a>.Value, "AppCalc^'Belted PandA'!J126", "Double","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:57:39 PM")
    AddProperty("9969", "Reject_Diverter_Type", <a><![CDATA[Reject_Diverter_Type]]></a>.Value, "AppCalc^'Belted PandA'!J124", "String","","AppCalc_PandA_Reject_Diverter","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:01:04 PM")
    AddProperty("10268", "Scale_Min_Gap_on_Max_Box_IN", <a><![CDATA[Scale_Min_Gap_on_Max_Box_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 4:07:17 PM")
    AddProperty("10267", "Scale_Min_Gap_on_Max_Box_User", <a><![CDATA[Scale_Min_Gap_on_Max_Box_User]]></a>.Value, "AppCalc^'Belted PandA'!J72", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 4:06:46 PM")
    AddProperty("10257", "Scale_Min_Gap_on_Max_Box_User_UOM", <a><![CDATA[Scale_Min_Gap_on_Max_Box_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:46:45 PM")
    AddProperty("10266", "Scale_Min_Gap_on_Min_Box_IN", <a><![CDATA[Scale_Min_Gap_on_Min_Box_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 4:05:36 PM")
    AddProperty("10265", "Scale_Min_Gap_on_Min_Box_User", <a><![CDATA[Scale_Min_Gap_on_Min_Box_User]]></a>.Value, "AppCalc^'Belted PandA'!J71", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 4:05:04 PM")
    AddProperty("10256", "Scale_Min_Gap_on_Min_Box_User_UOM", <a><![CDATA[Scale_Min_Gap_on_Min_Box_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:46:34 PM")
    AddProperty("10264", "Scale_Min_Head_to_Head_IN", <a><![CDATA[Scale_Min_Head_to_Head_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 4:01:51 PM")
    AddProperty("10263", "Scale_Min_Head_to_Head_User", <a><![CDATA[Scale_Min_Head_to_Head_User]]></a>.Value, "AppCalc^'Belted PandA'!J70", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 4:01:03 PM")
    AddProperty("10262", "Scale_Min_Head_to_Head_User_UOM", <a><![CDATA[Scale_Min_Head_to_Head_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:55:40 PM")
    AddProperty("10250", "Scale_PandA_Scale_Required", <a><![CDATA[Scale_PandA_Scale_Required]]></a>.Value, "AppCalc^'Belted PandA'!J65", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:22:07 PM")
    AddProperty("10259", "Scale_Scale_Bed_Length_IN", <a><![CDATA[Scale_Scale_Bed_Length_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:48:41 PM")
    AddProperty("10258", "Scale_Scale_Bed_Length_User", <a><![CDATA[Scale_Scale_Bed_Length_User]]></a>.Value, "AppCalc^'Belted PandA'!J67", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:15:09 PM")
    AddProperty("10253", "Scale_Scale_Bed_Length_User_UOM", <a><![CDATA[Scale_Scale_Bed_Length_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:46:06 PM")
    AddProperty("10261", "Scale_Scale_Gap_Override_IN", <a><![CDATA[Scale_Scale_Gap_Override_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:55:17 PM")
    AddProperty("10260", "Scale_Scale_Gap_Override_User", <a><![CDATA[Scale_Scale_Gap_Override_User]]></a>.Value, "AppCalc^'Belted PandA'!J69", "Double","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:15:20 PM")
    AddProperty("10254", "Scale_Scale_Gap_Override_User_UOM", <a><![CDATA[Scale_Scale_Gap_Override_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:46:14 PM")
    AddProperty("10251", "Scale_Scale_Type", <a><![CDATA[Scale_Scale_Type]]></a>.Value, "AppCalc^'Belted PandA'!J66", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:22:54 PM")
    AddProperty("10252", "Scale_Spacing_Type", <a><![CDATA[Scale_Spacing_Type]]></a>.Value, "AppCalc^'Belted PandA'!J68", "String","","AppCalc_PandA_Scale","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:45:28 PM")
    AddProperty("10211", "Ver_Scan_Carton_Panels_Scanned_Quantity", <a><![CDATA[Ver_Scan_Carton_Panels_Scanned_Quantity]]></a>.Value, "AppCalc^'Belted PandA'!J104", "Long","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:12:37 PM")
    AddProperty("10213", "Ver_Scan_Carton_Presentation", <a><![CDATA[Ver_Scan_Carton_Presentation]]></a>.Value, "AppCalc^'Belted PandA'!J106", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:17:23 PM")
    AddProperty("10241", "Ver_Scan_Distance_Last_Tamp__Scan_Window_IN", <a><![CDATA[Ver_Scan_Distance_Last_Tamp__Scan_Window_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:56:55 PM")
    AddProperty("10239", "Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value", <a><![CDATA[Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:53:12 PM")
    AddProperty("10240", "Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value", <a><![CDATA[Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:53:40 PM")
    AddProperty("10238", "Ver_Scan_Distance_Last_Tamp__Scan_Window_User", <a><![CDATA[Ver_Scan_Distance_Last_Tamp__Scan_Window_User]]></a>.Value, "AppCalc^'Belted PandA'!J111", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:56:21 PM")
    AddProperty("10229", "Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM", <a><![CDATA[Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:44:48 PM")
    AddProperty("10212", "Ver_Scan_Label_Orientation", <a><![CDATA[Ver_Scan_Label_Orientation]]></a>.Value, "AppCalc^'Belted PandA'!J105", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:15:18 PM")
    AddProperty("10247", "Ver_Scan_Max_Linear_Length_Carton_Scanned_IN", <a><![CDATA[Ver_Scan_Max_Linear_Length_Carton_Scanned_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:07:19 PM")
    AddProperty("10246", "Ver_Scan_Max_Linear_Length_Carton_Scanned_User", <a><![CDATA[Ver_Scan_Max_Linear_Length_Carton_Scanned_User]]></a>.Value, "AppCalc^'Belted PandA'!J115", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:06:18 PM")
    AddProperty("10231", "Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM", <a><![CDATA[Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:45:03 PM")
    AddProperty("10234", "Ver_Scan_Min_Gap_Scan_Application_IN", <a><![CDATA[Ver_Scan_Min_Gap_Scan_Application_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:48:50 PM")
    AddProperty("10233", "Ver_Scan_Min_Gap_Scan_Application_User", <a><![CDATA[Ver_Scan_Min_Gap_Scan_Application_User]]></a>.Value, "AppCalc^'Belted PandA'!J109", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:23:03 PM")
    AddProperty("10227", "Ver_Scan_Min_Gap_Scan_Application_User_UOM", <a><![CDATA[Ver_Scan_Min_Gap_Scan_Application_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:44:33 PM")
    AddProperty("10249", "Ver_Scan_Min_Xmit_Point_FromScan_Window_IN", <a><![CDATA[Ver_Scan_Min_Xmit_Point_From Scan_Window_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:09:47 PM")
    AddProperty("10248", "Ver_Scan_Min_Xmit_Point_FromScan_Window_User", <a><![CDATA[Ver_Scan_Min_Xmit_Point_From Scan_Window_User]]></a>.Value, "AppCalc^'Belted PandA'!J116", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:09:03 PM")
    AddProperty("10232", "Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM", <a><![CDATA[Ver_Scan_Min_Xmit_Point_From Scan_Window_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:45:13 PM")
    AddProperty("10226", "Ver_Scan_Percent_Max_Carton_Length_Scanned", <a><![CDATA[Ver_Scan_Percent_Max_Carton_Length_Scanned]]></a>.Value, "AppCalc^'Belted PandA'!J113", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 7:55:39 PM")
    AddProperty("10225", "Ver_Scan_Percent_Max_Carton_Length_Scanned_User", <a><![CDATA[Ver_Scan_Percent_Max_Carton_Length_Scanned_User]]></a>.Value, "AppCalc^'Belted PandA'!J113", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:42:12 PM")
    AddProperty("10209", "Ver_Scan_Rescan_Barcode_For_Verification", <a><![CDATA[Ver_Scan_Rescan_Barcode_For_Verification]]></a>.Value, "AppCalc^'Belted PandA'!J102", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 1:18:00 PM")
    AddProperty("10236", "Ver_Scan_Scan_Window_Length_Req_IN", <a><![CDATA[Ver_Scan_Scan_Window_Length_Req_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:50:37 PM")
    AddProperty("10235", "Ver_Scan_Scan_Window_Length_Req_User", <a><![CDATA[Ver_Scan_Scan_Window_Length_Req_User]]></a>.Value, "AppCalc^'Belted PandA'!J110", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:37:34 PM")
    AddProperty("10228", "Ver_Scan_Scan_Window_Length_Req_User_UOM", <a><![CDATA[Ver_Scan_Scan_Window_Length_Req_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:44:40 PM")
    AddProperty("10210", "Ver_Scan_Scanner_Configuration", <a><![CDATA[Ver_Scan_Scanner_Configuration]]></a>.Value, "AppCalc^'Belted PandA'!J103", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:01:15 PM")
    AddProperty("10224", "Ver_Scan_Scanner_Data_Transmit_Mode", <a><![CDATA[Ver_Scan_Scanner_Data_Transmit_Mode]]></a>.Value, "AppCalc^'Belted PandA'!J112", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:38:37 PM")
    AddProperty("10223", "Ver_Scan_Shadowing_Allowed", <a><![CDATA[Ver_Scan_Shadowing_Allowed]]></a>.Value, "AppCalc^'Belted PandA'!J108", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:20:36 PM")
    AddProperty("10220", "Ver_Scan_Shadowing_Potential", <a><![CDATA[Ver_Scan_Shadowing_Potential]]></a>.Value, "AppCalc^'Belted PandA'!J107", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 9:19:10 PM")
    AddProperty("10245", "Ver_Scan_Tracking_Photocell_Distance_IN", <a><![CDATA[Ver_Scan_Tracking_Photocell_Distance_IN]]></a>.Value, "Property unit conversion", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:03:55 PM")
    AddProperty("10243", "Ver_Scan_Tracking_Photocell_Distance_Max_Value", <a><![CDATA[Ver_Scan_Tracking_Photocell_Distance_Max_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:59:34 PM")
    AddProperty("10244", "Ver_Scan_Tracking_Photocell_Distance_Min_Value", <a><![CDATA[Ver_Scan_Tracking_Photocell_Distance_Min_Value]]></a>.Value, "", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:00:41 PM")
    AddProperty("10242", "Ver_Scan_Tracking_Photocell_Distance_User", <a><![CDATA[Ver_Scan_Tracking_Photocell_Distance_User]]></a>.Value, "AppCalc^'Belted PandA'!J114", "Double","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 3:03:04 PM")
    AddProperty("10230", "Ver_Scan_Tracking_Photocell_Distance_User_UOM", <a><![CDATA[Ver_Scan_Tracking_Photocell_Distance_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Scanning_Details","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 2:44:55 PM")
    AddProperty("10291", "Summary_Caclucation_Errors_Present", <a><![CDATA[Summary_Caclucation_Errors_Present]]></a>.Value, "Number of errors present at runtime", "Long","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:25:19 PM")
    AddProperty("10290", "Summary_Caclucation_Warnings_Present", <a><![CDATA[Summary_Caclucation_Warnings_Present]]></a>.Value, "Number of warnings present at runtime", "Long","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 8:33:08 PM")
    AddProperty("10274", "Summary_Carton_Length_User", <a><![CDATA[Summary_Carton_Length_User]]></a>.Value, "AppCalc^'Belted PandA'!C145", "Double","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 8:15:37 PM")
    AddProperty("10288", "Summary_Min_H_to_H_Spacing_Limit_Set_By", <a><![CDATA[Summary_Min_H_to_H_Spacing_Limit_Set_By]]></a>.Value, "AppCalc^'Belted PandA'!J136", "String","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:54:48 PM")
    AddProperty("10285", "Summary_Min_H_to_H_Spacing_Req_IN", <a><![CDATA[Summary_Min_H_to_H_Spacing_Req_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:44:30 PM")
    AddProperty("10284", "Summary_Min_H_to_H_Spacing_Req_User", <a><![CDATA[Summary_Min_H_to_H_Spacing_Req_User]]></a>.Value, "AppCalc^'Belted PandA'!J135", "Double","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:43:44 PM")
    AddProperty("10282", "Summary_Min_H_to_H_Spacing_Req_User_UOM", <a><![CDATA[Summary_Min_H_to_H_Spacing_Req_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:38:20 PM")
    AddProperty("10289", "Summary_Min_T_to_H_Gap_Limit_Set_By", <a><![CDATA[Summary_Min_T_to_H_Gap_Limit_Set_By]]></a>.Value, "AppCalc^'Belted PandA'!J136", "String","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:58:18 PM")
    AddProperty("10287", "Summary_Min_T_to_H_Gap_Req_IN", <a><![CDATA[Summary_Min_T_to_H_Gap_Req_IN]]></a>.Value, "Conversion to IN", "Double","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:52:12 PM")
    AddProperty("10286", "Summary_Min_T_to_H_Gap_Req_User", <a><![CDATA[Summary_Min_T_to_H_Gap_Req_User]]></a>.Value, "AppCalc^'Belted PandA'!J137", "Double","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:51:30 PM")
    AddProperty("10283", "Summary_Min_T_to_H_Gap_Req_User_UOM", <a><![CDATA[Summary_Min_T_to_H_Gap_Req_User_UOM]]></a>.Value, "Property User UOM", "String","","AppCalc_PandA_Summary","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/15/2025 6:38:30 PM")
    AddProperty("9994", "Transnorm_TS4800_Control_Reaction_Time_Distance_IN", <a><![CDATA[Transnorm_TS4800_Control_Reaction_Time_Distance_IN]]></a>.Value, "AppCalc^'Belted PandA'!T127", "Double","","AppCalc_PandA_Transnorm_TS4800","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:36:54 PM")
    AddProperty("9992", "Transnorm_TS4800_Divert_Angle", <a><![CDATA[Transnorm_TS4800_Divert_Angle]]></a>.Value, "AppCalc^'Belted PandA'!T124", "Double","","AppCalc_PandA_Transnorm_TS4800","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:36:58 PM")
    AddProperty("9993", "Transnorm_TS4800_Divert_Shifting_Distance_IN", <a><![CDATA[Transnorm_TS4800_Divert_Shifting_Distance_IN]]></a>.Value, "AppCalc^'Belted PandA'!T125", "Double","","AppCalc_PandA_Transnorm_TS4800","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:37:03 PM")
    AddProperty("9995", "Transnorm_TS4800_Encoder_Resolution_IN", <a><![CDATA[Transnorm_TS4800_Encoder_Resolution_IN]]></a>.Value, "AppCalc^'Belted PandA'!T128", "Double","","AppCalc_PandA_Transnorm_TS4800","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:37:32 PM")
    AddProperty("9996", "Transnorm_TS4800_Required_Gap_Max_Box", <a><![CDATA[Transnorm_TS4800_Required_Gap_Max_Box]]></a>.Value, "AppCalc^'Belted PandA'!T128", "Double","","AppCalc_PandA_Transnorm_TS4800","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/12/2025 1:38:48 PM")
    AddProperty("10424", "Debug_Mode", <a><![CDATA[Debug_Mode]]></a>.Value, "True = Debug On / False = Debug Off", "Boolean","","Debugging","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/16/2025 4:00:43 PM")
    AddProperty("10425", "XMLObjectName", <a><![CDATA[XMLObjectName]]></a>.Value, "XML Export Object Name", "String","","Oracle Config XML","FD", 9999, "", 0,0, "Oracle Configurator Transfer", "", "GLOBAL\H602502", "7/16/2025 4:03:44 PM")
    AddProperty("10426", "XMLObjectType", <a><![CDATA[XMLObjectType]]></a>.Value, "XML Export Object Type", "String","","Oracle Config XML","FD", 9999, "", 0,0, "Oracle Configurator Transfer", "", "GLOBAL\H602502", "7/16/2025 4:00:43 PM")
    AddProperty("10427", "XMLObjectValue", <a><![CDATA[XMLObjectValue]]></a>.Value, "XML Export Object Value", "String","","Oracle Config XML","FD", 9999, "", 0,0, "Oracle Configurator Transfer", "", "GLOBAL\H602502", "7/16/2025 4:00:43 PM")
    AddProperty("9805", "PartNumber", <a><![CDATA[Part Number]]></a>.Value, "", "String","N","System","MN", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/10/2025 4:45:56 PM")
    
      AddPropertyExtended(9830,"Gen_Accumulation_Zone_Quantity", "9414", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/11/2025 3:37:39 PM")
    
      AddPropertyExtended(9816,"Gen_Belt_Speed_User", "9400", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/11/2025 3:37:47 PM")
    
      AddPropertyExtended(9819,"Gen_BM_Belt_Acc_Dec_Rate_User", "9403", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/11/2025 3:40:52 PM")
    
      AddPropertyExtended(9806,"Gen_Throughput_Rate", "9390", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/11/2025 3:39:37 PM")
    
      AddPropertyExtended(9858,"MTBH_Height_Average_User", "9442", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:51 PM")
    
      AddPropertyExtended(9857,"MTBH_Height_Maximum_User", "9441", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:45 PM")
    
      AddPropertyExtended(9856,"MTBH_Height_Minimum_User", "9440", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:35 PM")
    
      AddPropertyExtended(9846,"MTBH_Length_Average_User", "9430", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:56:58 PM")
    
      AddPropertyExtended(9845,"MTBH_Length_Maximum_User", "9429", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:56:52 PM")
    
      AddPropertyExtended(9844,"MTBH_Length_Minimum_User", "9428", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:08 PM")
    
      AddPropertyExtended(9861,"MTBH_Weight_Average_User", "9445", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:58:09 PM")
    
      AddPropertyExtended(9860,"MTBH_Weight_Maximum_User", "9444", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:58:03 PM")
    
      AddPropertyExtended(9859,"MTBH_Weight_Minimum_User", "9443", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:57 PM")
    
      AddPropertyExtended(9855,"MTBH_Width_Average_User", "9439", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:29 PM")
    
      AddPropertyExtended(9854,"MTBH_Width_Maximum_User", "9438", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:22 PM")
    
      AddPropertyExtended(9853,"MTBH_Width_Minimum_User", "9437", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:57:15 PM")
    
      AddPropertyExtended(10057,"App_Down_Stroke_Tamp_Clearance_User", "9639", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 2:50:32 PM")
    
      AddPropertyExtended(10029,"App_Label_Applicator_Fixed_Printer_Overhead", "9611", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 12:52:01 PM")
    
      AddPropertyExtended(10028,"App_Label_Applicator_Tamp_Brush_Required", "9610", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 12:49:28 PM")
    
      AddPropertyExtended(10053,"App_Label_Applicator_Tamp_Pad_Length_User", "9635", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 2:51:32 PM")
    
      AddPropertyExtended(10050,"App_Label_Print_Speed_User", "9632", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 1:47:50 PM")
    
      AddPropertyExtended(10031,"App_Label_Print_Time", "9613", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 2:56:12 PM")
    
      AddPropertyExtended(10046,"App_Label_Printed_Length_User", "9628", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 1:13:45 PM")
    
      AddPropertyExtended(10071,"App_Max_Tamp_Stroke_Req_User", "9653", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 6:44:01 PM")
    
      AddPropertyExtended(10140,"App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User", "9721", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 8:21:42 PM")
    
      AddPropertyExtended(10149,"App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User", "9730", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/15/2025 12:24:40 PM")
    
      AddPropertyExtended(10074,"App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User", "9656", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 8:05:47 PM")
    
      AddPropertyExtended(10143,"App_Min_H_to_H_Req_Compl_PandA_Cycle_User", "9724", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 8:48:48 PM")
    
      AddPropertyExtended(10207,"App_Min_H_to_H_Spacing_Avg_Carton_User", "9788", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/15/2025 1:10:09 PM")
    
      AddPropertyExtended(10136,"App_Min_H_to_H_Spacing_Largest_Carton_User", "9717", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 8:13:17 PM")
    
      AddPropertyExtended(10065,"App_Min_Pitch_Btw_App_User", "9647", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 2:49:05 PM")
    
      AddPropertyExtended(10061,"App_Return_Stroke_Tamp_Clearance_User", "9643", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 2:53:34 PM")
    
      AddPropertyExtended(10030,"App_Tamp_Cycle_Time_Pneumatic_Side_Apply", "9612", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 12:55:15 PM")
    
      AddPropertyExtended(10069,"App_Tamp_Home_Height_Above_Conveyor_User", "9651", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/14/2025 6:44:55 PM")
    
      AddPropertyExtended(10258,"Scale_Scale_Bed_Length_User", "9837", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 8:15:09 PM")
    
      AddPropertyExtended(10260,"Scale_Scale_Gap_Override_User", "9839", "EXTLABEL", "Label", "FORMULA", "GLOBAL\H602502", "7/16/2025 8:15:20 PM")
    
      AddPropertyExtended(10238,"Ver_Scan_Distance_Last_Tamp__Scan_Window_User", "9817", "EXTLABEL", "Label", "FORMULA", "GLOBAL\H602502", "7/15/2025 2:56:21 PM")
    
      AddPropertyExtended(10226,"Ver_Scan_Percent_Max_Carton_Length_Scanned", "9805", "EXTLABEL", "Label", "FORMULA", "GLOBAL\H602502", "7/16/2025 7:55:39 PM")
    
      AddPropertyExtended(10225,"Ver_Scan_Percent_Max_Carton_Length_Scanned_User", "9804", "EXTLABEL", "Label", "FORMULA", "GLOBAL\H602502", "7/15/2025 2:42:13 PM")
    
      AddPropertyExtended(10209,"Ver_Scan_Rescan_Barcode_For_Verification", "9790", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/15/2025 1:18:00 PM")
    
      AddPropertyExtended(10210,"Ver_Scan_Scanner_Configuration", "9791", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/16/2025 9:01:15 PM")
    
      AddPropertyExtended(10242,"Ver_Scan_Tracking_Photocell_Distance_User", "9821", "EXTTOOLT", "Tooltip", "FORMULA", "GLOBAL\H602502", "7/15/2025 3:03:04 PM")
    
      AddValidValue("User_UOM_System")
    
      AddValidValue("Acq_Label_Data_Acquisition_Method")
    
      AddValidValue("Acq_Label_Data_Acquisition_Travel_User_UOM")
    
      AddValidValue("Conv_Total_App_Belt_Length_Req_FT_User_UOM")
    
      AddValidValue("Conv_Total_App_Belt_Length_Req_IN_User_UOM")
    
      AddValidValue("Conv_Total_Solution_Length_FT_User_UOM")
    
      AddValidValue("Gen_Accumulation_Zone_Length_User")
    
      AddValidValue("Gen_Accumulation_Zone_Length_User_UOM")
    
      AddValidValue("Gen_Belt_Speed_User_UOM")
    
      AddValidValue("Gen_BM_Belt_Acc_Dec_Rate_User_UOM")
    
      AddValidValue("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM")
    
      AddValidValue("Gen_BM_Belt_Input_Speed_User_UOM")
    
      AddValidValue("Gen_Conveyor_Type")
    
      AddValidValue("Gen_Conveyor_Width_User")
    
      AddValidValue("Gen_Conveyor_Width_User_UOM")
    
      AddValidValue("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM")
    
      AddValidValue("Ind_Scan_Carton_Presentation")
    
      AddValidValue("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM")
    
      AddValidValue("Ind_Scan_Label_Orientation")
    
      AddValidValue("Ind_Scan_Scan_App_Min_Gap_User_UOM")
    
      AddValidValue("Ind_Scan_Scan_Window_Length_Req_User_UOM")
    
      AddValidValue("Ind_Scan_Scanner_Config")
    
      AddValidValue("Ind_Scan_Scanner_Data_Transmit_Mode")
    
      AddValidValue("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM")
    
      AddValidValue("Ind_Scan_Shadowing_Allowed")
    
      AddValidValue("Ind_Scan_Shadowing_Potential")
    
      AddValidValue("Ind_Scan_Tracking_Photocell_Distance_User_UOM")
    
      AddValidValue("MTBH_Height_Average_User_UOM")
    
      AddValidValue("MTBH_Height_Maximum_User_UOM")
    
      AddValidValue("MTBH_Height_Minimum_User_UOM")
    
      AddValidValue("MTBH_Length_Average_User_UOM")
    
      AddValidValue("MTBH_Length_Maximum_User_UOM")
    
      AddValidValue("MTBH_Length_Minimum_User_UOM")
    
      AddValidValue("MTBH_Use_Local")
    
      AddValidValue("MTBH_Weight_Average_User_UOM")
    
      AddValidValue("MTBH_Weight_Maximum_User_UOM")
    
      AddValidValue("MTBH_Weight_Minimum_User_UOM")
    
      AddValidValue("MTBH_Width_Average_User_UOM")
    
      AddValidValue("MTBH_Width_Maximum_User_UOM")
    
      AddValidValue("MTBH_Width_Minimum_User_UOM")
    
      AddValidValue("Output_Carton_Stability_Length_User_UOM")
    
      AddValidValue("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM")
    
      AddValidValue("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM")
    
      AddValidValue("Output_Induction_Scan_Window_Length_User_UOM")
    
      AddValidValue("Output_Label_Data_Acq_Distance_App_1_User_UOM")
    
      AddValidValue("Output_Label_Data_Acq_Distance_App_2_User_UOM")
    
      AddValidValue("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM")
    
      AddValidValue("Output_Min_Distance_Between_Applicator_1_2_User_UO")
    
      AddValidValue("Output_Min_Distance_for_Printer_Setup_User_UOM")
    
      AddValidValue("Output_Min_Distance_User_UOM")
    
      AddValidValue("Output_PandA_Belt_Exit_PE_Distance_User_UOM")
    
      AddValidValue("Output_Total_Calc_Belt_Length_Double_FT_User_UOM")
    
      AddValidValue("Output_Total_Calc_Belt_Length_Double_IN_User_UOM")
    
      AddValidValue("Output_Total_Calc_Belt_Length_Single_FT_User_UOM")
    
      AddValidValue("Output_Total_Calc_Belt_Length_Single_IN_User_UOM")
    
      AddValidValue("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM")
    
      AddValidValue("Output_Ver_Scan_Data_Capture_Window_Length_User_UO")
    
      AddValidValue("Output_Verify_Scanner_Distance_to_Xmit_User_UOM")
    
      AddValidValue("Output_Verify_Scanner_Window_Length_User_UOM")
    
      AddValidValue("App_Down_Stroke_Tamp_Clearance_User_UOM")
    
      AddValidValue("App_Label_Applicator_Quantity")
    
      AddValidValue("App_Label_Applicator_Reason_For_Multiple")
    
      AddValidValue("App_Label_Applicator_Tamp_Brush_Required")
    
      AddValidValue("App_Label_Applicator_Tamp_Pad_Length_User_UOM")
    
      AddValidValue("App_Label_Applicator_Type")
    
      AddValidValue("App_Label_Applicator_Type_Tamp")
    
      AddValidValue("App_Label_Print_Speed_User")
    
      AddValidValue("App_Label_Print_Speed_User_UOM")
    
      AddValidValue("App_Label_Printed_Length_User_UOM")
    
      AddValidValue("App_Max_Tamp_Stroke_Req_User_UOM")
    
      AddValidValue("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM")
    
      AddValidValue("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM")
    
      AddValidValue("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM")
    
      AddValidValue("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM")
    
      AddValidValue("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM")
    
      AddValidValue("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM")
    
      AddValidValue("App_Min_Pitch_Btw_App_User_UOM")
    
      AddValidValue("App_Return_Stroke_Tamp_Clearance_User_UOM")
    
      AddValidValue("App_Tamp_Home_Height_Above_Conveyor_User_UOM")
    
      AddValidValue("Reject_Diverter_Min_Gap_Required_User_UOM")
    
      AddValidValue("Reject_Diverter_Required")
    
      AddValidValue("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM")
    
      AddValidValue("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM")
    
      AddValidValue("Reject_Diverter_Type")
    
      AddValidValue("Scale_Min_Gap_on_Max_Box_User_UOM")
    
      AddValidValue("Scale_Min_Gap_on_Min_Box_User_UOM")
    
      AddValidValue("Scale_Min_Head_to_Head_User_UOM")
    
      AddValidValue("Scale_PandA_Scale_Required")
    
      AddValidValue("Scale_Scale_Bed_Length_User_UOM")
    
      AddValidValue("Scale_Scale_Gap_Override_User_UOM")
    
      AddValidValue("Scale_Scale_Type")
    
      AddValidValue("Scale_Spacing_Type")
    
      AddValidValue("Ver_Scan_Carton_Presentation")
    
      AddValidValue("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM")
    
      AddValidValue("Ver_Scan_Label_Orientation")
    
      AddValidValue("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM")
    
      AddValidValue("Ver_Scan_Min_Gap_Scan_Application_User_UOM")
    
      AddValidValue("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM")
    
      AddValidValue("Ver_Scan_Rescan_Barcode_For_Verification")
    
      AddValidValue("Ver_Scan_Scan_Window_Length_Req_User_UOM")
    
      AddValidValue("Ver_Scan_Scanner_Configuration")
    
      AddValidValue("Ver_Scan_Scanner_Data_Transmit_Mode")
    
      AddValidValue("Ver_Scan_Shadowing_Allowed")
    
      AddValidValue("Ver_Scan_Shadowing_Potential")
    
      AddValidValue("Ver_Scan_Tracking_Photocell_Distance_User_UOM")
    
      AddValidValue("Summary_Min_H_to_H_Spacing_Req_User_UOM")
    
      AddValidValue("Summary_Min_T_to_H_Gap_Req_User_UOM")
    
      oSubpart = AddSubpart(340,"PandA_Theoretical_Max_Throughput_Rate", <a><![CDATA[PandA_Theoretical_Max_Throughput_Rate]]></a>.Value, "FD", "", "General", 9999, "", "GLOBAL\H602502", "7/15/2025 4:24:44 PM")
      
        oSubpart.AddVPF (422, "CAE_App_Calc_Print_And_Apply_Theoretical_Max", "CAE_App_Calc_Print_And_Apply_Theoretical_Max")
      
      oConnection = AddConnection("My_EHS350_Data", <a><![CDATA[My_EHS350_Data]]></a>.Value, "", "174", "OO", 0, "","AppCalc_PandA", 9999, "", "GLOBAL\H602502", "7/15/2025 12:02:48 PM")
      
        oConnection.AddVPF(419, "CAE_EHS350_Data")
      
      oConnection = AddConnection("My_PRD", <a><![CDATA[My_PRD]]></a>.Value, "", "188", "OO", 0, "","AppCalc_PandA", 9999, "", "GLOBAL\H602502", "7/16/2025 1:04:12 PM")
      
        oConnection.AddVPF(163, "SFD_Salesforce_PRD_Header_Mock")
      
      oConnection = AddConnection("Ind_Scan_My_Scan_Config", <a><![CDATA[Ind_Scan_My_Scan_Config]]></a>.Value, "", "197", "OO", 0, "","AppCalc_PandA_Induction_Scanning", 9999, "", "GLOBAL\H602502", "7/16/2025 9:26:30 PM")
      
        oConnection.AddVPF(417, "APC_Scan_Configuration")
      
      oConnection = AddConnection("Ver_Scan_My_Scan_Config", <a><![CDATA[Ver_Scan_My_Scan_Config]]></a>.Value, "", "196", "OO", 0, "","AppCalc_PandA_Scanning_Details", 9999, "", "GLOBAL\H602502", "7/16/2025 9:03:13 PM")
      
        oConnection.AddVPF(417, "APC_Scan_Configuration")
      
      oConnection = AddConnection("My_Setup", <a><![CDATA[My_Setup]]></a>.Value, "", "195", "OO", 0, "","General", 9999, "", "GLOBAL\H602502", "7/16/2025 7:08:38 PM")
      
        oConnection.AddVPF(119, "APC_Setup")
      
      oConnection = AddConnection("MySource", <a><![CDATA[My Source Part Family]]></a>.Value, "Connection to the Value Provider Part Family Instance", "193", "OO", 0, "","Oracle Config XML", 9999, "Oracle Configurator Transfer", "GLOBAL\H602502", "7/16/2025 4:00:43 PM")
      
        oConnection.AddVPF(33, "OCT_Accessory")
      
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize_Process(ByVal lngProcessID as Integer) Implements RuleStream.IRsPartFormulas.InitializeProcess
    Select Case lngProcessID
    
    Case Else
    Process = "DefaultProcess"
    End Select
    End Sub

    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Properties()
    Dim ctx as String
    ctx = ContextId
    
            If Incontext("-1", ctx) Then
          InitProperty("Brush_Length_Factor_IN", "9658", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 3:27:33 PM", "", "In Development",  0,17024)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Customer_Date", "9960", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/17/2025 11:43:02 AM", "", "In Development",  0,18474)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Customer_Location", "9958", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 1:09:59 PM", "", "In Development",  0,18052)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Customer_Name", "9957", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 1:10:03 PM", "", "In Development",  0,18050)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Customer_Proposal_Number", "9959", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 1:09:55 PM", "", "In Development",  0,18055)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Max_Pneumatic_Stroke_IN", "9714", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 6:50:51 PM", "", "In Development",  0,17130)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic", "9785", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 12:22:45 PM", "", "In Development",  0,17267)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo", "9784", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 12:16:57 PM", "", "In Development",  0,17265)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Pneumatic_Min_Head_to_Head_IN", "9727", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:43:54 PM", "", "In Development",  0,17170)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Pneumatic_Tamp_Min_Gap_IN", "9713", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 6:41:46 PM", "", "In Development",  0,17128)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Servo_Min_Head_to_Head_IN", "9725", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 12:08:12 PM", "", "In Development",  0,17262)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Servo_Tamp_Min_Gap_IN", "9711", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 6:49:05 PM", "", "In Development",  0,17129)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("User_UOM_System", "9392", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 8:02:15 PM", "", "In Development",  0,18229)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Acq_Label_Data_Acquisition_Method", "9533", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:15:41 PM", "", "In Development",  0,16575)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Acq_Label_Data_Acquisition_Travel_IN", "9538", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:47:28 PM", "", "In Development",  0,16605)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Acq_Label_Data_Acquisition_Travel_User", "9536", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:58:41 PM", "", "In Development",  0,16610)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Acq_Label_Data_Acquisition_Travel_User_UOM", "9537", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:20:45 PM", "", "In Development",  0,16587)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Acq_Max_Host_Resp_Time_Secs", "9534", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:30:55 PM", "", "In Development",  0,16595)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Acq_Max_Local_Lookup_Time_Secs", "9535", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:30:43 PM", "", "In Development",  0,16594)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_App_Belt_Length_Req_FT", "9588", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 3:06:14 PM", "", "In Development",  0,16732)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_App_Belt_Length_Req_FT_User", "9585", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 6:13:14 PM", "", "In Development",  0,18180)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_App_Belt_Length_Req_FT_User_UOM", "9582", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:03:11 PM", "", "In Development",  0,16723)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_App_Belt_Length_Req_IN", "9587", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 3:05:42 PM", "", "In Development",  0,16730)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_App_Belt_Length_Req_IN_User", "9584", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 6:12:31 PM", "", "In Development",  0,18179)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_App_Belt_Length_Req_IN_User_UOM", "9581", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/12/2025 3:02:43 PM", "", "In Development",  0,16719)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_Solution_Length_FT", "9589", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 3:06:37 PM", "", "In Development",  0,16734)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_Solution_Length_FT_User", "9586", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 6:21:16 PM", "", "In Development",  0,18182)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conv_Total_Solution_Length_FT_User_UOM", "9583", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:03:23 PM", "", "In Development",  0,16724)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Accumulation_Convey_Type_Pre_Panda", "9416", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/10/2025 6:26:59 PM", "", "In Development",  0,16160)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Accumulation_Zone_Length_IN", "9409", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:47:42 PM", "", "In Development",  0,16624)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Accumulation_Zone_Length_User", "9402", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/10/2025 9:01:56 PM", "", "In Development",  0,16282)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Accumulation_Zone_Length_User_UOM", "9395", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:47:44 PM", "", "In Development",  0,16123)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Accumulation_Zone_Quantity", "9414", "8", "20", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:31:13 PM", "", "In Development",  0,16281)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Belt_Speed_IN", "9407", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:50:50 PM", "", "In Development",  0,16606)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Belt_Speed_User", "9400", "Gen_Belt_Speed_User_Min_Value", "Gen_Belt_Speed_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:28:16 PM", "", "In Development",  0,16414)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Belt_Speed_User_Max_Value", "9487", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:26:46 PM", "", "In Development",  0,16433)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Belt_Speed_User_Min_Value", "9488", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:27:54 PM", "", "In Development",  0,16435)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Belt_Speed_User_UOM", "9393", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:48:08 PM", "", "In Development",  0,16287)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Acc_Dec_Rate_IN", "9410", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:47:57 PM", "", "In Development",  0,16625)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Acc_Dec_Rate_User", "9403", "Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value", "Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:40:52 PM", "", "In Development",  0,16487)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value", "9489", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:35:15 PM", "", "In Development",  0,16439)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value", "9490", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:35:40 PM", "", "In Development",  0,16441)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Acc_Dec_Rate_User_UOM", "9396", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:47:51 PM", "", "In Development",  0,16291)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Gap_Stop_Min_Carton_IN", "9411", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:48:12 PM", "", "In Development",  0,16626)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Gap_Stop_Min_Carton_User", "9404", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:44:12 PM", "", "In Development",  0,16418)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM", "9397", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:47:59 PM", "", "In Development",  0,16127)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Input_Speed_IN", "9412", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:48:26 PM", "", "In Development",  0,16627)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Input_Speed_User", "9405", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:47:24 PM", "", "In Development",  0,16416)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_Input_Speed_User_UOM", "9398", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:48:18 PM", "", "In Development",  0,16294)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_PTO_Ratio", "9417", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:37:38 PM", "", "In Development",  0,16413)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_BM_Belt_PTO_Target_Ratio", "9477", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:12:32 PM", "", "In Development",  0,16397)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Conveyor_Type", "9415", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/10/2025 6:24:36 PM", "", "In Development",  0,16156)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Conveyor_Width_IN", "9408", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:48:41 PM", "", "In Development",  0,16628)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Conveyor_Width_User", "9401", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/10/2025 8:40:02 PM", "", "In Development",  0,16263)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Conveyor_Width_User_UOM", "9394", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:48:30 PM", "", "In Development",  0,16121)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_MDR_Min_Gap_Throughput_Limit_IN", "9413", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:48:55 PM", "", "In Development",  0,16629)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_MDR_Min_Gap_Throughput_Limit_User", "9406", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/10/2025 9:06:58 PM", "", "In Development",  0,16284)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM", "9399", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:48:38 PM", "", "In Development",  0,16131)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Gen_Throughput_Rate", "9390", "0", "60", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 1:27:15 PM", "", "In Development",  0,16109)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Panels_Scanned_Quantity", "9501", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:33:29 PM", "", "In Development",  0,18281)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Percent_Max_Length_Scanned", "9507", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:09:32 PM", "", "In Development",  0,16498)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Percent_Max_Length_Scanned_User", "9508", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:38:17 PM", "", "In Development",  0,16533)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Presentation", "9503", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:33:40 PM", "", "In Development",  0,18283)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Scanned_Max_Lin_Length_IN", "9513", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:49:32 PM", "", "In Development",  0,16630)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Scanned_Max_Lin_Length_User", "9517", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:04:22 PM", "", "In Development",  0,16572)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM", "9522", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:16:16 PM", "", "In Development",  0,16516)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Label_Orientation", "9502", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:32:55 PM", "", "In Development",  0,18279)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scan_App_Min_Gap_IN", "9509", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:49:45 PM", "", "In Development",  0,16631)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scan_App_Min_Gap_User", "9510", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:40:24 PM", "", "In Development",  0,18292)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scan_App_Min_Gap_User_UOM", "9519", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:15:51 PM", "", "In Development",  0,16510)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scan_Window_Length_Req_IN", "9511", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:49:56 PM", "", "In Development",  0,16632)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scan_Window_Length_Req_User", "9515", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:38:26 PM", "", "In Development",  0,18290)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scan_Window_Length_Req_User_UOM", "9520", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:16:00 PM", "", "In Development",  0,16512)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scanner_Config", "9500", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:27:42 PM", "", "In Development",  0,18272)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scanner_Data_Transmit_Mode", "9506", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:35:10 PM", "", "In Development",  0,16531)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scanner_Min_Xmit_Point_IN", "9514", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:50:14 PM", "", "In Development",  0,16633)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scanner_Min_Xmit_Point_User", "9518", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 6:47:26 PM", "", "In Development",  0,16561)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM", "9523", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:16:29 PM", "", "In Development",  0,16518)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Shadowing_Allowed", "9505", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:35:36 PM", "", "In Development",  0,18287)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Shadowing_Potential", "9504", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:34:29 PM", "", "In Development",  0,18285)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Tracking_Photocell_Distance_IN", "9512", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:50:24 PM", "", "In Development",  0,16634)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Tracking_Photocell_Distance_User", "9516", "Ind_Scan_Tracking_Photocell_Distance_User_Min_Val", "Ind_Scan_Tracking_Photocell_Distance_User_Max_Val", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:33:53 PM", "", "In Development",  0,16596)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Tracking_Photocell_Distance_User_Max_Val", "9530", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:00:57 PM", "", "In Development",  0,16568)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Tracking_Photocell_Distance_User_Min_Val", "9531", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 7:01:03 PM", "", "In Development",  0,16569)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ind_Scan_Tracking_Photocell_Distance_User_UOM", "9521", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 4:16:09 PM", "", "In Development",  0,16514)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MDR_RAT_Swivel_Rate", "9580", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:46:12 PM", "", "In Development",  0,16713)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Average_IN", "9459", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:50:50 PM", "", "In Development",  0,16635)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Average_User", "9442", "MTBH_Height_Minimum_User", "MTBH_Height_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:51 PM", "", "In Development",  0,18204)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Average_User_UOM", "9436", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:48:55 PM", "", "In Development",  0,16195)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Maximum_IN", "9458", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:50:58 PM", "", "In Development",  0,16636)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Maximum_User", "9441", "MTBH_Height_Minimum_User", "MTBH_Height_Maximum_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:45 PM", "", "In Development",  0,18201)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Maximum_User_Max_Value", "9497", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:28:10 PM", "", "In Development",  0,16476)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Maximum_User_UOM", "9435", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:01 PM", "", "In Development",  0,16193)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Minimum_IN", "9457", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:51:08 PM", "", "In Development",  0,16637)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Minimum_User", "9440", "MTBH_Height_Minimum_User_Min_Value", "MTBH_Height_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:35 PM", "", "In Development",  0,18202)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Minimum_User_Min_Value", "9496", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:26:16 PM", "", "In Development",  0,16472)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Height_Minimum_User_UOM", "9434", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:07 PM", "", "In Development",  0,16191)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Average_IN", "9452", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:51:20 PM", "", "In Development",  0,16638)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Average_User", "9430", "MTBH_Length_Minimum_User", "MTBH_Length_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:56:58 PM", "", "In Development",  0,18191)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Average_User_UOM", "9421", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:13 PM", "", "In Development",  0,16171)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Maximum_IN", "9451", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:51:31 PM", "", "In Development",  0,16639)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Maximum_User", "9429", "MTBH_Length_Minimum_User", "MTBH_Length_Maximum_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:56:52 PM", "", "In Development",  0,18189)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Maximum_User_Max_Value", "9493", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:10:28 PM", "", "In Development",  0,16456)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Maximum_User_UOM", "9420", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:18 PM", "", "In Development",  0,16169)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Minimum_IN", "9450", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:51:42 PM", "", "In Development",  0,16640)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Minimum_User", "9428", "MTBH_Length_Minimum_User_Min_Value", "MTBH_Length_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:08 PM", "", "In Development",  0,18188)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Minimum_User_Min_Value", "9492", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 2:42:41 PM", "", "In Development",  0,16448)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Length_Minimum_User_UOM", "9419", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:24 PM", "", "In Development",  0,16167)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Use_Local", "9418", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:47:52 PM", "", "In Development",  0,16430)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Average_LBS", "9464", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:51:57 PM", "", "In Development",  0,16641)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Average_User", "9445", "MTBH_Weight_Minimum_User", "MTBH_Weight_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:58:09 PM", "", "In Development",  0,18213)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Average_User_UOM", "9448", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:32 PM", "", "In Development",  0,16212)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Maximum_LBS", "9462", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:52:09 PM", "", "In Development",  0,16642)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Maximum_User", "9444", "MTBH_Weight_Minimum_User", "MTBH_Weight_Maximum_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:58:03 PM", "", "In Development",  0,18214)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Maximum_User_Max_Value", "9499", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:35:27 PM", "", "In Development",  0,16485)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Maximum_User_UOM", "9447", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:40 PM", "", "In Development",  0,16210)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Minimum_LBS", "9461", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:52:21 PM", "", "In Development",  0,16644)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Minimum_User", "9443", "MTBH_Weight_Minimum_User_Min_Value", "MTBH_Weight_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:57 PM", "", "In Development",  0,18215)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Minimum_User_Min_Value", "9498", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:32:45 PM", "", "In Development",  0,16480)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Weight_Minimum_User_UOM", "9446", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:46 PM", "", "In Development",  0,16208)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Average_IN", "9456", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:52:31 PM", "", "In Development",  0,16645)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Average_User", "9439", "MTBH_Width_Minimum_User", "MTBH_Width_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:29 PM", "", "In Development",  0,18197)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Average_User_UOM", "9427", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:49:55 PM", "", "In Development",  0,16183)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Maximum_IN", "9455", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:52:42 PM", "", "In Development",  0,16646)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Maximum_User", "9438", "MTBH_Width_Minimum_User", "MTBH_Width_Maximum_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:22 PM", "", "In Development",  0,18195)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Maximum_User_Max_Value", "9495", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:19:26 PM", "", "In Development",  0,16464)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Maximum_User_UOM", "9426", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:50:00 PM", "", "In Development",  0,16181)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Minimum_IN", "9454", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:52:54 PM", "", "In Development",  0,16648)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Minimum_User", "9437", "MTBH_Width_Minimum_User_Min_Value", "MTBH_Width_Maximum_User", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:57:14 PM", "", "In Development",  0,18193)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Minimum_User_Min_Value", "9494", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/11/2025 3:19:35 PM", "", "In Development",  0,16465)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MTBH_Width_Minimum_User_UOM", "9425", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/11/2025 12:50:05 PM", "", "In Development",  0,16179)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Carton_Stability_Length_IN", "9899", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:04:57 PM", "", "In Development",  0,17657)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Carton_Stability_Length_User", "9897", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:28:41 PM", "", "In Development",  0,17655)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Carton_Stability_Length_User_UOM", "9878", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:55:58 PM", "", "In Development",  0,17612)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induct_Max_Lgth_of_Carton_Scanned_IN", "9896", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:02:07 PM", "", "In Development",  0,17651)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induct_Max_Lgth_of_Carton_Scanned_User", "9895", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:28:48 PM", "", "In Development",  0,17649)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM", "9877", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:55:34 PM", "", "In Development",  0,17610)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induct_Scan_Data_Cap_Window_Lgth_IN", "9902", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:22:34 PM", "", "In Development",  0,17663)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induct_Scan_Data_Cap_Window_Lgth_User", "9901", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:29:07 PM", "", "In Development",  0,17661)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM", "9880", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:56:18 PM", "", "In Development",  0,17616)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induction_Scan_Window_Length_IN", "9900", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:05:30 PM", "", "In Development",  0,17659)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induction_Scan_Window_Length_User", "9898", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:29:12 PM", "", "In Development",  0,17654)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Induction_Scan_Window_Length_User_UOM", "9879", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:56:10 PM", "", "In Development",  0,17614)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Label_Data_Acq_Distance_App_1_IN", "9904", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:24:51 PM", "", "In Development",  0,17667)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Label_Data_Acq_Distance_App_1_User", "9903", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:29:25 PM", "", "In Development",  0,17665)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Label_Data_Acq_Distance_App_1_User_UOM", "9881", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:56:26 PM", "", "In Development",  0,17618)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Label_Data_Acq_Distance_App_2_IN", "9906", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:26:28 PM", "", "In Development",  0,17671)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Label_Data_Acq_Distance_App_2_User", "9905", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:30:08 PM", "", "In Development",  0,18016)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Label_Data_Acq_Distance_App_2_User_UOM", "9882", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:56:37 PM", "", "In Development",  0,17620)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN", "9930", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:09:40 PM", "", "In Development",  0,17995)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User", "9929", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:08:40 PM", "", "In Development",  0,17993)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM", "9885", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:57:18 PM", "", "In Development",  0,17626)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_Between_Applicator_1_2_IN", "9928", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:07:36 PM", "", "In Development",  0,17991)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_Between_Applicator_1_2_User", "9927", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:06:38 PM", "", "In Development",  0,17989)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_Between_Applicator_1_2_User_UO", "9884", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:57:07 PM", "", "In Development",  0,17624)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_for_Printer_Setup_IN", "9908", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:28:14 PM", "", "In Development",  0,17675)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_for_Printer_Setup_User", "9907", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 9:29:39 PM", "", "In Development",  0,17673)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_for_Printer_Setup_User_UOM", "9883", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:56:51 PM", "", "In Development",  0,17622)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_IN", "9944", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:42:06 PM", "", "In Development",  0,18023)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_User", "9943", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:41:35 PM", "", "In Development",  0,18021)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Min_Distance_User_UOM", "9942", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:39:34 PM", "", "In Development",  0,18018)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_PandA_Belt_Exit_PE_Distance_IN", "9940", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:22:04 PM", "", "In Development",  0,18015)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_PandA_Belt_Exit_PE_Distance_User", "9939", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:21:26 PM", "", "In Development",  0,18013)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_PandA_Belt_Exit_PE_Distance_User_UOM", "9890", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:58:03 PM", "", "In Development",  0,17636)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Double_FT", "9956", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 5:49:33 PM", "", "In Development",  0,18175)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Double_FT_User", "9955", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:59:34 PM", "", "In Development",  0,18045)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Double_FT_User_UOM", "9894", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:59:01 PM", "", "In Development",  0,17646)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Double_IN", "9954", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:56:19 PM", "", "In Development",  0,18042)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Double_IN_User", "9948", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 8:28:49 PM", "", "In Development",  0,18236)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Double_IN_User_UOM", "9892", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 8:29:12 PM", "", "In Development",  0,18237)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Single_FT", "9947", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 5:49:50 PM", "", "In Development",  0,18176)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Single_FT_User", "9946", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:49:54 PM", "", "In Development",  0,18031)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Single_FT_User_UOM", "9893", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:58:55 PM", "", "In Development",  0,17644)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Single_IN", "9945", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:48:56 PM", "", "In Development",  0,18028)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Single_IN_User", "9941", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:47:47 PM", "", "In Development",  0,18026)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Total_Calc_Belt_Length_Single_IN_User_UOM", "9891", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:58:17 PM", "", "In Development",  0,17638)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Ver_Max_Length_of_Carton_Scanned_IN", "9934", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:12:49 PM", "", "In Development",  0,18003)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Ver_Max_Length_of_Carton_Scanned_User", "9933", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:12:08 PM", "", "In Development",  0,18001)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM", "9887", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:57:34 PM", "", "In Development",  0,17630)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Ver_Scan_Data_Capture_Window_Length_IN", "9938", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:18:38 PM", "", "In Development",  0,18011)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Ver_Scan_Data_Capture_Window_Length_User", "9937", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:17:47 PM", "", "In Development",  0,18009)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Ver_Scan_Data_Capture_Window_Length_User_UO", "9889", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:57:52 PM", "", "In Development",  0,17634)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Verify_Scanner_Distance_to_Xmit_IN", "9936", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:16:55 PM", "", "In Development",  0,18007)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Verify_Scanner_Distance_to_Xmit_User", "9935", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:16:24 PM", "", "In Development",  0,18005)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Verify_Scanner_Distance_to_Xmit_User_UOM", "9888", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:57:45 PM", "", "In Development",  0,17632)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Verify_Scanner_Window_Length_IN", "9932", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:11:15 PM", "", "In Development",  0,17999)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Verify_Scanner_Window_Length_User", "9931", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 12:10:46 PM", "", "In Development",  0,17997)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Output_Verify_Scanner_Window_Length_User_UOM", "9886", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:57:26 PM", "", "In Development",  0,17628)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Down_Stroke_Tamp_Clearance_IN", "9642", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:53:59 PM", "", "In Development",  0,16975)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Down_Stroke_Tamp_Clearance_User", "9639", "App_Down_Stroke_Tamp_Clearance_User_Min_Value", "App_Down_Stroke_Tamp_Clearance_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:50:32 PM", "", "In Development",  0,16997)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Down_Stroke_Tamp_Clearance_User_Max_Value", "9641", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:50:46 PM", "", "In Development",  0,16998)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Down_Stroke_Tamp_Clearance_User_Min_Value", "9640", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:50:54 PM", "", "In Development",  0,16999)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Down_Stroke_Tamp_Clearance_User_UOM", "9617", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:06:15 PM", "", "In Development",  0,16911)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Fixed_Printer_Overhead", "9611", "0.010", "2", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:52:01 PM", "", "In Development",  0,16895)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Quantity", "9607", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:42:58 PM", "", "In Development",  0,16880)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Reason_For_Multiple", "9608", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:45:06 PM", "", "In Development",  0,16884)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Tamp_Brush_Required", "9610", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:49:28 PM", "", "In Development",  0,16892)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Tamp_Pad_Length_IN", "9638", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:45:57 PM", "", "In Development",  0,16961)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Tamp_Pad_Length_User", "9635", "App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu", "App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:51:32 PM", "", "In Development",  0,17000)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu", "9636", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:28:15 PM", "", "In Development",  0,16956)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu", "9637", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:29:50 PM", "", "In Development",  0,16958)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Tamp_Pad_Length_User_UOM", "9634", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:22:27 PM", "", "In Development",  0,16948)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Type", "9606", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:41:28 PM", "", "In Development",  0,16878)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Applicator_Type_Tamp", "9609", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:46:14 PM", "", "In Development",  0,16888)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Print_Speed_IN", "9633", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:48:06 PM", "", "In Development",  0,16964)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Print_Speed_User", "9632", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:47:50 PM", "", "In Development",  0,16962)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Print_Speed_User_UOM", "9615", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 1:13:11 PM", "", "In Development",  0,16908)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Print_Time", "9613", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:56:12 PM", "", "In Development",  0,17004)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Printed_Length_IN", "9631", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:14:38 PM", "", "In Development",  0,16940)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Printed_Length_User", "9628", "App_Label_Printed_Length_User_Min_Value", "App_Label_Printed_Length_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:13:45 PM", "", "In Development",  0,16937)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Printed_Length_User_Max_Value", "9629", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:11:07 PM", "", "In Development",  0,16934)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Printed_Length_User_Min_Value", "9630", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:11:30 PM", "", "In Development",  0,16936)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Label_Printed_Length_User_UOM", "9614", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:05:09 PM", "", "In Development",  0,16904)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Max_Tamp_Stroke_Req_IN", "9654", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 3:17:48 PM", "", "In Development",  0,17016)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Max_Tamp_Stroke_Req_User", "9653", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 6:44:01 PM", "", "In Development",  0,17014)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Max_Tamp_Stroke_Req_User_UOM", "9621", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:06:55 PM", "", "In Development",  0,16919)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN", "9722", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:22:46 PM", "", "In Development",  0,17158)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User", "9721", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:21:42 PM", "", "In Development",  0,17156)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM", "9720", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:14:28 PM", "", "In Development",  0,17152)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN", "9786", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 12:25:36 PM", "", "In Development",  0,17271)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User", "9730", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 12:24:40 PM", "", "In Development",  0,17268)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM", "9729", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:49:47 PM", "", "In Development",  0,17176)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN", "9718", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:11:30 PM", "", "In Development",  0,17146)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User", "9656", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:05:47 PM", "", "In Development",  0,17138)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM", "9655", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 3:19:07 PM", "", "In Development",  0,17017)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Req_Compl_PandA_Cycle_IN", "9728", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:49:27 PM", "", "In Development",  0,17175)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Req_Compl_PandA_Cycle_User", "9724", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:48:48 PM", "", "In Development",  0,17173)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM", "9723", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:23:21 PM", "", "In Development",  0,17159)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Spacing_Avg_Carton_IN", "9789", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 1:10:42 PM", "", "In Development",  0,17281)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Spacing_Avg_Carton_User", "9788", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 1:10:09 PM", "", "In Development",  0,17279)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM", "9787", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 12:26:14 PM", "", "In Development",  0,17272)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Spacing_Largest_Carton_IN", "9719", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:13:47 PM", "", "In Development",  0,17151)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Spacing_Largest_Carton_User", "9717", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:13:17 PM", "", "In Development",  0,17149)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM", "9716", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 8:07:47 PM", "", "In Development",  0,17139)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Pitch_Btw_App_IN", "9650", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:49:55 PM", "", "In Development",  0,16996)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Pitch_Btw_App_User", "9647", "App_Min_Pitch_Btw_App_User_Min_Value", "App_Min_Pitch_Btw_App_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:49:04 PM", "", "In Development",  0,16989)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Pitch_Btw_App_User_Max_Value", "9649", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:48:51 PM", "", "In Development",  0,16994)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Pitch_Btw_App_User_Min_Value", "9648", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:48:42 PM", "", "In Development",  0,16993)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Min_Pitch_Btw_App_User_UOM", "9619", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:06:36 PM", "", "In Development",  0,16915)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Return_Stroke_Tamp_Clearance_IN", "9646", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:57:32 PM", "", "In Development",  0,16985)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Return_Stroke_Tamp_Clearance_User", "9643", "App_Return_Stroke_Tamp_Clearance_User_Min_Value", "App_Return_Stroke_Tamp_Clearance_User_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:53:34 PM", "", "In Development",  0,17001)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Return_Stroke_Tamp_Clearance_User_Max_Value", "9645", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:53:41 PM", "", "In Development",  0,17002)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Return_Stroke_Tamp_Clearance_User_Min_Value", "9644", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 2:53:47 PM", "", "In Development",  0,17003)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Return_Stroke_Tamp_Clearance_User_UOM", "9618", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:06:26 PM", "", "In Development",  0,16913)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Tamp_Cycle_Time_Pneumatic_Side_Apply", "9612", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 12:55:15 PM", "", "In Development",  0,16899)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Tamp_Home_Height_Above_Conveyor_IN", "9652", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 3:08:31 PM", "", "In Development",  0,17011)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Tamp_Home_Height_Above_Conveyor_User", "9651", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/14/2025 6:44:55 PM", "", "In Development",  0,17009)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("App_Tamp_Home_Height_Above_Conveyor_User_UOM", "9620", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/14/2025 1:06:47 PM", "", "In Development",  0,16917)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Min_Gap_Required_IN", "9567", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:16:25 PM", "", "In Development",  0,16677)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Min_Gap_Required_User", "9555", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 2:32:46 PM", "", "In Development",  0,16718)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Min_Gap_Required_User_UOM", "9552", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:06:24 PM", "", "In Development",  0,16658)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Required", "9550", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/12/2025 12:58:01 PM", "", "In Development",  0,16651)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN", "9572", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:20:46 PM", "", "In Development",  0,16686)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM", "9554", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:06:53 PM", "", "In Development",  0,16662)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User", "9571", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:57:30 PM", "", "In Development",  0,16715)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN", "9569", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:20:15 PM", "", "In Development",  0,16684)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM", "9553", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:06:40 PM", "", "In Development",  0,16660)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User", "9570", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:57:39 PM", "", "In Development",  0,16717)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Reject_Diverter_Type", "9551", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:01:04 PM", "", "In Development",  0,16655)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Gap_on_Max_Box_IN", "9847", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:07:17 PM", "", "In Development",  0,17467)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Gap_on_Max_Box_User", "9846", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:06:46 PM", "", "In Development",  0,17465)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Gap_on_Max_Box_User_UOM", "9836", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:46:45 PM", "", "In Development",  0,17423)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Gap_on_Min_Box_IN", "9845", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:05:36 PM", "", "In Development",  0,17462)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Gap_on_Min_Box_User", "9844", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:05:04 PM", "", "In Development",  0,17460)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Gap_on_Min_Box_User_UOM", "9835", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:46:34 PM", "", "In Development",  0,17421)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Head_to_Head_IN", "9843", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:01:51 PM", "", "In Development",  0,17456)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Head_to_Head_User", "9842", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:01:03 PM", "", "In Development",  0,17451)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Min_Head_to_Head_User_UOM", "9841", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:55:40 PM", "", "In Development",  0,17442)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_PandA_Scale_Required", "9829", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:22:07 PM", "", "In Development",  0,17405)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Bed_Length_IN", "9838", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:48:41 PM", "", "In Development",  0,17429)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Bed_Length_User", "9837", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 8:15:09 PM", "", "In Development",  0,17427)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Bed_Length_User_UOM", "9832", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:45:58 PM", "", "In Development",  0,17415)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Gap_Override_IN", "9840", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:55:17 PM", "", "In Development",  0,17441)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Gap_Override_User", "9839", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 8:15:20 PM", "", "In Development",  0,17432)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Gap_Override_User_UOM", "9833", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:46:14 PM", "", "In Development",  0,17417)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Scale_Type", "9830", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:22:54 PM", "", "In Development",  0,17409)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Scale_Spacing_Type", "9831", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:45:28 PM", "", "In Development",  0,17413)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Carton_Panels_Scanned_Quantity", "9792", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:12:37 PM", "", "In Development",  0,18256)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Carton_Presentation", "9794", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:17:23 PM", "", "In Development",  0,18262)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Distance_Last_Tamp__Scan_Window_IN", "9820", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:56:55 PM", "", "In Development",  0,17382)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value", "9818", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:53:12 PM", "", "In Development",  0,17374)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value", "9819", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:53:40 PM", "", "In Development",  0,17376)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Distance_Last_Tamp__Scan_Window_User", "9817", "Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value", "Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:56:21 PM", "", "In Development",  0,17378)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM", "9808", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:44:48 PM", "", "In Development",  0,17353)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Label_Orientation", "9793", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:15:18 PM", "", "In Development",  0,18259)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Max_Linear_Length_Carton_Scanned_IN", "9826", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:07:19 PM", "", "In Development",  0,17398)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Max_Linear_Length_Carton_Scanned_User", "9825", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:06:18 PM", "", "In Development",  0,17396)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM", "9810", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:45:03 PM", "", "In Development",  0,17357)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Min_Gap_Scan_Application_IN", "9813", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:48:50 PM", "", "In Development",  0,17366)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Min_Gap_Scan_Application_User", "9812", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:23:03 PM", "", "In Development",  0,18268)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Min_Gap_Scan_Application_User_UOM", "9806", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:44:26 PM", "", "In Development",  0,17349)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Min_Xmit_Point_FromScan_Window_IN", "9828", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:09:47 PM", "", "In Development",  0,17402)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Min_Xmit_Point_FromScan_Window_User", "9827", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:09:03 PM", "", "In Development",  0,17400)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM", "9811", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:45:13 PM", "", "In Development",  0,17359)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Percent_Max_Carton_Length_Scanned", "9805", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 7:55:39 PM", "", "In Development",  0,17347)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Percent_Max_Carton_Length_Scanned_User", "9804", "25", "100", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:42:12 PM", "", "In Development",  0,17341)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Rescan_Barcode_For_Verification", "9790", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 1:18:00 PM", "", "In Development",  0,17284)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Scan_Window_Length_Req_IN", "9815", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:50:37 PM", "", "In Development",  0,17370)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Scan_Window_Length_Req_User", "9814", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:37:34 PM", "", "In Development",  0,18289)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Scan_Window_Length_Req_User_UOM", "9807", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:44:40 PM", "", "In Development",  0,17351)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Scanner_Configuration", "9791", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:01:15 PM", "", "In Development",  0,18251)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Scanner_Data_Transmit_Mode", "9803", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:38:37 PM", "", "In Development",  0,17334)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Shadowing_Allowed", "9802", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:20:36 PM", "", "In Development",  0,18266)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Shadowing_Potential", "9799", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/16/2025 9:19:10 PM", "", "In Development",  0,18264)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Tracking_Photocell_Distance_IN", "9824", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:03:55 PM", "", "In Development",  0,17393)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Tracking_Photocell_Distance_Max_Value", "9822", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:59:34 PM", "", "In Development",  0,17385)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Tracking_Photocell_Distance_Min_Value", "9823", "", "", "N", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:00:41 PM", "", "In Development",  0,17388)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Tracking_Photocell_Distance_User", "9821", "Ver_Scan_Tracking_Photocell_Distance_Min_Value", "Ver_Scan_Tracking_Photocell_Distance_Max_Value", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 3:03:04 PM", "", "In Development",  0,17389)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Ver_Scan_Tracking_Photocell_Distance_User_UOM", "9809", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 2:44:55 PM", "", "In Development",  0,17355)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Caclucation_Errors_Present", "9869", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 8:25:19 PM", "", "In Development",  0,18235)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Caclucation_Warnings_Present", "9868", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 8:33:08 PM", "", "In Development",  0,17590)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Carton_Length_User", "9852", "0", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 4:27:01 PM", "", "In Development",  0,17488)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_H_to_H_Spacing_Limit_Set_By", "9866", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:54:48 PM", "", "In Development",  0,17582)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_H_to_H_Spacing_Req_IN", "9863", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:44:30 PM", "", "In Development",  0,17571)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_H_to_H_Spacing_Req_User", "9862", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:43:44 PM", "", "In Development",  0,17569)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_H_to_H_Spacing_Req_User_UOM", "9860", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:38:13 PM", "", "In Development",  0,17565)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_T_to_H_Gap_Limit_Set_By", "9867", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:58:18 PM", "", "In Development",  0,17588)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_T_to_H_Gap_Req_IN", "9865", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:52:12 PM", "", "In Development",  0,17577)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_T_to_H_Gap_Req_User", "9864", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:51:30 PM", "", "In Development",  0,17573)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Summary_Min_T_to_H_Gap_Req_User_UOM", "9861", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H602502", "7/15/2025 6:38:30 PM", "", "In Development",  0,17567)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Transnorm_TS4800_Control_Reaction_Time_Distance_IN", "9576", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:36:05 PM", "", "In Development",  0,16701)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Transnorm_TS4800_Divert_Angle", "9574", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:32:51 PM", "", "In Development",  0,16694)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Transnorm_TS4800_Divert_Shifting_Distance_IN", "9575", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:35:21 PM", "", "In Development",  0,16699)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Transnorm_TS4800_Encoder_Resolution_IN", "9577", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:37:32 PM", "", "In Development",  0,16704)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Transnorm_TS4800_Required_Gap_Max_Box", "9578", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/12/2025 1:38:48 PM", "", "In Development",  0,16707)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Debug_Mode", "9997", "", "", "Y", "N","N", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 4:00:43 PM", "True = Debug On / False = Debug Off", "In Development",  0,18159)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("XMLObjectName", "9998", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 4:03:44 PM", "XML Export Object Name", "In Development",  0,18168)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("XMLObjectType", "9999", "", "", "Y", "N","N", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 4:00:43 PM", "XML Export Object Type", "In Development",  0,18161)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("XMLObjectValue", "10000", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/16/2025 4:00:43 PM", "XML Export Object Value", "In Development",  0,18162)
        End If
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_ValidValues()
    Dim ctx as String
    ctx = ContextId
            If Incontext("-1", ctx) Then
          
        InitValidValue("User_UOM_System_ValidValues", "9392", "-1", 16116)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Acq_Label_Data_Acquisition_Method_ValidValues", "9533", "-1", 16576)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Acq_Label_Data_Acquisition_Travel_User_UOM_ValidValues", "9537", "-1", 16588)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Conv_Total_App_Belt_Length_Req_FT_User_UOM_ValidValues", "9582", "-1", 17136)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Conv_Total_App_Belt_Length_Req_IN_User_UOM_ValidValues", "9581", "-1", 16720)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Conv_Total_Solution_Length_FT_User_UOM_ValidValues", "9583", "-1", 17137)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_Accumulation_Zone_Length_User_ValidValues", "9402", "-1", 16283)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_Accumulation_Zone_Length_User_UOM_ValidValues", "9395", "-1", 16124)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_Belt_Speed_User_UOM_ValidValues", "9393", "-1", 16288)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_BM_Belt_Acc_Dec_Rate_User_UOM_ValidValues", "9396", "-1", 16292)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM_ValidValues", "9397", "-1", 16128)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_BM_Belt_Input_Speed_User_UOM_ValidValues", "9398", "-1", 16295)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_Conveyor_Type_ValidValues", "9415", "-1", 16157)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_Conveyor_Width_User_ValidValues", "9401", "-1", 16279)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_Conveyor_Width_User_UOM_ValidValues", "9394", "-1", 16122)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM_ValidValues", "9399", "-1", 16132)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Carton_Presentation_ValidValues", "9503", "-1", 16525)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM_ValidValues", "9522", "-1", 16517)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Label_Orientation_ValidValues", "9502", "-1", 16539)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Scan_App_Min_Gap_User_UOM_ValidValues", "9519", "-1", 16511)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Scan_Window_Length_Req_User_UOM_ValidValues", "9520", "-1", 16513)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Scanner_Config_ValidValues", "9500", "-1", 18273)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Scanner_Data_Transmit_Mode_ValidValues", "9506", "-1", 16532)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM_ValidValues", "9523", "-1", 16519)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Shadowing_Allowed_ValidValues", "9505", "-1", 16530)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Shadowing_Potential_ValidValues", "9504", "-1", 16527)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ind_Scan_Tracking_Photocell_Distance_User_UOM_ValidValues", "9521", "-1", 16515)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Height_Average_User_UOM_ValidValues", "9436", "-1", 16196)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Height_Maximum_User_UOM_ValidValues", "9435", "-1", 16194)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Height_Minimum_User_UOM_ValidValues", "9434", "-1", 16192)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Length_Average_User_UOM_ValidValues", "9421", "-1", 16172)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Length_Maximum_User_UOM_ValidValues", "9420", "-1", 16170)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Length_Minimum_User_UOM_ValidValues", "9419", "-1", 16168)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Use_Local_ValidValues", "9418", "-1", 16166)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Weight_Average_User_UOM_ValidValues", "9448", "-1", 16213)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Weight_Maximum_User_UOM_ValidValues", "9447", "-1", 16211)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Weight_Minimum_User_UOM_ValidValues", "9446", "-1", 16209)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Width_Average_User_UOM_ValidValues", "9427", "-1", 16184)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Width_Maximum_User_UOM_ValidValues", "9426", "-1", 16182)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("MTBH_Width_Minimum_User_UOM_ValidValues", "9425", "-1", 16180)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Carton_Stability_Length_User_UOM_ValidValues", "9878", "-1", 17613)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM_ValidValues", "9877", "-1", 17611)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM_ValidValues", "9880", "-1", 17617)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Induction_Scan_Window_Length_User_UOM_ValidValues", "9879", "-1", 17615)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Label_Data_Acq_Distance_App_1_User_UOM_ValidValues", "9881", "-1", 17619)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Label_Data_Acq_Distance_App_2_User_UOM_ValidValues", "9882", "-1", 17621)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM_ValidValues", "9885", "-1", 17627)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Min_Distance_Between_Applicator_1_2_User_UO_ValidValues", "9884", "-1", 17625)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Min_Distance_for_Printer_Setup_User_UOM_ValidValues", "9883", "-1", 17623)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Min_Distance_User_UOM_ValidValues", "9942", "-1", 18019)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_PandA_Belt_Exit_PE_Distance_User_UOM_ValidValues", "9890", "-1", 17637)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Total_Calc_Belt_Length_Double_FT_User_UOM_ValidValues", "9894", "-1", 17647)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Total_Calc_Belt_Length_Double_IN_User_UOM_ValidValues", "9892", "-1", 18238)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Total_Calc_Belt_Length_Single_FT_User_UOM_ValidValues", "9893", "-1", 17645)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Total_Calc_Belt_Length_Single_IN_User_UOM_ValidValues", "9891", "-1", 17639)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM_ValidValues", "9887", "-1", 17631)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Ver_Scan_Data_Capture_Window_Length_User_UO_ValidValues", "9889", "-1", 17635)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Verify_Scanner_Distance_to_Xmit_User_UOM_ValidValues", "9888", "-1", 17633)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Output_Verify_Scanner_Window_Length_User_UOM_ValidValues", "9886", "-1", 17629)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Down_Stroke_Tamp_Clearance_User_UOM_ValidValues", "9617", "-1", 16912)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Applicator_Quantity_ValidValues", "9607", "-1", 16881)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Applicator_Reason_For_Multiple_ValidValues", "9608", "-1", 16885)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Applicator_Tamp_Brush_Required_ValidValues", "9610", "-1", 16893)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Applicator_Tamp_Pad_Length_User_UOM_ValidValues", "9634", "-1", 16949)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Applicator_Type_ValidValues", "9606", "-1", 16879)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Applicator_Type_Tamp_ValidValues", "9609", "-1", 16889)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Print_Speed_User_ValidValues", "9632", "-1", 16963)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Print_Speed_User_UOM_ValidValues", "9615", "-1", 17282)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Label_Printed_Length_User_UOM_ValidValues", "9614", "-1", 16905)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Max_Tamp_Stroke_Req_User_UOM_ValidValues", "9621", "-1", 16920)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM_ValidValues", "9720", "-1", 17153)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM_ValidValues", "9729", "-1", 17177)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM_ValidValues", "9655", "-1", 17018)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM_ValidValues", "9723", "-1", 17160)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM_ValidValues", "9787", "-1", 17273)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM_ValidValues", "9716", "-1", 17140)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Min_Pitch_Btw_App_User_UOM_ValidValues", "9619", "-1", 16916)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Return_Stroke_Tamp_Clearance_User_UOM_ValidValues", "9618", "-1", 16914)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("App_Tamp_Home_Height_Above_Conveyor_User_UOM_ValidValues", "9620", "-1", 16918)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Reject_Diverter_Min_Gap_Required_User_UOM_ValidValues", "9552", "-1", 16659)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Reject_Diverter_Required_ValidValues", "9550", "-1", 16652)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM_ValidValues", "9554", "-1", 16663)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM_ValidValues", "9553", "-1", 16661)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Reject_Diverter_Type_ValidValues", "9551", "-1", 16656)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Min_Gap_on_Max_Box_User_UOM_ValidValues", "9836", "-1", 17424)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Min_Gap_on_Min_Box_User_UOM_ValidValues", "9835", "-1", 17422)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Min_Head_to_Head_User_UOM_ValidValues", "9841", "-1", 17443)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_PandA_Scale_Required_ValidValues", "9829", "-1", 17406)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Scale_Bed_Length_User_UOM_ValidValues", "9832", "-1", 17416)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Scale_Gap_Override_User_UOM_ValidValues", "9833", "-1", 17418)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Scale_Type_ValidValues", "9830", "-1", 17410)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Scale_Spacing_Type_ValidValues", "9831", "-1", 17414)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Carton_Presentation_ValidValues", "9794", "-1", 17302)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM_ValidValues", "9808", "-1", 17354)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Label_Orientation_ValidValues", "9793", "-1", 17297)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM_ValidValues", "9810", "-1", 17358)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Min_Gap_Scan_Application_User_UOM_ValidValues", "9806", "-1", 17350)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM_ValidValues", "9811", "-1", 17360)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Rescan_Barcode_For_Verification_ValidValues", "9790", "-1", 17285)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Scan_Window_Length_Req_User_UOM_ValidValues", "9807", "-1", 17352)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Scanner_Configuration_ValidValues", "9791", "-1", 18253)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Scanner_Data_Transmit_Mode_ValidValues", "9803", "-1", 17336)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Shadowing_Allowed_ValidValues", "9802", "-1", 17329)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Shadowing_Potential_ValidValues", "9799", "-1", 17322)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Ver_Scan_Tracking_Photocell_Distance_User_UOM_ValidValues", "9809", "-1", 17356)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Summary_Min_H_to_H_Spacing_Req_User_UOM_ValidValues", "9860", "-1", 17566)
        End If
            If Incontext("-1", ctx) Then
          
        InitValidValue("Summary_Min_T_to_H_Gap_Req_User_UOM_ValidValues", "9861", "-1", 17568)
        End If
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Subparts()
    Dim ctx as String
    ctx = ContextId
            If Incontext("-1", ctx) Then
          
        InitSubpart("PandA_Theoretical_Max_Throughput_Rate", 267, "", "", "Y", 0, "-1", "", "GLOBAL\H602502", "7/15/2025 4:24:44 PM", "", "In Development", "N",0,727,726)
        
          End If
        
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Connections()
    Dim ctx as String
    ctx = ContextId
            If Incontext("-1", ctx) Then
          
        InitConnection("My_EHS350_Data", "154", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/15/2025 12:02:48 PM", "", "In Development", "N",291)
        
          End If
        
            If Incontext("-1", ctx) Then
          
        InitConnection("My_PRD", "168", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/16/2025 1:04:12 PM", "", "In Development", "N",301)
        
          End If
        
            If Incontext("-1", ctx) Then
          
        InitConnection("Ind_Scan_My_Scan_Config", "177", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/16/2025 9:26:30 PM", "", "In Development", "N",323)
        
          End If
        
            If Incontext("-1", ctx) Then
          
        InitConnection("Ver_Scan_My_Scan_Config", "176", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/16/2025 9:03:13 PM", "", "In Development", "N",322)
        
          End If
        
            If Incontext("-1", ctx) Then
          
        InitConnection("My_Setup", "175", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/16/2025 7:08:38 PM", "", "In Development", "N",317)
        
          End If
        
            If Incontext("-1", ctx) Then
          
        InitConnection("MySource", "173", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/16/2025 4:00:43 PM", "Connection to the Value Provider Part Family Instance", "In Development", "Y",315)
        
          End If
        
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_DB()
    Dim ctx as String
    ctx = ContextId
    End Sub

    #End Region

    #Region " Formulas "

    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_My_EHS350_Data_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
        '   BEGIN FORMULA; CON ID:154; TYPE:PF
        Result = Me.Parent.EHS350_Data(Me.SubpartID)
        '   END FORMULA; CON ID:154; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_My_EHS350_Data_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_My_PRD_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
        '   BEGIN FORMULA; CON ID:168; TYPE:PF
        Result = me.Parent.Parent.Parent
        '   END FORMULA; CON ID:168; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_My_PRD_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_My_Scan_Config_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
        '   BEGIN FORMULA; CON ID:177; TYPE:PF
        Select Case Me.Parent.Scan_Configurations.Quantity
	Case 0
		Result = Nothing
	Case Else
		For Each part As Part In Me.Parent.Scan_Configurations
			If part.Properties("Configuration_Name").Value = me.Ind_Scan_Scanner_Config Then
				Result = part
				Exit For
			End If
		Next
End Select
        '   END FORMULA; CON ID:177; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_My_Scan_Config_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_My_Scan_Config_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
        '   BEGIN FORMULA; CON ID:176; TYPE:PF
        Select Case Me.Parent.Scan_Configurations.Quantity
	Case 0
		Result = Nothing
	Case Else
		For Each part As Part In Me.Parent.Scan_Configurations
			If part.Properties("Configuration_Name").Value = Me.Ver_Scan_Scanner_Configuration Then
				Result = part
				Exit For
			End If
		Next
End Select
        '   END FORMULA; CON ID:176; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_My_Scan_Config_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_My_Setup_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
        '   BEGIN FORMULA; CON ID:175; TYPE:PF
        Result = me.Parent.Setup(1)
        '   END FORMULA; CON ID:175; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_My_Setup_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MySource_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
          '   THIS FORMULA IS INHERITED. CHANGES TO THIS FORMULA WILL BREAK INHERITANCE.
        
        '   BEGIN FORMULA; CON ID:173; TYPE:PF
        Result = Nothing ' Set to Object that has the data you need to report on ' Me.Parent.HHS_Output(1)
        '   END FORMULA; CON ID:173; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MySource_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Brush_Length_Factor_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Brush_Length_Factor_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9658; TYPE:PF
      Select Case Me.App_Label_Applicator_Tamp_Brush_Required
	Case "Yes"
		Result = Me.App_Label_Printed_Length_IN + 3
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9658; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Brush_Length_Factor_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Customer_Date() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Customer_Date").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9960; TYPE:PF
      Result = Me.My_PRD(1).Proposal_Date
      '   END FORMULA; PROP ID:9960; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Customer_Date", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Customer_Location() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Customer_Location").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9958; TYPE:PF
      Result = Me.My_PRD(1).Proposal_City_State
      '   END FORMULA; PROP ID:9958; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Customer_Location", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Customer_Name() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Customer_Name").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9957; TYPE:PF
      Result = me.My_PRD(1).Proposal_Customer_Name
      '   END FORMULA; PROP ID:9957; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Customer_Name", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Customer_Proposal_Number() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Customer_Proposal_Number").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9959; TYPE:PF
      Result = Me.My_PRD(1).Proposal_ID
      '   END FORMULA; PROP ID:9959; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Customer_Proposal_Number", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Max_Pneumatic_Stroke_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Max_Pneumatic_Stroke_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9714; TYPE:PF
      Result = 0

If Me.App_Label_Applicator_Type_Tamp = "Pneumatic" AndAlso Me.App_Max_Tamp_Stroke_Req_IN > 30 Then
	Result = 30
Else
	Result = Me.App_Max_Tamp_Stroke_Req_IN
End If
      '   END FORMULA; PROP ID:9714; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Max_Pneumatic_Stroke_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9785; TYPE:PF
      Dim PandaBeltSpeed = Me.Gen_Belt_Speed_IN
Dim Home_Height_in = Me.App_Tamp_Home_Height_Above_Conveyor_IN
Dim PandAAvgBoxHeight = Me.MTBH_Height_Average_IN
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN
Dim PandaTampLength = Me.App_Label_Applicator_Tamp_Pad_Length_IN
Dim PandATampBrushLengthFactor = Me.Brush_Length_Factor_IN

Result = math.ceiling((((PandaBeltSpeed/5)*((Home_Height_in-PandAAvgBoxHeight)/20)) _ 
			+PandAPreposDwellDistance+PandaTampLength+PandATampBrushLengthFactor) * 10^1) / 10^1
      '   END FORMULA; PROP ID:9785; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9784; TYPE:PF
      Dim PandaBeltSpeed = Me.Gen_Belt_Speed_IN
Dim PandAAvgHeigthPrePosMoveTime = Me.My_EHS350_Data(1).EHS350_Tamp_Data_Avg_Height_Stroke_Prepos_Mv_Time
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN
Dim PandaTampLength = Me.App_Label_Applicator_Tamp_Pad_Length_IN
Dim PandATampBrushLengthFactor = Me.Brush_Length_Factor_IN

Result = math.ceiling((((PandaBeltSpeed/5)*PandAAvgHeigthPrePosMoveTime)+PandAPreposDwellDistance+PandaTampLength _
				+PandATampBrushLengthFactor) * 10^1) / 10^1
      '   END FORMULA; PROP ID:9784; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Pneumatic_Min_Head_to_Head_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Pneumatic_Min_Head_to_Head_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9727; TYPE:PF
      Dim PandaBeltSpeed = Me.Gen_Belt_Speed_IN
Dim PandAFixedPrintOverheadTime = Me.App_Label_Applicator_Fixed_Printer_Overhead
Dim Print_Time = me.My_EHS350_Data(1).EHS350_Tamp_Data_Print_Time
Dim S93 = Me.Max_Pneumatic_Stroke_IN
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN
Dim PandATampReturnClearMargin = Me.App_Return_Stroke_Tamp_Clearance_IN
Dim PandaTampLength = Me.App_Label_Applicator_Tamp_Pad_Length_IN
Dim PandATampBrushLengthFactor = Me.Brush_Length_Factor_IN


If Me.Max_Pneumatic_Stroke_IN > 10 Then
	Result = (((PandaBeltSpeed/5)*(PandAFixedPrintOverheadTime+Print_Time+(S93/10)))+PandAPreposDwellDistance _
				+PandATampReturnClearMargin+PandaTampLength+PandATampBrushLengthFactor)
Else
	Result = (((PandaBeltSpeed/5)*(PandAFixedPrintOverheadTime+Print_Time+(S93/30)))+PandAPreposDwellDistance _
				+PandATampReturnClearMargin+PandaTampLength+PandATampBrushLengthFactor)
End If
      '   END FORMULA; PROP ID:9727; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Pneumatic_Min_Head_to_Head_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Pneumatic_Tamp_Min_Gap_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Pneumatic_Tamp_Min_Gap_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9713; TYPE:PF
      Dim PandaBeltSpeed = Me.Gen_Belt_Speed_IN
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN
Dim PandaTampLength = Me.App_Label_Applicator_Tamp_Pad_Length_IN
Dim PandATampBrushLengthFactor = Me.Brush_Length_Factor_IN

Result = ((PandaBeltSpeed/5)*(Me.Max_Pneumatic_Stroke_IN/20))+PandaTampLength+PandATampBrushLengthFactor+PandAPreposDwellDistance
      '   END FORMULA; PROP ID:9713; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Pneumatic_Tamp_Min_Gap_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Servo_Min_Head_to_Head_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Servo_Min_Head_to_Head_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9725; TYPE:PF
      Dim PandaBeltSpeed = Me.Gen_Belt_Speed_IN
Dim PandAFixedPrintOverheadTime = Me.App_Label_Applicator_Fixed_Printer_Overhead
Dim Print_Time = Me.My_EHS350_Data(1).EHS350_Tamp_Data_Print_Time
Dim Full_Stroke_Prepos_Move_Time = Me.My_EHS350_Data(1).EHS350_Tamp_Data_Full_Stroke_Preposition_Move_Time
Dim Reg_Move_Time = me.My_EHS350_Data(1).EHS350_Tamp_Data_Reg_Move_Time
Dim Full_Stroke_Run_Home_Time = Me.My_EHS350_Data(1).EHS350_Tamp_Data_Full_Stroke_Run_Home_Time
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN
Dim PandATampReturnClearMargin = Me.App_Return_Stroke_Tamp_Clearance_IN
Dim PandaTampLength = Me.App_Label_Applicator_Tamp_Pad_Length_IN
Dim PandATampBrushLengthFactor = Me.Brush_Length_Factor_IN

Result = math.ceiling((((PandaBeltSpeed/5)*(PandAFixedPrintOverheadTime+Print_Time+Full_Stroke_Prepos_Move_Time+Reg_Move_Time _
			+Full_Stroke_Run_Home_Time))+PandAPreposDwellDistance+PandATampReturnClearMargin+PandaTampLength+PandATampBrushLengthFactor) * 10^1) / 10^1
      '   END FORMULA; PROP ID:9725; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Servo_Min_Head_to_Head_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Servo_Tamp_Min_Gap_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Servo_Tamp_Min_Gap_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9711; TYPE:PF
      Dim PandaBeltSpeed = Me.Gen_Belt_Speed_IN
Dim Full_Stroke_Prepos_Move_Time = Me.My_EHS350_Data(1).EHS350_Tamp_Data_Full_Stroke_Preposition_Move_Time
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN
Dim PandaTampLength = Me.App_Label_Applicator_Tamp_Pad_Length_IN
Dim PandATampBrushLengthFactor = Me.Brush_Length_Factor_IN

Result = Math.Ceiling((((PandaBeltSpeed/5)*Full_Stroke_Prepos_Move_Time)+PandAPreposDwellDistance+PandaTampLength+PandATampBrushLengthFactor) * (10^1)) / (10^1)
      '   END FORMULA; PROP ID:9711; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Servo_Tamp_Min_Gap_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_User_UOM_System() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("User_UOM_System").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9392; TYPE:PF
      Result = me.My_Setup(1).User_UOM_System
      '   END FORMULA; PROP ID:9392; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_User_UOM_System", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Acq_Label_Data_Acquisition_Method() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Label_Data_Acquisition_Method").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9533; TYPE:PF
      Result = "Real-Time Host Query"
      '   END FORMULA; PROP ID:9533; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Label_Data_Acquisition_Method", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Acq_Label_Data_Acquisition_Travel_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Label_Data_Acquisition_Travel_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9538; TYPE:PF
      Result = Units.Convert(Me.Acq_Label_Data_Acquisition_Travel_User, Me.Acq_Label_Data_Acquisition_Travel_User_UOM, "IN")
      '   END FORMULA; PROP ID:9538; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Label_Data_Acquisition_Travel_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Acq_Label_Data_Acquisition_Travel_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Label_Data_Acquisition_Travel_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9536; TYPE:PF
      Select Case Me.Acq_Label_Data_Acquisition_Method
	Case "Real-Time Host Query"
		Result = (Me.Gen_Belt_Speed_IN / 5) * Me.Acq_Max_Host_Resp_Time_Secs
	Case Else
		Result = (Me.Gen_Belt_Speed_IN / 5) * Me.Acq_Max_Local_Lookup_Time_Secs
End Select

If Me.Acq_Label_Data_Acquisition_Travel_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9536; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Label_Data_Acquisition_Travel_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Acq_Label_Data_Acquisition_Travel_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Label_Data_Acquisition_Travel_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9537; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9537; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Label_Data_Acquisition_Travel_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Acq_Max_Host_Resp_Time_Secs() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Max_Host_Resp_Time_Secs").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9534; TYPE:PF
      Select Case Me.Acq_Label_Data_Acquisition_Method
	Case "Real-Time Host Query"
		Result = 2
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9534; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Max_Host_Resp_Time_Secs", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Acq_Max_Local_Lookup_Time_Secs() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Max_Local_Lookup_Time_Secs").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9535; TYPE:PF
      Select Case Me.Acq_Label_Data_Acquisition_Method
	Case "Real-Time Host Query"
		Result = 0
	Case Else
		Result = 0.25
End Select
      '   END FORMULA; PROP ID:9535; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Max_Local_Lookup_Time_Secs", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_App_Belt_Length_Req_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9588; TYPE:PF
      Result = Units.Convert(Me.Conv_Total_App_Belt_Length_Req_FT_User, Me.Conv_Total_App_Belt_Length_Req_FT_User_UOM,"FT")
      '   END FORMULA; PROP ID:9588; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_FT_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9585; TYPE:PF
      Result = Me.Output_Total_Calc_Belt_Length_Single_FT_User
      '   END FORMULA; PROP ID:9585; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_FT_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9582; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT" Else Result = "M"
      '   END FORMULA; PROP ID:9582; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_FT_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_App_Belt_Length_Req_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9587; TYPE:PF
      Result = Units.Convert(Me.Conv_Total_App_Belt_Length_Req_IN_User, Me.Conv_Total_App_Belt_Length_Req_IN_User_UOM,"IN")
      '   END FORMULA; PROP ID:9587; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_IN_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9584; TYPE:PF
      Result = me.Output_Total_Calc_Belt_Length_Single_IN_User
      '   END FORMULA; PROP ID:9584; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_IN_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_IN_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9581; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9581; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_IN_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_Solution_Length_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_Solution_Length_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9589; TYPE:PF
      Result = Units.Convert(Me.Conv_Total_Solution_Length_FT_User, Me.Conv_Total_Solution_Length_FT_User_UOM,"FT")
      '   END FORMULA; PROP ID:9589; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_Solution_Length_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_Solution_Length_FT_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_Solution_Length_FT_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9586; TYPE:PF
      If Me.Gen_Conveyor_Type = "Standard B/M Belt"
	Result = (9+(Me.Gen_Accumulation_Zone_Quantity * Me.Gen_Accumulation_Zone_Length_IN)/12)+Me.Conv_Total_App_Belt_Length_Req_FT
Else
	Result = ((2*Me.Gen_Accumulation_Zone_Length_IN)/12+(Me.Gen_Accumulation_Zone_Quantity*Me.Gen_Accumulation_Zone_Length_IN)/12)+Me.Conv_Total_App_Belt_Length_Req_FT
End If

If Me.Conv_Total_Solution_Length_FT_User_UOM = "M" Then
	Result = Units.Convert(Result, "FT", "M")
End If
      '   END FORMULA; PROP ID:9586; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_Solution_Length_FT_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conv_Total_Solution_Length_FT_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_Solution_Length_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9583; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT" Else Result = "M"
      '   END FORMULA; PROP ID:9583; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_Solution_Length_FT_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Accumulation_Convey_Type_Pre_Panda() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Convey_Type_Pre_Panda").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9416; TYPE:PF
      Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
		Result = "I/Q or A/G"
	Case Else
		Result = "MDR"	
End Select
      '   END FORMULA; PROP ID:9416; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Convey_Type_Pre_Panda", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Accumulation_Zone_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Zone_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9409; TYPE:PF
      Result = Units.Convert(Me.Gen_Accumulation_Zone_Length_User, Me.Gen_Accumulation_Zone_Length_User_UOM,"IN")
      '   END FORMULA; PROP ID:9409; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Accumulation_Zone_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Zone_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9402; TYPE:PF
      Select Case Me.Gen_Accumulation_Zone_Length_User_UOM
	Case "IN"
		Result = 24
	Case Else
		Result = 624	
End Select
      '   END FORMULA; PROP ID:9402; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Accumulation_Zone_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Zone_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9395; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9395; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Accumulation_Zone_Quantity() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Zone_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9414; TYPE:PF
      Result = 8
      '   END FORMULA; PROP ID:9414; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Belt_Speed_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Belt_Speed_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9407; TYPE:PF
      Result = Units.Convert(Me.Gen_Belt_Speed_User, Me.Gen_Belt_Speed_User_UOM,"FT/MIN")
      '   END FORMULA; PROP ID:9407; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Belt_Speed_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Belt_Speed_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9400; TYPE:PF
      Select Case Me.Gen_Belt_Speed_User_UOM
	Case "FT/MIN"
		Result = 120
	Case Else
		Result = 0.61
End Select
      '   END FORMULA; PROP ID:9400; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Belt_Speed_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Belt_Speed_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9487; TYPE:PF
      Select Case Me.Gen_Belt_Speed_User_UOM
	Case "FT/MIN"
		Result = 180
	Case Else
		Result = 0.92
End Select
      '   END FORMULA; PROP ID:9487; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Belt_Speed_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Belt_Speed_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9488; TYPE:PF
      Select Case Me.Gen_Belt_Speed_User_UOM
	Case "FT/MIN"
		Result = 75
	Case Else
		Result = 0.38
End Select
      '   END FORMULA; PROP ID:9488; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Belt_Speed_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Belt_Speed_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9393; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT/MIN" Else Result = "M/SEC"
      '   END FORMULA; PROP ID:9393; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Acc_Dec_Rate_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9410; TYPE:PF
      Result = Units.Convert(Me.Gen_BM_Belt_Acc_Dec_Rate_User, Me.Gen_BM_Belt_Acc_Dec_Rate_User_UOM,"IN/SEC/SEC")
      '   END FORMULA; PROP ID:9410; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Acc_Dec_Rate_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9403; TYPE:PF
      Select Case Me.Gen_BM_Belt_Acc_Dec_Rate_User_UOM
	Case "IN/SEC/SEC"
		Result = 115
	Case Else
		Result = 2.92
End Select
      '   END FORMULA; PROP ID:9403; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9489; TYPE:PF
      Select Case Me.Gen_BM_Belt_Acc_Dec_Rate_User_UOM
	Case "IN/SEC/SEC"
		Result = 115
	Case Else
		Result = 2.92
End Select
      '   END FORMULA; PROP ID:9489; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9490; TYPE:PF
      Select Case Me.Gen_BM_Belt_Acc_Dec_Rate_User_UOM
	Case "IN/SEC/SEC"
		Result = 84
	Case Else
		Result = 2.13
End Select
      '   END FORMULA; PROP ID:9490; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Acc_Dec_Rate_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9396; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN/SEC/SEC" Else Result = "M/SEC/SEC"
      '   END FORMULA; PROP ID:9396; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9411; TYPE:PF
      Result = Units.Convert(Me.Gen_BM_Belt_Gap_Stop_Min_Carton_User, Me.Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM,"IN")
      '   END FORMULA; PROP ID:9411; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9404; TYPE:PF
      Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
		Result = ((((Me.Gen_Belt_Speed_User / 5) / Me.Gen_BM_Belt_Acc_Dec_Rate_User) / 2) * Me.Gen_Belt_Speed_User / 5)
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9404; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9397; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9397; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Input_Speed_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Input_Speed_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9412; TYPE:PF
      Result = Units.Convert(Me.Gen_BM_Belt_Input_Speed_User, Me.Gen_BM_Belt_Input_Speed_User_UOM,"FT/MIN")
      '   END FORMULA; PROP ID:9412; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Input_Speed_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Input_Speed_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Input_Speed_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9405; TYPE:PF
      Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
		Result = Me.Gen_Belt_Speed_User / Me.Gen_BM_Belt_PTO_Ratio
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9405; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Input_Speed_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Input_Speed_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Input_Speed_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9398; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT/MIN" Else Result = "M/SEC"
      '   END FORMULA; PROP ID:9398; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Input_Speed_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_PTO_Ratio() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_PTO_Ratio").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9417; TYPE:PF
      Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
Dim BMRatio As Double = 0
Dim TargetBMRatio As Double = Me.Gen_BM_Belt_PTO_Target_Ratio

If TargetBMRatio < 1.11 Then
	BMRatio = 1.10
ElseIf TargetBMRatio < 1.16 Then
	BMRatio = 1.15
ElseIf TargetBMRatio < 1.21 Then
	BMRatio = 1.20
ElseIf TargetBMRatio < 1.26 Then
	BMRatio = 1.25
ElseIf TargetBMRatio < 1.34 Then
	BMRatio = 1.33
ElseIf TargetBMRatio < 1.41 Then
	BMRatio = 1.40
ElseIf TargetBMRatio < 1.51 Then
	BMRatio = 1.50
ElseIf TargetBMRatio < 1.61 Then
	BMRatio = 1.60
ElseIf TargetBMRatio < 1.68 Then
	BMRatio = 1.67
ElseIf TargetBMRatio < 1.76 Then
	BMRatio = 1.75
ElseIf TargetBMRatio < 1.86 Then
	BMRatio = 1.85
ElseIf TargetBMRatio < 2.01 Then
	BMRatio = 2.00
ElseIf TargetBMRatio < 2.26 Then
	BMRatio = 2.25
ElseIf TargetBMRatio < 2.51 Then
	BMRatio = 2.50
Else
	BMRatio = 3.00	
End If

Result = BMRatio

Case Else
	Result = 1
End Select
      '   END FORMULA; PROP ID:9417; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_PTO_Ratio", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_PTO_Target_Ratio() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_PTO_Target_Ratio").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9477; TYPE:PF
      Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
		Result = Math.Max(((Me.MTBH_Length_Minimum_IN + Me.Gen_BM_Belt_Gap_Stop_Min_Carton_IN) / Me.MTBH_Length_Minimum_IN), 1.4)
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9477; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_PTO_Target_Ratio", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Conveyor_Type() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9415; TYPE:PF
      Result = "Standard B/M Belt"
      '   END FORMULA; PROP ID:9415; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Type", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Conveyor_Width_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Width_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9408; TYPE:PF
      Result = Units.Convert(Me.Gen_Conveyor_Width_User, Me.Gen_Conveyor_Width_User_UOM,"IN")
      '   END FORMULA; PROP ID:9408; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Width_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Conveyor_Width_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Width_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9401; TYPE:PF
      Select Case Me.Gen_Conveyor_Width_User_UOM
	Case "IN"
		Result = 28
	Case Else
		Result = 690
End Select
      '   END FORMULA; PROP ID:9401; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Width_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Conveyor_Width_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Width_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9394; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9394; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Width_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_MDR_Min_Gap_Throughput_Limit_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9413; TYPE:PF
      Result = Units.Convert(Me.Gen_MDR_Min_Gap_Throughput_Limit_User, Me.Gen_MDR_Min_Gap_Throughput_Limit_User_UOM,"IN")
      '   END FORMULA; PROP ID:9413; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_MDR_Min_Gap_Throughput_Limit_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_MDR_Min_Gap_Throughput_Limit_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9406; TYPE:PF
      Select Case Me.Gen_Conveyor_Type
	Case "2 - Belted MDR Zones"
		Result = Me.Gen_Accumulation_Zone_Length_User
	Case Else
		Result = 0	
End Select
      '   END FORMULA; PROP ID:9406; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_MDR_Min_Gap_Throughput_Limit_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9399; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9399; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Throughput_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Throughput_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9390; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9390; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Throughput_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Panels_Scanned_Quantity() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Panels_Scanned_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9501; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = 0
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).BoxPanelsScanned
End Select
      '   END FORMULA; PROP ID:9501; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Panels_Scanned_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Percent_Max_Length_Scanned").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9507; TYPE:PF
      Result = Ind_Scan_Carton_Percent_Max_Length_Scanned_User / 100
      '   END FORMULA; PROP ID:9507; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Percent_Max_Length_Scanned_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9508; TYPE:PF
      Result = 100
      '   END FORMULA; PROP ID:9508; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Presentation() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Presentation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9503; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = "Edge Aligned"
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).CartonPresentation
End Select
      '   END FORMULA; PROP ID:9503; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Presentation", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9513; TYPE:PF
      Result = Units.Convert(Me.Ind_Scan_Carton_Scanned_Max_Lin_Length_User, Me.Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM,"IN")
      '   END FORMULA; PROP ID:9513; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9517; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Data_Transmit_Mode
	Case "Trail Edge"
		Result = me.Ind_Scan_Carton_Percent_Max_Length_Scanned * Me.MTBH_Length_Maximum_User
	Case Else
		Result = Me.MTBH_Length_Maximum_User	
End Select
      '   END FORMULA; PROP ID:9517; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9522; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9522; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Label_Orientation() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Label_Orientation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9502; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = "Uni-Directional"
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).AppType
End Select
      '   END FORMULA; PROP ID:9502; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Label_Orientation", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scan_App_Min_Gap_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_App_Min_Gap_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9509; TYPE:PF
      Result = Units.Convert(Me.Ind_Scan_Scan_App_Min_Gap_User, Me.Ind_Scan_Scan_App_Min_Gap_User_UOM,"IN")
      '   END FORMULA; PROP ID:9509; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_App_Min_Gap_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_App_Min_Gap_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9510; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = 6.0
		If Me.Ind_Scan_Scan_App_Min_Gap_User_UOM = "MM" Then
			Result = Units.Convert(Result, "IN", "MM")
		End If
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).MinGapRequired_User
End Select
      '   END FORMULA; PROP ID:9510; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_App_Min_Gap_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_App_Min_Gap_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9519; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9519; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_App_Min_Gap_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scan_Window_Length_Req_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_Window_Length_Req_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9511; TYPE:PF
      Result = Units.Convert(Me.Ind_Scan_Scan_Window_Length_Req_User, Me.Ind_Scan_Scan_Window_Length_Req_User_UOM,"IN")
      '   END FORMULA; PROP ID:9511; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_Window_Length_Req_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_Window_Length_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9515; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = 5.0
		If Me.Ind_Scan_Scan_Window_Length_Req_User_UOM = "MM" Then
			Result = Units.Convert(Result, "IN", "MM")
		End If
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).ReadWindowSize_USER
End Select
      '   END FORMULA; PROP ID:9515; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_Window_Length_Req_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_Window_Length_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9520; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9520; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_Window_Length_Req_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scanner_Config() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Config").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9500; TYPE:PF
      Select Case Me.Parent.Scan_Configurations.Quantity
	Case 0
		Result = "None"
	Case Else
		Result = Me.Parent.Scan_Configurations(1).Configuration_Name
End Select
      '   END FORMULA; PROP ID:9500; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Config", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scanner_Data_Transmit_Mode() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Data_Transmit_Mode").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9506; TYPE:PF
      Result = "Lead Edge"
      '   END FORMULA; PROP ID:9506; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Data_Transmit_Mode", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Min_Xmit_Point_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9514; TYPE:PF
      Result = Units.Convert(Me.Ind_Scan_Scanner_Min_Xmit_Point_User, Me.Ind_Scan_Scanner_Min_Xmit_Point_User_UOM,"IN")
      '   END FORMULA; PROP ID:9514; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Min_Xmit_Point_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Min_Xmit_Point_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9518; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Data_Transmit_Mode
	Case "Trail Edge"
		Result = 4
	Case Else
		Result = Me.Ind_Scan_Carton_Scanned_Max_Lin_Length_User	
End Select
      '   END FORMULA; PROP ID:9518; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Min_Xmit_Point_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9523; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9523; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Shadowing_Allowed() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Shadowing_Allowed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9505; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Select Case Me.Ind_Scan_Shadowing_Potential
			Case "Yes"
				Result = "No"
			Case Else
				Result = ""
		End Select
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).ShadowingStatus
End Select
      '   END FORMULA; PROP ID:9505; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Shadowing_Allowed", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Shadowing_Potential() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Shadowing_Potential").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9504; TYPE:PF
      Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = "No"
	Case Else
		Result = Me.Ind_Scan_My_Scan_Config(1).ShadowingPotential
End Select
      '   END FORMULA; PROP ID:9504; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Shadowing_Potential", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Tracking_Photocell_Distance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9512; TYPE:PF
      Result = Units.Convert(Me.Ind_Scan_Tracking_Photocell_Distance_User, Me.Ind_Scan_Tracking_Photocell_Distance_User_UOM,"IN")
      '   END FORMULA; PROP ID:9512; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Tracking_Photocell_Distance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Tracking_Photocell_Distance_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9516; TYPE:PF
      Select Case Me.Ind_Scan_Tracking_Photocell_Distance_User_UOM
	Case "IN"
		Result = 2
	Case Else
		Result = 100
End Select
      '   END FORMULA; PROP ID:9516; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Tracking_Photocell_Distance_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_Max_Val() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Tracking_Photocell_Distance_User_Max_Val").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9530; TYPE:PF
      Result = Me.MTBH_Length_Minimum_User * (2/3)
      '   END FORMULA; PROP ID:9530; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Tracking_Photocell_Distance_User_Max_Val", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_Min_Val() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Tracking_Photocell_Distance_User_Min_Val").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9531; TYPE:PF
      Select Case Me.Ind_Scan_Tracking_Photocell_Distance_User_UOM
	Case "IN"
		Result = 2
	Case Else
		Result = 50.8
End Select
      '   END FORMULA; PROP ID:9531; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Tracking_Photocell_Distance_User_Min_Val", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Tracking_Photocell_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9521; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9521; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Tracking_Photocell_Distance_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MDR_RAT_Swivel_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MDR_RAT_Swivel_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9580; TYPE:PF
      Result = 35.69
      '   END FORMULA; PROP ID:9580; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MDR_RAT_Swivel_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Average_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Average_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9459; TYPE:PF
      Result = Units.Convert(Me.MTBH_Height_Average_User, Me.MTBH_Height_Average_User_UOM,"IN")
      '   END FORMULA; PROP ID:9459; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Average_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Average_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9442; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case Me.MTBH_Height_Average_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Height_Avg_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Height_Avg_MM
		End Select
	Case Else
		Result = (Me.MTBH_Height_Minimum_User + Me.MTBH_Height_Maximum_User) / 2
End Select
      '   END FORMULA; PROP ID:9442; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Average_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Average_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9436; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9436; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Average_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Maximum_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Maximum_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9458; TYPE:PF
      Result = Units.Convert(Me.MTBH_Height_Maximum_User, Me.MTBH_Height_Maximum_User_UOM,"IN")
      '   END FORMULA; PROP ID:9458; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Maximum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9441; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case Me.MTBH_Height_Maximum_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Height_Max_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Height_Max_MM
		End Select
	Case Else
		Select Case Me.MTBH_Height_Maximum_User_UOM
			Case "IN"
				Result = 10
			Case Else
				Result = 200
		End Select
End Select
      '   END FORMULA; PROP ID:9441; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Maximum_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Maximum_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9497; TYPE:PF
      Select Case Me.MTBH_Height_Maximum_User_UOM
	Case "IN"
		Result = 30
	Case Else
		Result = 762
End Select
      '   END FORMULA; PROP ID:9497; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Maximum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9435; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9435; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Minimum_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Minimum_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9457; TYPE:PF
      Result = Units.Convert(Me.MTBH_Height_Minimum_User, Me.MTBH_Height_Minimum_User_UOM,"IN")
      '   END FORMULA; PROP ID:9457; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Minimum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9440; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case Me.MTBH_Height_Minimum_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Height_Min_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Height_Min_MM
		End Select
	Case Else
		Select Case Me.MTBH_Height_Minimum_User_UOM
			Case "IN"
				Result = 10
			Case Else
				Result = 200
		End Select
End Select
      '   END FORMULA; PROP ID:9440; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Minimum_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Minimum_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9496; TYPE:PF
      Select Case Me.MTBH_Length_Minimum_User_UOM
	Case "IN"
		Result = 1
	Case Else
		Result = 25.4
End Select
      '   END FORMULA; PROP ID:9496; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Minimum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9434; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9434; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Average_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Average_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9452; TYPE:PF
      Result = Units.Convert(Me.MTBH_Length_Average_User, Me.MTBH_Length_Average_User_UOM,"IN")
      '   END FORMULA; PROP ID:9452; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Average_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Average_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9430; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case MTBH_Length_Average_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Length_Avg_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Length_Avg_MM
		End Select
	Case Else
		Result = (Me.MTBH_Length_Maximum_User + Me.MTBH_Length_Minimum_User) / 2
End Select
      '   END FORMULA; PROP ID:9430; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Average_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Average_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9421; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9421; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Average_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Maximum_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Maximum_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9451; TYPE:PF
      Result = Units.Convert(Me.MTBH_Length_Maximum_User, Me.MTBH_Length_Maximum_User_UOM,"IN")
      '   END FORMULA; PROP ID:9451; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Maximum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9429; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case MTBH_Length_Maximum_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Length_Max_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Length_Max_MM
		End Select
	Case Else
		Select Case Me.MTBH_Length_Maximum_User_UOM
			Case "IN"
				Result = 10
			Case Else
				Result = 200
		End Select
End Select
      '   END FORMULA; PROP ID:9429; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Maximum_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Maximum_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9493; TYPE:PF
      Select Case Me.MTBH_Length_Maximum_User_UOM
	Case "IN"
		Result = 60
	Case Else
		Result = 1524
End Select
      '   END FORMULA; PROP ID:9493; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Maximum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9420; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9420; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Minimum_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Minimum_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9450; TYPE:PF
      Result = Units.Convert(Me.MTBH_Length_Minimum_User, Me.MTBH_Length_Minimum_User_UOM,"IN")
      '   END FORMULA; PROP ID:9450; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Minimum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9428; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case MTBH_Length_Minimum_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Length_Min_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Length_Min_MM
		End Select
	Case Else
		Select Case Me.MTBH_Length_Minimum_User_UOM
			Case "IN"
				Result = 10
			Case Else
				Result = 200
		End Select
End Select
      '   END FORMULA; PROP ID:9428; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Minimum_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Minimum_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9492; TYPE:PF
      Select Case Me.MTBH_Length_Minimum_User_UOM
	Case "IN"
		Result = 4
	Case Else
		Result = 101.6
End Select
      '   END FORMULA; PROP ID:9492; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Minimum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9419; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9419; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Use_Local() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Use_Local").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9418; TYPE:PF
      Result = "Yes"
      '   END FORMULA; PROP ID:9418; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Use_Local", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Average_LBS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Average_LBS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9464; TYPE:PF
      Result = Units.Convert(Me.MTBH_Weight_Average_User, Me.MTBH_Weight_Average_User_UOM,"LB")
      '   END FORMULA; PROP ID:9464; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Average_LBS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Average_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9445; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case  Me.MTBH_Weight_Average_User_UOM
			Case "LB"
				Result = Me.My_Setup(1).BoxSize_Weight_Avg_LBS
			Case Else
				Result = Units.Convert(Me.My_Setup(1).BoxSize_Weight_Avg_LBS, "LB", "KG")
		End Select
	Case Else
		Result = (Me.MTBH_Weight_Maximum_User + Me.MTBH_Weight_Minimum_User) / 2
End Select
      '   END FORMULA; PROP ID:9445; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Average_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Average_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9448; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "LB" Else Result = "KG"
      '   END FORMULA; PROP ID:9448; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Average_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Maximum_LBS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Maximum_LBS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9462; TYPE:PF
      Result = Units.Convert(Me.MTBH_Weight_Maximum_User, Me.MTBH_Weight_Maximum_User_UOM,"LB")
      '   END FORMULA; PROP ID:9462; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_LBS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Maximum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9444; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case  Me.MTBH_Weight_Maximum_User_UOM
			Case "LB"
				Result = Me.My_Setup(1).BoxSize_Weight_Max_LBS
			Case Else
				Result = Units.Convert(Me.My_Setup(1).BoxSize_Weight_Max_LBS, "LB", "KG")
		End Select
	Case Else
		Select Case Me.MTBH_Weight_Maximum_User_UOM
			Case "LB"
				Result = 10
			Case Else
				Result = 30
		End Select
End Select
      '   END FORMULA; PROP ID:9444; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Maximum_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Maximum_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9499; TYPE:PF
      Select Case Me.MTBH_Length_Maximum_User_UOM
	Case "LB"
		Result = 120
	Case Else
		Result = 54.43
End Select
      '   END FORMULA; PROP ID:9499; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Maximum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9447; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "LB" Else Result = "KG"
      '   END FORMULA; PROP ID:9447; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Minimum_LBS() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Minimum_LBS").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9461; TYPE:PF
      Result = Units.Convert(Me.MTBH_Weight_Minimum_User, Me.MTBH_Weight_Minimum_User_UOM,"LB")
      '   END FORMULA; PROP ID:9461; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_LBS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Minimum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9443; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case  Me.MTBH_Weight_Minimum_User_UOM
			Case "LB"
				Result = Me.My_Setup(1).BoxSize_Weight_Min_LBS
			Case Else
				Result = Units.Convert(Me.My_Setup(1).BoxSize_Weight_Min_LBS, "LB", "KG")
		End Select
	Case Else
		Select Case Me.MTBH_Weight_Minimum_User_UOM
			Case "LB"
				Result = 10
			Case Else
				Result = 30
		End Select
End Select
      '   END FORMULA; PROP ID:9443; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Minimum_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Minimum_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9498; TYPE:PF
      Select Case Me.MTBH_Weight_Minimum_User_UOM
	Case "LB"
		Result = 0.5
	Case Else
		Result = 0.23
End Select
      '   END FORMULA; PROP ID:9498; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Minimum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9446; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "LB" Else Result = "KG"
      '   END FORMULA; PROP ID:9446; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Average_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Average_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9456; TYPE:PF
      Result = Units.Convert(Me.MTBH_Width_Average_User, Me.MTBH_Width_Average_User_UOM,"IN")
      '   END FORMULA; PROP ID:9456; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Average_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Average_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9439; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case Me.MTBH_Width_Average_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Width_Avg_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Width_Avg_MM
		End Select
	Case Else
		Result = (Me.MTBH_Width_Maximum_User + Me.MTBH_Width_Minimum_User) / 2
End Select
      '   END FORMULA; PROP ID:9439; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Average_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Average_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9427; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9427; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Average_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Maximum_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Maximum_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9455; TYPE:PF
      Result = Units.Convert(Me.MTBH_Width_Maximum_User, Me.MTBH_Width_Maximum_User_UOM,"IN")
      '   END FORMULA; PROP ID:9455; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Maximum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9438; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case Me.MTBH_Width_Maximum_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Width_Max_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Width_Max_MM
		End Select
	Case Else
		Select Case Me.MTBH_Width_Maximum_User_UOM
			Case "IN"
				Result = 10
			Case Else
				Result = 200
		End Select
End Select
      '   END FORMULA; PROP ID:9438; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Maximum_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Maximum_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9495; TYPE:PF
      Select Case Me.MTBH_Width_Maximum_User_UOM
	Case "IN"
		Result = 38
	Case Else
		Result = 965.2
End Select
      '   END FORMULA; PROP ID:9495; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Maximum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9426; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9426; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Minimum_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Minimum_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9454; TYPE:PF
      Result = Units.Convert(Me.MTBH_Width_Minimum_User, Me.MTBH_Width_Minimum_User_UOM,"IN")
      '   END FORMULA; PROP ID:9454; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Minimum_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9437; TYPE:PF
      Select Case Me.MTBH_Use_Local
	Case "No"
		Select Case MTBH_Width_Minimum_User_UOM
			Case "IN"
				Result = Me.My_Setup(1).BoxSize_Width_Min_IN
			Case Else
				Result = Me.My_Setup(1).BoxSize_Width_Min_MM
		End Select
	Case Else
		Select Case Me.MTBH_Width_Minimum_User_UOM
			Case "IN"
				Result = 10
			Case Else
				Result = 200
		End Select
End Select
      '   END FORMULA; PROP ID:9437; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Minimum_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Minimum_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9494; TYPE:PF
      Select Case Me.MTBH_Width_Minimum_User_UOM
	Case "IN"
		Result = 4
	Case Else
		Result = 101.6
End Select
      '   END FORMULA; PROP ID:9494; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Minimum_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9425; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9425; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Carton_Stability_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Carton_Stability_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9899; TYPE:PF
      Result = Units.Convert(Me.Output_Carton_Stability_Length_User, Me.Output_Carton_Stability_Length_User_UOM, "IN")
      '   END FORMULA; PROP ID:9899; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Carton_Stability_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Carton_Stability_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Carton_Stability_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9897; TYPE:PF
      Result = Me.Output_Induct_Max_Lgth_of_Carton_Scanned_User * (2/3)
      '   END FORMULA; PROP ID:9897; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Carton_Stability_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Carton_Stability_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Carton_Stability_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9878; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9878; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Carton_Stability_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9896; TYPE:PF
      Result = Units.Convert(Me.Output_Induct_Max_Lgth_of_Carton_Scanned_User, Me.Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM, "IN")
      '   END FORMULA; PROP ID:9896; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9895; TYPE:PF
      Result = Me.Ind_Scan_Carton_Scanned_Max_Lin_Length_User
      '   END FORMULA; PROP ID:9895; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9877; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9877; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9902; TYPE:PF
      Result = Units.Convert(Me.Output_Induct_Scan_Data_Cap_Window_Lgth_User, Me.Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM, "IN")
      '   END FORMULA; PROP ID:9902; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9901; TYPE:PF
      Result = me.Ind_Scan_Tracking_Photocell_Distance_User
      '   END FORMULA; PROP ID:9901; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9880; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9880; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induction_Scan_Window_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induction_Scan_Window_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9900; TYPE:PF
      Result = Units.Convert(Me.Output_Induction_Scan_Window_Length_User, Me.Output_Induction_Scan_Window_Length_User_UOM, "IN")
      '   END FORMULA; PROP ID:9900; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induction_Scan_Window_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induction_Scan_Window_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induction_Scan_Window_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9898; TYPE:PF
      Result = me.Ind_Scan_Scan_Window_Length_Req_User
      '   END FORMULA; PROP ID:9898; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induction_Scan_Window_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Induction_Scan_Window_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induction_Scan_Window_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9879; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9879; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induction_Scan_Window_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Label_Data_Acq_Distance_App_1_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_1_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9904; TYPE:PF
      Result = Units.Convert(Me.Output_Label_Data_Acq_Distance_App_1_User, Me.Output_Label_Data_Acq_Distance_App_1_User_UOM, "IN")
      '   END FORMULA; PROP ID:9904; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_1_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_1_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9903; TYPE:PF
      Result = me.Acq_Label_Data_Acquisition_Travel_User
      '   END FORMULA; PROP ID:9903; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_1_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_1_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9881; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9881; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_1_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Label_Data_Acq_Distance_App_2_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_2_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9906; TYPE:PF
      Result = Units.Convert(Me.Output_Label_Data_Acq_Distance_App_2_User, Me.Output_Label_Data_Acq_Distance_App_2_User_UOM, "IN")
      '   END FORMULA; PROP ID:9906; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_2_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_2_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9905; TYPE:PF
      If Me.App_Label_Applicator_Quantity > 1 Then
	Result = Me.Output_Label_Data_Acq_Distance_App_1_IN + me.Output_Min_Distance_Between_Applicator_1_2_IN
Else
	Result = 0
End If

If Me.Output_Label_Data_Acq_Distance_App_2_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9905; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_2_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_2_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9882; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9882; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_2_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9930; TYPE:PF
      Result = Units.Convert(Me.Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User, Me.Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM, "IN")
      '   END FORMULA; PROP ID:9930; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9929; TYPE:PF
      Result = me.Ver_Scan_Distance_Last_Tamp__Scan_Window_User
      '   END FORMULA; PROP ID:9929; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9885; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9885; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_Between_Applicator_1_2_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9928; TYPE:PF
      Result = Units.Convert(Me.Output_Min_Distance_Between_Applicator_1_2_User, Me.Output_Min_Distance_Between_Applicator_1_2_User_UO, "IN")
      '   END FORMULA; PROP ID:9928; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_Between_Applicator_1_2_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_Between_Applicator_1_2_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9927; TYPE:PF
      Result = me.App_Min_Pitch_Btw_App_User
      '   END FORMULA; PROP ID:9927; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_Between_Applicator_1_2_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User_UO() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_Between_Applicator_1_2_User_UO").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9884; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9884; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_Between_Applicator_1_2_User_UO", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_for_Printer_Setup_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_for_Printer_Setup_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9908; TYPE:PF
      Result = Units.Convert(Me.Output_Min_Distance_for_Printer_Setup_User, Me.Output_Min_Distance_for_Printer_Setup_User_UOM, "IN")
      '   END FORMULA; PROP ID:9908; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_for_Printer_Setup_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_for_Printer_Setup_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_for_Printer_Setup_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9907; TYPE:PF
      Result = math.ceiling(me.App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User)
      '   END FORMULA; PROP ID:9907; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_for_Printer_Setup_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_for_Printer_Setup_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_for_Printer_Setup_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9883; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9883; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_for_Printer_Setup_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9944; TYPE:PF
      Result = Units.Convert(Me.Output_Min_Distance_User, Me.Output_Min_Distance_User_UOM, "IN")
      '   END FORMULA; PROP ID:9944; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9943; TYPE:PF
      If Me.App_Label_Applicator_Quantity > 1 Then
	Result = Me.Output_Min_Distance_for_Printer_Setup_IN + me.Output_Min_Distance_Between_Applicator_1_2_IN
Else
	Result = Me.Output_Min_Distance_for_Printer_Setup_IN
End If

If Me.Output_Label_Data_Acq_Distance_App_2_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9943; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Min_Distance_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9942; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9942; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_PandA_Belt_Exit_PE_Distance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9940; TYPE:PF
      Result = Units.Convert(Me.Output_PandA_Belt_Exit_PE_Distance_User, Me.Output_PandA_Belt_Exit_PE_Distance_User_UOM, "IN")
      '   END FORMULA; PROP ID:9940; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_PandA_Belt_Exit_PE_Distance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_PandA_Belt_Exit_PE_Distance_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9939; TYPE:PF
      Result = math.ceiling(((Me.Gen_Belt_Speed_IN / 5) / 96) * (Me.Gen_Belt_Speed_IN / 5))

If Me.Output_PandA_Belt_Exit_PE_Distance_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9939; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_PandA_Belt_Exit_PE_Distance_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_PandA_Belt_Exit_PE_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9890; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9890; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_PandA_Belt_Exit_PE_Distance_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9956; TYPE:PF
      Result = Units.Convert(Me.Output_Total_Calc_Belt_Length_Double_FT_User, Me.Output_Total_Calc_Belt_Length_Double_FT_User_UOM, "FT")
      '   END FORMULA; PROP ID:9956; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_FT_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9955; TYPE:PF
      Result = (Me.Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN _
		+ Me.Output_Verify_Scanner_Window_Length_IN _
		+ Me.Output_Ver_Max_Length_of_Carton_Scanned_IN _
		+ Me.Output_Ver_Scan_Data_Capture_Window_Length_IN _
		+ Me.Output_PandA_Belt_Exit_PE_Distance_IN _
		+ Me.Output_Min_Distance_IN) / 12

If Me.Output_Total_Calc_Belt_Length_Double_IN_User_UOM = "M" Then
	Result = Units.Convert(Result, "FT", "M")
End If
      '   END FORMULA; PROP ID:9955; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_FT_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9894; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT" Else Result = "M"
      '   END FORMULA; PROP ID:9894; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_FT_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9954; TYPE:PF
      Result = Units.Convert(Me.Output_Total_Calc_Belt_Length_Double_IN_User, Me.Output_Total_Calc_Belt_Length_Double_IN_User_UOM, "IN")
      '   END FORMULA; PROP ID:9954; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_IN_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9948; TYPE:PF
      Result = (Me.Output_Induct_Max_Lgth_of_Carton_Scanned_IN _
		+ Me.Output_Carton_Stability_Length_IN _
		+ Me.Output_Induction_Scan_Window_Length_IN _
		+ Me.Output_Induct_Scan_Data_Cap_Window_Lgth_IN _
		+ Me.Output_Label_Data_Acq_Distance_App_1_IN _
		+ Me.Output_PandA_Belt_Exit_PE_Distance_IN) / 12

If Me.Output_Total_Calc_Belt_Length_Double_IN_User_UOM = "M" Then
	Result = Units.Convert(Result, "FT", "M")
End If
      '   END FORMULA; PROP ID:9948; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_IN_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_IN_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9892; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT" Else Result = "M"
      '   END FORMULA; PROP ID:9892; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_IN_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_FT").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9947; TYPE:PF
      Result = Units.Convert(Me.Output_Total_Calc_Belt_Length_Single_FT_User, Me.Output_Total_Calc_Belt_Length_Single_FT_User_UOM, "FT")
      '   END FORMULA; PROP ID:9947; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_FT", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_FT_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9946; TYPE:PF
      Result = Output_Total_Calc_Belt_Length_Single_IN / 12

If Me.Output_Total_Calc_Belt_Length_Single_IN_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9946; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_FT_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9893; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "FT" Else Result = "M"
      '   END FORMULA; PROP ID:9893; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_FT_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9945; TYPE:PF
      Result = Units.Convert(Me.Output_Total_Calc_Belt_Length_Single_IN_User, Me.Output_Total_Calc_Belt_Length_Single_IN_User_UOM, "IN")
      '   END FORMULA; PROP ID:9945; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_IN_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9941; TYPE:PF
      Result = Me.Output_Carton_Stability_Length_IN _
		+ Me.Output_Induction_Scan_Window_Length_IN _
		+ Me.Output_Induct_Scan_Data_Cap_Window_Lgth_IN _
		+ Me.Output_Induct_Max_Lgth_of_Carton_Scanned_IN _
		+ Me.Output_Label_Data_Acq_Distance_App_1_IN _
		+ Me.Output_Min_Distance_IN _
		+ Me.Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN _
		+ Me.Output_Verify_Scanner_Window_Length_IN _
		+ Me.Output_Ver_Max_Length_of_Carton_Scanned_IN _
		+ Me.Output_Ver_Scan_Data_Capture_Window_Length_IN _
		+ Me.Output_PandA_Belt_Exit_PE_Distance_IN

If Me.Output_Total_Calc_Belt_Length_Single_IN_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9941; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_IN_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_IN_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9891; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9891; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_IN_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Max_Length_of_Carton_Scanned_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9934; TYPE:PF
      Result = Units.Convert(Me.Output_Ver_Max_Length_of_Carton_Scanned_User, Me.Output_Ver_Max_Length_of_Carton_Scanned_User_UOM, "IN")
      '   END FORMULA; PROP ID:9934; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Max_Length_of_Carton_Scanned_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Max_Length_of_Carton_Scanned_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9933; TYPE:PF
      Result = me.Ver_Scan_Max_Linear_Length_Carton_Scanned_User
      '   END FORMULA; PROP ID:9933; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Max_Length_of_Carton_Scanned_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9887; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9887; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Scan_Data_Capture_Window_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9938; TYPE:PF
      Result = Units.Convert(Me.Output_Ver_Scan_Data_Capture_Window_Length_User, Me.Output_Ver_Scan_Data_Capture_Window_Length_User_UO, "IN")
      '   END FORMULA; PROP ID:9938; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Scan_Data_Capture_Window_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Scan_Data_Capture_Window_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9937; TYPE:PF
      Result = me.Ver_Scan_Tracking_Photocell_Distance_User
      '   END FORMULA; PROP ID:9937; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Scan_Data_Capture_Window_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_UO() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Scan_Data_Capture_Window_Length_User_UO").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9889; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9889; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_UO", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Distance_to_Xmit_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9936; TYPE:PF
      Result = Units.Convert(Me.Output_Verify_Scanner_Distance_to_Xmit_User, Me.Output_Verify_Scanner_Distance_to_Xmit_User_UOM, "IN")
      '   END FORMULA; PROP ID:9936; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Distance_to_Xmit_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Distance_to_Xmit_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9935; TYPE:PF
      Result = me.Ver_Scan_Min_Xmit_Point_FromScan_Window_User
      '   END FORMULA; PROP ID:9935; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Distance_to_Xmit_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Distance_to_Xmit_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9888; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9888; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Distance_to_Xmit_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Verify_Scanner_Window_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Window_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9932; TYPE:PF
      Result = Units.Convert(Me.Output_Verify_Scanner_Window_Length_User, Me.Output_Verify_Scanner_Window_Length_User_UOM, "IN")
      '   END FORMULA; PROP ID:9932; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Window_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Verify_Scanner_Window_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Window_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9931; TYPE:PF
      Result = me.Ver_Scan_Scan_Window_Length_Req_User
      '   END FORMULA; PROP ID:9931; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Window_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Output_Verify_Scanner_Window_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Window_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9886; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9886; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Window_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Down_Stroke_Tamp_Clearance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Down_Stroke_Tamp_Clearance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9642; TYPE:PF
      Result = Units.Convert(Me.App_Down_Stroke_Tamp_Clearance_User, Me.App_Down_Stroke_Tamp_Clearance_User_UOM,"IN")
      '   END FORMULA; PROP ID:9642; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Down_Stroke_Tamp_Clearance_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Down_Stroke_Tamp_Clearance_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9639; TYPE:PF
      Select Case Me.App_Down_Stroke_Tamp_Clearance_User_UOM
	Case "IN"
		Result = 2
	Case Else
		Result = 50.8
End Select
      '   END FORMULA; PROP ID:9639; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Down_Stroke_Tamp_Clearance_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9641; TYPE:PF
      Select Case Me.App_Down_Stroke_Tamp_Clearance_User_UOM
	Case "IN"
		Result = 8
	Case Else
		Result = 203.2
End Select
      '   END FORMULA; PROP ID:9641; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Down_Stroke_Tamp_Clearance_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9640; TYPE:PF
      Select Case Me.App_Down_Stroke_Tamp_Clearance_User_UOM
	Case "IN"
		Result = 2
	Case Else
		Result = 50.8
End Select
      '   END FORMULA; PROP ID:9640; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Down_Stroke_Tamp_Clearance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9617; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9617; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Fixed_Printer_Overhead() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Fixed_Printer_Overhead").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9611; TYPE:PF
      Result = 0.125
      '   END FORMULA; PROP ID:9611; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Fixed_Printer_Overhead", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Quantity() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9607; TYPE:PF
      Result = 1
      '   END FORMULA; PROP ID:9607; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Reason_For_Multiple() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Reason_For_Multiple").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9608; TYPE:PF
      Result = "Redundancy"
      '   END FORMULA; PROP ID:9608; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Reason_For_Multiple", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Brush_Required() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Brush_Required").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9610; TYPE:PF
      Result = "No"
      '   END FORMULA; PROP ID:9610; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Brush_Required", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Pad_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9638; TYPE:PF
      Result = Units.Convert(Me.App_Label_Applicator_Tamp_Pad_Length_User, Me.App_Label_Applicator_Tamp_Pad_Length_User_UOM,"IN")
      '   END FORMULA; PROP ID:9638; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Pad_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9635; TYPE:PF
      Result = Me.App_Label_Printed_Length_IN + 1

If Me.App_Label_Applicator_Tamp_Pad_Length_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
end if
      '   END FORMULA; PROP ID:9635; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9636; TYPE:PF
      Select Case Me.App_Label_Applicator_Tamp_Pad_Length_User_UOM
	Case "IN"
		Result = 9
	Case Else
		Result = 228
End Select
      '   END FORMULA; PROP ID:9636; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9637; TYPE:PF
      Result = Me.App_Label_Printed_Length_IN + 1

If Me.App_Label_Applicator_Tamp_Pad_Length_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9637; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Pad_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9634; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9634; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Type() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9606; TYPE:PF
      Result = "Top Apply"
      '   END FORMULA; PROP ID:9606; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Type", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Type_Tamp() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Type_Tamp").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9609; TYPE:PF
      Result = "Electric Servo"
      '   END FORMULA; PROP ID:9609; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Type_Tamp", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Print_Speed_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Print_Speed_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9633; TYPE:PF
      Result = Units.Convert(Me.App_Label_Print_Speed_User, Me.App_Label_Print_Speed_User_UOM,"IN/SEC")
      '   END FORMULA; PROP ID:9633; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Speed_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Print_Speed_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Print_Speed_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9632; TYPE:PF
      Select Case Me.App_Label_Print_Speed_User_UOM
	Case "IN/SEC"
		Result = 8
	Case Else
		Result = 203.2
End Select
      '   END FORMULA; PROP ID:9632; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Speed_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Print_Speed_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Print_Speed_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9615; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN/SEC" Else Result = "MM/SEC"
      '   END FORMULA; PROP ID:9615; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Speed_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Print_Time() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Print_Time").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9613; TYPE:PF
      Result = Me.App_Label_Printed_Length_IN / me.App_Label_Print_Speed_IN
      '   END FORMULA; PROP ID:9613; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Time", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Printed_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Printed_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9631; TYPE:PF
      Result = Units.Convert(Me.App_Label_Printed_Length_User, Me.App_Label_Printed_Length_User_UOM,"IN")
      '   END FORMULA; PROP ID:9631; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Printed_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Printed_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9628; TYPE:PF
      Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = 6
	Case Else
		Result = 152.4
End Select
      '   END FORMULA; PROP ID:9628; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Printed_Length_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Printed_Length_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9629; TYPE:PF
      Select Case App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = 8
	Case Else
		Result = 203.2
End Select
      '   END FORMULA; PROP ID:9629; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Printed_Length_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Printed_Length_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9630; TYPE:PF
      Select Case App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = 1.5
	Case Else
		Result = 38.1
End Select
      '   END FORMULA; PROP ID:9630; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Printed_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Printed_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9614; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9614; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Max_Tamp_Stroke_Req_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Max_Tamp_Stroke_Req_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9654; TYPE:PF
      Result = Units.Convert(Me.App_Max_Tamp_Stroke_Req_User, Me.App_Max_Tamp_Stroke_Req_User_UOM,"IN")
      '   END FORMULA; PROP ID:9654; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Max_Tamp_Stroke_Req_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Max_Tamp_Stroke_Req_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Max_Tamp_Stroke_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9653; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Result = (Me.MTBH_Height_Maximum_IN - me.MTBH_Height_Minimum_IN) + 2
	Case Else
		Result = 4
End Select

If Me.App_Max_Tamp_Stroke_Req_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9653; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Max_Tamp_Stroke_Req_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Max_Tamp_Stroke_Req_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Max_Tamp_Stroke_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9621; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9621; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Max_Tamp_Stroke_Req_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9722; TYPE:PF
      Result = Units.Convert(Me.App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User, Me.App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM,"IN")
      '   END FORMULA; PROP ID:9722; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9721; TYPE:PF
      Dim PandaBeltSpeed = me.Gen_Belt_Speed_IN
Dim PandaPrintTime = Me.App_Label_Print_Time
Dim PandAFixedPrintOverheadTime = Me.App_Label_Applicator_Fixed_Printer_Overhead
Dim PandAMinTampClearGap = Me.App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN
Dim PandAPreposDwellDistance = Me.App_Down_Stroke_Tamp_Clearance_IN

Select Case Me.App_Label_Applicator_Type
	Case "Side Apply"
		Result = (((PandaBeltSpeed/5)*(PandaPrintTime+PandAFixedPrintOverheadTime))+PandAMinTampClearGap)
	Case Else
		Result = ((((PandaBeltSpeed/5)*(PandaPrintTime+PandAFixedPrintOverheadTime))+PandAPreposDwellDistance+PandAMinTampClearGap))
End Select

Result = math.ceiling(Result * 10^1) / 10^1

If Me.App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9721; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9720; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9720; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9786; TYPE:PF
      Result = Units.Convert(Me.App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User, Me.App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM,"IN")
      '   END FORMULA; PROP ID:9786; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9730; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Select Case Me.App_Label_Applicator_Type_Tamp
			Case "Electric Servo"
				Result = Me.Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo
			Case Else
				Result = Me.Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic
		End Select
	Case Else
		Result = 0
End Select

If Me.App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9730; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9729; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9729; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9718; TYPE:PF
      Result = Units.Convert(Me.App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User, Me.App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM,"IN")
      '   END FORMULA; PROP ID:9718; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9656; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Select Case Me.App_Label_Applicator_Type_Tamp
			Case "Electric Servo"
				Result = Me.Servo_Tamp_Min_Gap_IN
			Case Else
				Result = Me.Pneumatic_Tamp_Min_Gap_IN
		End Select
	Case Else
		Result = 4
End Select
	
If Me.App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
end if
      '   END FORMULA; PROP ID:9656; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9655; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9655; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9728; TYPE:PF
      Result = Units.Convert(Me.App_Min_H_to_H_Req_Compl_PandA_Cycle_User, Me.App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM,"IN")
      '   END FORMULA; PROP ID:9728; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9724; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Side Apply"
		Result = (Me.Gen_Belt_Speed_IN / 5) * (Me.Brush_Length_Factor_IN + Me.Pneumatic_Tamp_Min_Gap_IN + Me.Servo_Tamp_Min_Gap_IN)
	Case Else
		Select Case Me.App_Label_Applicator_Type_Tamp
			Case "Electric Servo"
				Result = Me.Servo_Min_Head_to_Head_IN
			Case Else
				Result = Me.Pneumatic_Min_Head_to_Head_IN
		End Select
End Select

If Me.App_Min_H_to_H_Spacing_Largest_Carton_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9724; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9723; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9723; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Avg_Carton_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9789; TYPE:PF
      Result = Units.Convert(Me.App_Min_H_to_H_Spacing_Avg_Carton_User, Me.App_Min_H_to_H_Spacing_Avg_Carton_User_UOM,"IN")
      '   END FORMULA; PROP ID:9789; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Avg_Carton_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Avg_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9788; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Result = (Me.App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN + Me.MTBH_Length_Average_IN)
	Case Else
		Result = 0
End Select

If Me.App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9788; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Avg_Carton_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9787; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9787; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Largest_Carton_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9719; TYPE:PF
      Result = Units.Convert(Me.App_Min_H_to_H_Spacing_Largest_Carton_User, Me.App_Min_H_to_H_Spacing_Largest_Carton_User_UOM,"IN")
      '   END FORMULA; PROP ID:9719; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Largest_Carton_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Largest_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9717; TYPE:PF
      Result = math.ceiling((Me.App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN + Me.MTBH_Length_Maximum_IN) * 10^1) / (10^1)

If Me.App_Min_H_to_H_Spacing_Largest_Carton_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9717; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Largest_Carton_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9716; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9716; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Pitch_Btw_App_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Pitch_Btw_App_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9650; TYPE:PF
      Result = Units.Convert(Me.App_Min_Pitch_Btw_App_User, Me.App_Min_Pitch_Btw_App_User_UOM,"IN")
      '   END FORMULA; PROP ID:9650; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Pitch_Btw_App_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Pitch_Btw_App_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9647; TYPE:PF
      Select Case Me.App_Min_Pitch_Btw_App_User_UOM
	Case "IN"
		Result = 36
	Case Else
		Result = 914.4
End Select
      '   END FORMULA; PROP ID:9647; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Pitch_Btw_App_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Pitch_Btw_App_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9649; TYPE:PF
      Select Case App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = 60
	Case Else
		Result = 1524
End Select
      '   END FORMULA; PROP ID:9649; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Pitch_Btw_App_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Pitch_Btw_App_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9648; TYPE:PF
      Select Case App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = 36
	Case Else
		Result = 914.4
End Select
      '   END FORMULA; PROP ID:9648; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Pitch_Btw_App_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Pitch_Btw_App_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9619; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9619; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Return_Stroke_Tamp_Clearance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Return_Stroke_Tamp_Clearance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9646; TYPE:PF
      Result = Units.Convert(Me.App_Return_Stroke_Tamp_Clearance_User, Me.App_Return_Stroke_Tamp_Clearance_User_UOM,"IN")
      '   END FORMULA; PROP ID:9646; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Return_Stroke_Tamp_Clearance_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Return_Stroke_Tamp_Clearance_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9643; TYPE:PF
      Select Case Me.App_Return_Stroke_Tamp_Clearance_User_UOM
	Case "IN"
		Result = 0
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9643; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Return_Stroke_Tamp_Clearance_User_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9645; TYPE:PF
      Select Case App_Return_Stroke_Tamp_Clearance_User_UOM
	Case "IN"
		Result = 4
	Case Else
		Result = 101.6
End Select
      '   END FORMULA; PROP ID:9645; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_User_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Return_Stroke_Tamp_Clearance_User_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9644; TYPE:PF
      Select Case App_Return_Stroke_Tamp_Clearance_User_UOM
	Case "IN"
		Result = 0
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9644; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_User_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Return_Stroke_Tamp_Clearance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9618; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9618; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Tamp_Cycle_Time_Pneumatic_Side_Apply").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9612; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Side Apply"
		Result = 0.400
	Case Else
		Result = 0
End Select
      '   END FORMULA; PROP ID:9612; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Tamp_Home_Height_Above_Conveyor_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9652; TYPE:PF
      Result = Units.Convert(Me.App_Tamp_Home_Height_Above_Conveyor_User, Me.App_Tamp_Home_Height_Above_Conveyor_User_UOM,"IN")
      '   END FORMULA; PROP ID:9652; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Home_Height_Above_Conveyor_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Tamp_Home_Height_Above_Conveyor_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9651; TYPE:PF
      Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Result = Me.MTBH_Height_Maximum_IN + 2
	Case Else
		Result = 0
End Select

If Me.App_Tamp_Home_Height_Above_Conveyor_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9651; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Home_Height_Above_Conveyor_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Tamp_Home_Height_Above_Conveyor_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9620; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9620; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Home_Height_Above_Conveyor_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Min_Gap_Required_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Min_Gap_Required_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9567; TYPE:PF
      Result = Units.Convert(Me.Reject_Diverter_Min_Gap_Required_User, Me.Reject_Diverter_Min_Gap_Required_User_UOM,"IN")
      '   END FORMULA; PROP ID:9567; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Min_Gap_Required_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Min_Gap_Required_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Min_Gap_Required_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9555; TYPE:PF
      Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Select Case Me.Reject_Diverter_Type
			Case "WD Pop-Up Wheel"
				Result = 18
			Case "Transnorm TS4800 30deg"
				Result = Me.Transnorm_TS4800_Required_Gap_Max_Box
			Case Else
				Result = Me.Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN - Me.MTBH_Length_Average_IN
		End Select
	Case Else
		Result = 0
End Select

If Me.Reject_Diverter_Min_Gap_Required_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", Me.Reject_Diverter_Min_Gap_Required_User_UOM)
End If
      '   END FORMULA; PROP ID:9555; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Min_Gap_Required_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Min_Gap_Required_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Min_Gap_Required_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9552; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9552; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Min_Gap_Required_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Required() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Required").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9550; TYPE:PF
      Result = "Yes"
      '   END FORMULA; PROP ID:9550; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Required", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9572; TYPE:PF
      Result = Units.Convert(Me.Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User, Me.Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM,"IN")
      '   END FORMULA; PROP ID:9572; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9554; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9554; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9571; TYPE:PF
      Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Select Case Me.Reject_Diverter_Type
			Case "WD Pop-Up Wheel", "Transnorm TS4800 30deg"
				Result = Me.Reject_Diverter_Min_Gap_Required_IN + Me.MTBH_Length_Average_IN
			Case "MDR RAT"
				Result = 0 '''Needs MDR info
			Case Else
				Result = 0 '''Needs MDR info
		End Select
	Case Else
		Result = 0
End Select

If Me.Reject_Diverter_Min_Gap_Required_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9571; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9569; TYPE:PF
      Result = Units.Convert(Me.Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User, Me.Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM,"IN")
      '   END FORMULA; PROP ID:9569; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9553; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9553; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9570; TYPE:PF
      Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Select Case Me.Reject_Diverter_Type
			Case "WD Pop-Up Wheel", "Transnorm TS4800 30deg"
				Result = Me.Reject_Diverter_Min_Gap_Required_IN + Me.MTBH_Length_Maximum_IN
			Case "MDR RAT"
				Result = 0 '''Needs MDR info
			Case Else
				Result = 0 '''Needs MDR info
		End Select
	Case Else
		Result = 0
End Select

If Me.Reject_Diverter_Min_Gap_Required_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9570; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Reject_Diverter_Type() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9551; TYPE:PF
      Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Result = "WD Pop-Up Wheel"
	Case Else
		Result = ""
End Select
      '   END FORMULA; PROP ID:9551; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Type", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Gap_on_Max_Box_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Max_Box_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9847; TYPE:PF
      Result = Units.Convert(Me.Scale_Min_Gap_on_Max_Box_User, Me.Scale_Min_Gap_on_Max_Box_User_UOM,"IN")
      '   END FORMULA; PROP ID:9847; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Max_Box_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Gap_on_Max_Box_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Max_Box_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9846; TYPE:PF
      Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Select Case Me.Scale_Scale_Type
			Case "Single Stage"
				Result = Me.Scale_Min_Head_to_Head_IN - Me.MTBH_Length_Maximum_IN
			Case "Multi-Stage"
				Select Case Me.Scale_Scale_Gap_Override_IN
					Case 0
						Result = 18
					Case Else
						Result = Me.Scale_Scale_Gap_Override_IN
				End Select
		End Select
	Case Else
		Result = 0
End Select
	
If Me.Scale_Min_Head_to_Head_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9846; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Max_Box_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Gap_on_Max_Box_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Max_Box_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9836; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9836; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Max_Box_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Gap_on_Min_Box_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Min_Box_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9845; TYPE:PF
      Result = Units.Convert(Me.Scale_Min_Gap_on_Min_Box_User, Me.Scale_Min_Gap_on_Min_Box_User_UOM,"IN")
      '   END FORMULA; PROP ID:9845; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Min_Box_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Gap_on_Min_Box_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Min_Box_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9844; TYPE:PF
      Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Select Case Me.Scale_Scale_Type
			Case "Single Stage"
				Result = Me.Scale_Min_Head_to_Head_IN - me.MTBH_Length_Minimum_IN
			Case "Multi-Stage"
				Select Case Me.Scale_Scale_Gap_Override_IN
					Case 0
						Result = 18
					Case Else
						Result = Me.Scale_Scale_Gap_Override_IN
				End Select
		End Select
	Case Else
		Result = 0
End Select
	
If Me.Scale_Min_Head_to_Head_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9844; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Min_Box_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Gap_on_Min_Box_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Min_Box_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9835; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9835; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Min_Box_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Head_to_Head_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Head_to_Head_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9843; TYPE:PF
      Result = Units.Convert(Me.Scale_Min_Head_to_Head_User, Me.Scale_Min_Head_to_Head_User_UOM,"IN")
      '   END FORMULA; PROP ID:9843; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Head_to_Head_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Head_to_Head_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Head_to_Head_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9842; TYPE:PF
      Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Select Case Me.Scale_Scale_Type
			Case "Single Stage"
				Result = Me.Scale_Scale_Bed_Length_IN + 2.5
			Case "Multi-Stage"
				Select Case Me.Scale_Scale_Gap_Override_IN
					Case 0
						Result = 18 + Me.MTBH_Length_Minimum_IN
					Case Else
						Result = Me.Scale_Scale_Gap_Override_IN + Me.MTBH_Length_Minimum_IN
				End Select
		End Select
	Case Else
		Result = 0
End Select
	
If Me.Scale_Min_Head_to_Head_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9842; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Head_to_Head_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Min_Head_to_Head_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Head_to_Head_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9841; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9841; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Head_to_Head_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_PandA_Scale_Required() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_PandA_Scale_Required").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9829; TYPE:PF
      Result = "No"
      '   END FORMULA; PROP ID:9829; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_PandA_Scale_Required", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Bed_Length_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Bed_Length_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9838; TYPE:PF
      Result = Units.Convert(Me.Scale_Scale_Bed_Length_User, Me.Scale_Scale_Bed_Length_User_UOM,"IN")
      '   END FORMULA; PROP ID:9838; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Bed_Length_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Bed_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Bed_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9837; TYPE:PF
      Select Case Me.Scale_Scale_Bed_Length_User_UOM
	Case "IN"
		Result = 51.2
	Case Else
		Result = 1300
End Select
      '   END FORMULA; PROP ID:9837; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Bed_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Bed_Length_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Bed_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9832; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9832; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Bed_Length_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Gap_Override_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Gap_Override_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9840; TYPE:PF
      Result = Units.Convert(Me.Scale_Scale_Gap_Override_User, Me.Scale_Scale_Gap_Override_User_UOM,"IN")
      '   END FORMULA; PROP ID:9840; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Gap_Override_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Gap_Override_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Gap_Override_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9839; TYPE:PF
      Result = 0
      '   END FORMULA; PROP ID:9839; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Gap_Override_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Gap_Override_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Gap_Override_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9833; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9833; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Gap_Override_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Type() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9830; TYPE:PF
      Result = "Single Stage"
      '   END FORMULA; PROP ID:9830; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Type", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Spacing_Type() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Spacing_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9831; TYPE:PF
      Select Case Me.Scale_Scale_Type
	Case "Single Stage"
		Result = "Head-to-Head"
	Case Else
		Result = "Tail-to-Head"
End Select
      '   END FORMULA; PROP ID:9831; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Spacing_Type", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Carton_Panels_Scanned_Quantity() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Carton_Panels_Scanned_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9792; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = 0
	Case Else
		Result = Me.Ver_Scan_My_Scan_Config(1).BoxPanelsScanned
End Select
      '   END FORMULA; PROP ID:9792; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Carton_Panels_Scanned_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Carton_Presentation() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Carton_Presentation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9794; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = "Edge Aligned"
	Case Else
		Result = Me.Ver_Scan_My_Scan_Config(1).CartonPresentation
End Select
      '   END FORMULA; PROP ID:9794; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Carton_Presentation", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9820; TYPE:PF
      Result = Units.Convert(Me.Ver_Scan_Distance_Last_Tamp__Scan_Window_User, Me.Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM,"IN")
      '   END FORMULA; PROP ID:9820; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9818; TYPE:PF
      Select Case Me.Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM
	Case "IN"
		Result = 48
	Case Else
		Result = 1219.2
End Select
      '   END FORMULA; PROP ID:9818; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9819; TYPE:PF
      Select Case Me.Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM
	Case "IN"
		Result = 12
	Case Else
		Result = 304.8
End Select
      '   END FORMULA; PROP ID:9819; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9817; TYPE:PF
      Result = 24

If Me.Ver_Scan_Min_Gap_Scan_Application_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9817; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9808; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9808; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Label_Orientation() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Label_Orientation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9793; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = "Uni-Directional"
	Case Else
		Result = Me.Ver_Scan_My_Scan_Config(1).AppType
End Select
      '   END FORMULA; PROP ID:9793; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Label_Orientation", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9826; TYPE:PF
      Result = Units.Convert(Me.Ver_Scan_Max_Linear_Length_Carton_Scanned_User, Me.Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM,"IN")
      '   END FORMULA; PROP ID:9826; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9825; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Data_Transmit_Mode
	Case "Lead Edge"
		Result = (Me.MTBH_Length_Maximum_IN * Me.Ver_Scan_Percent_Max_Carton_Length_Scanned)
	Case Else
		Result = me.MTBH_Length_Maximum_IN
End Select

If Me.Ver_Scan_Min_Gap_Scan_Application_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9825; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9810; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9810; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Gap_Scan_Application_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9813; TYPE:PF
      Result = Units.Convert(Me.Ver_Scan_Min_Gap_Scan_Application_User, Me.Ver_Scan_Min_Gap_Scan_Application_User_UOM,"IN")
      '   END FORMULA; PROP ID:9813; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Gap_Scan_Application_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Gap_Scan_Application_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9812; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = 6.0
		If Me.Ver_Scan_Min_Gap_Scan_Application_User_UOM = "MM" Then
			Result = Units.Convert(Result, "IN", "MM")
		End If
	Case Else
		Result = Me.Ver_Scan_My_Scan_Config(1).MinGapRequired_User
End Select
      '   END FORMULA; PROP ID:9812; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Gap_Scan_Application_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Gap_Scan_Application_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9806; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9806; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Gap_Scan_Application_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9828; TYPE:PF
      Result = Units.Convert(Me.Ver_Scan_Min_Xmit_Point_FromScan_Window_User, Me.Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM,"IN")
      '   END FORMULA; PROP ID:9828; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9827; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Data_Transmit_Mode
	Case "Lead Edge"
		Result = Me.Ver_Scan_Max_Linear_Length_Carton_Scanned_IN + 2
	Case Else
		Result = 2
End Select

If Me.Ver_Scan_Min_Gap_Scan_Application_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9827; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9811; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9811; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9805; TYPE:PF
      Result = Me.Ver_Scan_Percent_Max_Carton_Length_Scanned_User / 100
      '   END FORMULA; PROP ID:9805; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9804; TYPE:PF
      Result = 50
      '   END FORMULA; PROP ID:9804; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Rescan_Barcode_For_Verification() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Rescan_Barcode_For_Verification").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9790; TYPE:PF
      Result = "No"
      '   END FORMULA; PROP ID:9790; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Rescan_Barcode_For_Verification", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Scan_Window_Length_Req_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scan_Window_Length_Req_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9815; TYPE:PF
      Result = Units.Convert(Me.Ver_Scan_Scan_Window_Length_Req_User, Me.Ver_Scan_Scan_Window_Length_Req_User_UOM,"IN")
      '   END FORMULA; PROP ID:9815; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scan_Window_Length_Req_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scan_Window_Length_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9814; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = 5.0
		If Me.Ver_Scan_Scan_Window_Length_Req_User_UOM = "MM" Then
			Result = Units.Convert(Result, "IN", "MM")
		End If
	Case Else
		Result = me.Ver_Scan_My_Scan_Config(1).ReadWindowSize_USER
End Select
      '   END FORMULA; PROP ID:9814; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scan_Window_Length_Req_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scan_Window_Length_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9807; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9807; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scan_Window_Length_Req_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Scanner_Configuration() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scanner_Configuration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9791; TYPE:PF
      Select Case Me.Parent.Scan_Configurations.Quantity
	Case 0
		Result = "None"
	Case Else
		Result = Me.Parent.Scan_Configurations(1).Configuration_Name
End Select
      '   END FORMULA; PROP ID:9791; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scanner_Configuration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Scanner_Data_Transmit_Mode() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scanner_Data_Transmit_Mode").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9803; TYPE:PF
      Result = "Lead Edge"
      '   END FORMULA; PROP ID:9803; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scanner_Data_Transmit_Mode", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Shadowing_Allowed() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Shadowing_Allowed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9802; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Select Case Me.Ver_Scan_Shadowing_Potential
			Case "Yes"
				Result = "No"
			Case Else
				Result = ""
		End Select
	Case Else
		Result = Me.Ver_Scan_My_Scan_Config(1).ShadowingStatus
End Select
      '   END FORMULA; PROP ID:9802; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Shadowing_Allowed", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Shadowing_Potential() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Shadowing_Potential").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9799; TYPE:PF
      Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = "No"
	Case Else
		Result = Me.Ver_Scan_My_Scan_Config(1).ShadowingPotential
End Select
      '   END FORMULA; PROP ID:9799; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Shadowing_Potential", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Tracking_Photocell_Distance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9824; TYPE:PF
      Result = Units.Convert(Me.Ver_Scan_Tracking_Photocell_Distance_User, Me.Ver_Scan_Tracking_Photocell_Distance_User_UOM,"IN")
      '   END FORMULA; PROP ID:9824; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_Max_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Tracking_Photocell_Distance_Max_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9822; TYPE:PF
      Result = (2 / 3) * Me.MTBH_Length_Minimum_IN

If Me.Ver_Scan_Tracking_Photocell_Distance_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9822; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_Max_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_Min_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Tracking_Photocell_Distance_Min_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9823; TYPE:PF
      Select Case Me.Ver_Scan_Tracking_Photocell_Distance_User_UOM
	Case "IN"
		Result = 2
	Case Else
		Result = 50.8	
End Select
      '   END FORMULA; PROP ID:9823; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_Min_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Tracking_Photocell_Distance_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9821; TYPE:PF
      Select Case Me.Ver_Scan_Tracking_Photocell_Distance_User_UOM
	Case "IN"
		Result = 2
	Case Else
		Result = 50.8
End Select
      '   END FORMULA; PROP ID:9821; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Tracking_Photocell_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9809; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9809; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Caclucation_Errors_Present() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Caclucation_Errors_Present").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9869; TYPE:PF
      Result = 0
      '   END FORMULA; PROP ID:9869; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Caclucation_Errors_Present", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Caclucation_Warnings_Present() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Caclucation_Warnings_Present").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9868; TYPE:PF
      result = 0
      '   END FORMULA; PROP ID:9868; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Caclucation_Warnings_Present", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Carton_Length_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Carton_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9852; TYPE:PF
      Result = Me.MTBH_Length_Minimum_IN + Me.SubpartID - 1
      '   END FORMULA; PROP ID:9852; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Carton_Length_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_H_to_H_Spacing_Limit_Set_By() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_H_to_H_Spacing_Limit_Set_By").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9866; TYPE:PF
      If Me.Summary_Min_H_to_H_Spacing_Req_IN <= 33 Then
	Result = "Scale"
Else
	Result = "Applicator"
End If
      '   END FORMULA; PROP ID:9866; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_H_to_H_Spacing_Limit_Set_By", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_H_to_H_Spacing_Req_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_H_to_H_Spacing_Req_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9863; TYPE:PF
      Result = Units.Convert(Me.Summary_Min_H_to_H_Spacing_Req_User, Me.Summary_Min_H_to_H_Spacing_Req_User_UOM, "IN")
      '   END FORMULA; PROP ID:9863; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_H_to_H_Spacing_Req_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_H_to_H_Spacing_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9862; TYPE:PF
      If Me.App_Label_Applicator_Reason_For_Multiple = "Redundancy" OrElse Me.App_Label_Applicator_Quantity = 1 Then
	Result = math.max(Me.Scale_Min_Head_to_Head_IN , Me.App_Min_H_to_H_Req_Compl_PandA_Cycle_IN)
Else
	Result = math.max(Me.Scale_Min_Head_to_Head_IN , Me.App_Min_H_to_H_Spacing_Avg_Carton_IN)
End If

If Me.Summary_Min_H_to_H_Spacing_Req_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9862; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_H_to_H_Spacing_Req_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_H_to_H_Spacing_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9860; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9860; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_H_to_H_Spacing_Req_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_T_to_H_Gap_Limit_Set_By() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_T_to_H_Gap_Limit_Set_By").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9867; TYPE:PF
      If me.Summary_Min_H_to_H_Spacing_Req_IN <= 6 Then
	Result = "Induct Scan"  '''TODO - Multiple options for 6 or less (Induct Scan/Verify Scan) - TB 15 July, 2025
ElseIf Me.Summary_Min_T_to_H_Gap_Req_IN <= 6.3 Then
	Result = "Reject Divert"
Else
	Result = "Applicator"
End If
      '   END FORMULA; PROP ID:9867; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_T_to_H_Gap_Limit_Set_By", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_T_to_H_Gap_Req_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_T_to_H_Gap_Req_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9865; TYPE:PF
      Result = Units.Convert(Me.Summary_Min_T_to_H_Gap_Req_User, Me.Summary_Min_T_to_H_Gap_Req_User_UOM, "IN")
      '   END FORMULA; PROP ID:9865; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_T_to_H_Gap_Req_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_T_to_H_Gap_Req_User() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_T_to_H_Gap_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9864; TYPE:PF
      If Me.App_Label_Applicator_Quantity < 2 Then
	Result = math.max(math.max(math.max(math.max(Me.Gen_MDR_Min_Gap_Throughput_Limit_IN , Me.Ind_Scan_Scan_App_Min_Gap_IN), Me.App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN), Me.Ver_Scan_Min_Gap_Scan_Application_IN), Me.Reject_Diverter_Min_Gap_Required_IN)
Else
	Result = math.max(math.max(math.max(math.max(Me.Gen_MDR_Min_Gap_Throughput_Limit_IN , Me.Ind_Scan_Scan_App_Min_Gap_IN), Me.App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN), Me.Ver_Scan_Min_Gap_Scan_Application_IN), me.Reject_Diverter_Min_Gap_Required_IN)
End If

If Me.Summary_Min_H_to_H_Spacing_Req_User_UOM = "MM" Then
	Result = Units.Convert(Result, "IN", "MM")
End If
      '   END FORMULA; PROP ID:9864; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_T_to_H_Gap_Req_User", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Summary_Min_T_to_H_Gap_Req_User_UOM() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_T_to_H_Gap_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9861; TYPE:PF
      If Me.User_UOM_System = "Imperial" Then Result = "IN" Else Result = "MM"
      '   END FORMULA; PROP ID:9861; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_T_to_H_Gap_Req_User_UOM", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Transnorm_TS4800_Control_Reaction_Time_Distance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Transnorm_TS4800_Control_Reaction_Time_Distance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9576; TYPE:PF
      Result = ((Me.Gen_Belt_Speed_IN * 12) / 60) * (0.025 * 2)
      '   END FORMULA; PROP ID:9576; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Transnorm_TS4800_Control_Reaction_Time_Distance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Transnorm_TS4800_Divert_Angle() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Transnorm_TS4800_Divert_Angle").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9574; TYPE:PF
      Result = 30
      '   END FORMULA; PROP ID:9574; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Transnorm_TS4800_Divert_Angle", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Transnorm_TS4800_Divert_Shifting_Distance_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Transnorm_TS4800_Divert_Shifting_Distance_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9575; TYPE:PF
      Result = ((Me.Gen_Belt_Speed_IN * 12) / 60) * 0.15
      '   END FORMULA; PROP ID:9575; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Transnorm_TS4800_Divert_Shifting_Distance_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Transnorm_TS4800_Encoder_Resolution_IN() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Transnorm_TS4800_Encoder_Resolution_IN").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9577; TYPE:PF
      Result = 1.5
      '   END FORMULA; PROP ID:9577; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Transnorm_TS4800_Encoder_Resolution_IN", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Transnorm_TS4800_Required_Gap_Max_Box() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Transnorm_TS4800_Required_Gap_Max_Box").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9578; TYPE:PF
      Result = Me.Transnorm_TS4800_Divert_Shifting_Distance_IN _
	+ Me.Transnorm_TS4800_Control_Reaction_Time_Distance_IN _
	+ me.Transnorm_TS4800_Encoder_Resolution_IN
      '   END FORMULA; PROP ID:9578; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Transnorm_TS4800_Required_Gap_Max_Box", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Debug_Mode() As Boolean
          Dim Result as Boolean
      Dim ctx as Object
      Try
      ctx = this
        '   THIS FORMULA IS INHERITED. CHANGES TO THIS FORMULA WILL BREAK INHERITANCE.
      
      If Me.Properties("Debug_Mode").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9997; TYPE:PF
      Result = False
If Not Me.Parent Is Nothing AndAlso Me.Parent.Properties.ContainsKey("Debug_Mode") Then
		Result = Me.Parent.Debug_Mode
End If
      '   END FORMULA; PROP ID:9997; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Debug_Mode", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_XMLObjectName() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("XMLObjectName").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9998; TYPE:PF
      Result = "PandA"
      '   END FORMULA; PROP ID:9998; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_XMLObjectName", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_XMLObjectType() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
        '   THIS FORMULA IS INHERITED. CHANGES TO THIS FORMULA WILL BREAK INHERITANCE.
      
      If Me.Properties("XMLObjectType").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9999; TYPE:PF
      result = "Element"
      '   END FORMULA; PROP ID:9999; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_XMLObjectType", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_XMLObjectValue() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
        '   THIS FORMULA IS INHERITED. CHANGES TO THIS FORMULA WILL BREAK INHERITANCE.
      
      If Me.Properties("XMLObjectValue").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:10000; TYPE:PF
      Dim Prop As PropertySF = Me.CurrentProperty
Result = Custom.GetPFXMLRepresentation(Prop) 'Generate XML For this and Children Classes
      '   END FORMULA; PROP ID:10000; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_XMLObjectValue", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Accumulation_Zone_Quantity_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9414; TYPE:TT
              Result = "The minimun allowable number of pre-PandA accumulation zones is 8.  Maximum number of zones for this calculation is 20 as there is no additional benefit from a PandA perspective for more than this."
              '   END FORMULA; PROP ID:9414; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Quantity_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Belt_Speed_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9400; TYPE:TT
              Select Case Me.Gen_Belt_Speed_User_UOM
	Case "FT/MIN"
		Result = "Allowable speed range is 75 to 180 FPM"
	Case Else
		Result = "Allowable speed range is 0.38 to 0.92 MPS"
End Select
              '   END FORMULA; PROP ID:9400; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9403; TYPE:TT
              Select Case Me.Gen_BM_Belt_Acc_Dec_Rate_User_UOM
	Case "IN/SEC/SEC"
		Result = "This is the Accel/Decel rate of the PandA Brake/Meter belt using for spacing cartons.  The value is in 'Inches per second per second'.  The allowable range is currently restricted to 84 to 115 inches/sec/sec. (0.21g to 0.3g)"
	Case Else
		Result = "This is the Accel/Decel rate of the PandA Brake/Meter belt using for spacing cartons.  The value is in 'Inches per second per second'.  The allowable range is currently restricted to 2.13 to 2.92 meters/sec/sec. (0.21g to 0.3g)"
End Select
              '   END FORMULA; PROP ID:9403; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Gen_Throughput_Rate_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9390; TYPE:TT
              Result = "This selection is optional.  Allowable input is 0 to 60 CPM."
              '   END FORMULA; PROP ID:9390; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Throughput_Rate_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Average_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9442; TYPE:TT
              Result = "Average Product Height" & vbcrlf & "The allowable range must fall between the defined Minimum and Maximum height values."
              '   END FORMULA; PROP ID:9442; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Average_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Maximum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9441; TYPE:TT
              Select Case Me.MTBH_Height_Minimum_User_UOM
	Case "IN"
		Result = "Maximum Product Height" & vbcrlf & "The allowable input range is the defined Minimum Height to 30 inches on PandA applications.  Conveying product heights above 30 inches may be possible but require special design considerations and needs PAE/Engineering approval."
	Case Else
		Result = "Maximum Product Height" & vbcrlf & "The allowable input range is the defined Minimum Height to 762 mm on PandA applications.  Conveying product heights above 762 mm may be possible but require special design considerations and needs PAE/Engineering approval."
End Select
              '   END FORMULA; PROP ID:9441; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Height_Minimum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9440; TYPE:TT
              Select Case Me.MTBH_Height_Minimum_User_UOM
	Case "IN"
		Result = "Minimum Product Height" & vbcrlf & "The allowable input range is 1 inch to the defined Maximum Height."
	Case Else
		Result = "Minimum Product Height" & vbcrlf & "The allowable input range is 25.4 mm to the defined Maximum Height."
End Select
              '   END FORMULA; PROP ID:9440; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Average_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9430; TYPE:TT
              Result = "Average Product Length" & vbcrlf & "Allowable input range must be between the defined Minimum and Maximum product lengths."
              '   END FORMULA; PROP ID:9430; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Average_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Maximum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9429; TYPE:TT
              Select Case Me.MTBH_Length_Maximum_User_UOM
	Case "IN"
		Result = "Maximum Product Length" & vbcrlf & "Allow input range is the defined minimum length to 60 inches.  Please understand any length grater than 48 inches requires special design considerations for the PandA Reject Divert and should be reviewed by PAE/Engineering."
	Case Else
		Result = "Maximum Product Length" & vbcrlf & "Allow input range is the defined minimum length to 1524 mm.  Please understand any length grater than 1219.2 mm requires special design considerations for the PandA Reject Divert and should be reviewed by PAE/Engineering."
End Select
              '   END FORMULA; PROP ID:9429; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Length_Minimum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9428; TYPE:TT
              Select Case Me.MTBH_Length_Minimum_User_UOM
	Case "IN"
		Result = "Allowable input range is 4 to 48 inches.  Minimum lengths less than 6 inches must be conveyed on belt or suitable sorters only.  Minimum lengths less than 9 inches require roller conveyors with 2 inch roller centers."
	Case Else
		Result = "Allowable input range is 101.6 to 1219.2 mm.  Minimum lengths less than 152.4 mm must be conveyed on belt or suitable sorters only.  Minimum lengths less than 228.6 mm require roller conveyors with 50.8 mm roller centers."
End Select
              '   END FORMULA; PROP ID:9428; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Average_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9445; TYPE:TT
              Result = "Average Carton Weight" & vbcrlf & "The allowable input range is the defined Minimum weight up to the defined Maximum weight."
              '   END FORMULA; PROP ID:9445; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Average_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Maximum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9444; TYPE:TT
              Select Case Me.MTBH_Weight_Maximum_User_UOM
	Case "IN"
		Result = "Maximum Product Weight" & vbcrlf & "The allowable input range is the defined Minimum weight to 120 LBS.  Please Note!  The Maximum weight for MDR is 70 LBS."
	Case Else
		Result = "Maximum Product Weight" & vbcrlf & "The allowable input range is the defined Minimum weight to 54.43 Kg.  Please Note!  The Maximum weight for MDR is 31.75 Kg."
End Select
              '   END FORMULA; PROP ID:9444; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Weight_Minimum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9443; TYPE:TT
              Select Case  Me.MTBH_Weight_Minimum_User_UOM
	Case "IN"
		Result = "Minimum Product Weight" & vbcrlf & "The allowable input range is 0.5 LBS to the defined Maximum Weight."
	Case Else
		Result = "Minimum Product Weight" & vbcrlf & "The allowable input range is 0.23 Kg to the defined Maximum Weight."
End Select
              '   END FORMULA; PROP ID:9443; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Average_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9439; TYPE:TT
              Result = "Average Product Width" & vbcrlf & "The allowable input range must fall between the defined Minimum and Maximum widths."
              '   END FORMULA; PROP ID:9439; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Average_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Maximum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9438; TYPE:TT
              Select Case Me.MTBH_Width_Maximum_User_UOM
	Case "IN"
		Result = "Maximum Product Width" & vbcrlf & "The allowable input range is the defined 'Average Width' to 38 inches."
	Case Else
		Result = "Maximum Product Width" & vbcrlf & "The allowable input range is the defined 'Average Width' to 965.2 mm."
End Select
              '   END FORMULA; PROP ID:9438; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MTBH_Width_Minimum_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9437; TYPE:TT
              Select Case MTBH_Width_Minimum_User_UOM
	Case "IN"
		Result = "Minimum Product Width" & vbcrlf & "Allowable rand is 4 inches to the defined Maximum Width.  Please Note!  MADR Reject Diverts require a minimum of 6 inches for a BW Diverter & 9 inches for an MDR RAT."
	Case "IN"
		Result = "Minimum Product Width" & vbcrlf & "Allowable rand is 101.6 mm to the defined Maximum Width.  Please Note!  MADR Reject Diverts require a minimum of 152.4 mm for a BW Diverter & 228.6 mm for an MDR RAT."
End Select
              '   END FORMULA; PROP ID:9437; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9639; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9639; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Fixed_Printer_Overhead_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9611; TYPE:TT
              Result = "Fixed Overhead + Safety Margin" & vbcrlf & "Allowable input range is 0.010 to 2 seconds.  This info must be manually determined by PAE or supplied by the Printer Applicator vendor."
              '   END FORMULA; PROP ID:9611; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Fixed_Printer_Overhead_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Brush_Required_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9610; TYPE:TT
              Result = "The addition of a tamp brush increases the tamp length by 3 inches.  It also adds time to Tamp Cycle times to allow the brush to sweep the applied label."
              '   END FORMULA; PROP ID:9610; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Brush_Required_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9635; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Applicator Tamp Length Required" & vbcrlf & "Tamp length is dependent on the printed label length.  The tamp must be at least 1 inch greater than the label length and 2 inches greater is typical.  The Maximum value is currently limited to 9 inches."
	Case Else
		Result = "Applicator Tamp Length Required" & vbcrlf & "Tamp length is dependent on the printed label length.  The tamp must be at least 25.4 mm greater than the label length and 50.8 mm greater is typical.  The Maximum value is currently limited to 228 mm."
End Select
              '   END FORMULA; PROP ID:9635; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Print_Speed_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9632; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Printed Label Length" & vbcrlf & "Most common range is between 1.5 and 8 inches."
	Case Else
		Result = "Printed Label Length" & vbcrlf & "Most common range is between 38.1 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9632; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Speed_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Print_Time_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9613; TYPE:TT
              Result = "Fixed Overhead + Safety Margin" & vbcrlf & "Allowable input range is 0.010 to 2 seconds.  This info must be manually determined by PAE or supplied by the Printer Applicator vendor."
              '   END FORMULA; PROP ID:9613; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Time_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Label_Printed_Length_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9628; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Printed Label Length" & vbcrlf & "Most common range is between 1.5 and 8 inches."
	Case Else
		Result = "Printed Label Length" & vbcrlf & "Most common range is between 38.1 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9628; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Max_Tamp_Stroke_Req_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9653; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9653; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Max_Tamp_Stroke_Req_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9721; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9721; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9730; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9730; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9656; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9656; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9724; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9724; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9788; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9788; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9717; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9717; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Min_Pitch_Btw_App_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9647; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Printed Label Length" & vbcrlf & "Most common range is between 1.5 and 8 inches."
	Case Else
		Result = "Printed Label Length" & vbcrlf & "Most common range is between 38.1 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9647; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9643; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Up Clearance Safety Margin" & vbcrlf & "This is the safety margin in inches for the tamp return stroke movement.  This value allows for Min/Max carton clearance.  The allowable range is 0 to 4 inches."
	Case Else
		Result = "Tamp Up Clearance Safety Margin" & vbcrlf & "This is the safety margin in mm for the tamp return stroke movement.  This value allows for Min/Max carton clearance.  The allowable range is 0 to 101.6 mm."
End Select
              '   END FORMULA; PROP ID:9643; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9612; TYPE:TT
              Result = "Fixed Overhead + Safety Margin" & vbcrlf & "Allowable input range is 0.010 to 2 seconds.  This info must be manually determined by PAE or supplied by the Printer Applicator vendor."
              '   END FORMULA; PROP ID:9612; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9651; TYPE:TT
              Select Case Me.App_Label_Printed_Length_User_UOM
	Case "IN"
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in inches for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 2 to 8 inches."
	Case Else
		Result = "Tamp Down Clearance Safe Margin" & vbcrlf & "This is the safety margin in mm for the tamp down stroke movement.  This value allows for Max/Min carton clearance as well as preposistion dwell time/distance above the shortest carton.  The allowable range is 50.8 to 203.2 mm."
End Select
              '   END FORMULA; PROP ID:9651; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Home_Height_Above_Conveyor_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Bed_Length_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9837; TYPE:TT
              Result = "Scale bed length info should be provided by scale vendor based on requested application parameters we provide.  If a multiple stage unit is used, the length of the scale is not relevant to the rate calculations"
              '   END FORMULA; PROP ID:9837; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Bed_Length_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Rescan_Barcode_For_Verification_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9790; TYPE:TT
              Result = "If this property is true, the verification scanner configuration must match or exceed that of Induction!"
              '   END FORMULA; PROP ID:9790; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Rescan_Barcode_For_Verification_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Scanner_Configuration_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9791; TYPE:TT
              Result = "If this property is true, the verification scanner configuration must match or exceed that of Induction!"
              '   END FORMULA; PROP ID:9791; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scanner_Configuration_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_TOOLTIP() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9821; TYPE:TT
              Select Case Me.Ver_Scan_Tracking_Photocell_Distance_User_UOM
	Case "IN"
		Result = "Scan Xmit->Tracking P.E. Distance" & vbcrlf & "Allowable range is 2 inches to 2/3 of Minimum Carton Length."
	Case Else
		Result = "Scan Xmit->Tracking P.E. Distance" & vbcrlf & "Allowable range is 50.8 mm to 2/3 of Minimum Carton Length."
End Select
              '   END FORMULA; PROP ID:9821; TYPE:TT
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_User_TOOLTIP", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Scale_Scale_Gap_Override_User_LABEL() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9839; TYPE:LA
              Result = "Scale Gap Override:" & vbcrlf & "This allows you to choose your own gap (presumably from the scale vendor)."
              '   END FORMULA; PROP ID:9839; TYPE:LA
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Gap_Override_User_LABEL", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_LABEL() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9817; TYPE:LA
              Select Case Me.Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM
	Case "IN"
		Result = "Last Tamp to Verify Scan Window" & vbcrlf & "Allowable range is 12 to 48 inches.  We want this distance to be as short as possiblem but this is typically restricted by physical mounting limitations and interference with the applicator and its mounting structure."
	Case Else
		Result = "Last Tamp to Verify Scan Window" & vbcrlf & "Allowable range is 304.8 to 1219.2 mm.  We want this distance to be as short as possiblem but this is typically restricted by physical mounting limitations and interference with the applicator and its mounting structure."
End Select
              '   END FORMULA; PROP ID:9817; TYPE:LA
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_LABEL", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_LABEL() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9805; TYPE:LA
              Result = "% of Max Carton Length Scanned" & vbcrlf & "This paramter is only applicable to Lead Edge Transmit model.  Allowable range is 25% to 100%."
              '   END FORMULA; PROP ID:9805; TYPE:LA
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_LABEL", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User_LABEL() as String
          
          Dim Result as String = String.Empty
          Dim ctx as Object
          Try
          ctx = this
          'formula
          
              '   BEGIN FORMULA; PROP ID:9804; TYPE:LA
              Result = "% of Max Carton Length Scanned" & vbcrlf & "This paramter is only applicable to Lead Edge Transmit model.  Allowable range is 25% to 100%."
              '   END FORMULA; PROP ID:9804; TYPE:LA
            
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User_LABEL", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Result
          End Function
        
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Brush_Length_Factor_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Date_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Location_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Name_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Proposal_Number_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Max_Pneumatic_Stroke_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Pneumatic_Min_Head_to_Head_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Pneumatic_Tamp_Min_Gap_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Servo_Min_Head_to_Head_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Servo_Tamp_Min_Gap_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_User_UOM_System_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Method_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Max_Host_Resp_Time_Secs_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Max_Local_Lookup_Time_Secs_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Convey_Type_Pre_Panda_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_PTO_Ratio_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_PTO_Target_Ratio_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Type_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Throughput_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Panels_Scanned_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Presentation_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Label_Orientation_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Config_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Data_Transmit_Mode_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Shadowing_Allowed_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Shadowing_Potential_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_Max_Val_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_Min_Val_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MDR_RAT_Swivel_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Use_Local_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_LBS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_LBS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_LBS_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User_UO_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_UO_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Fixed_Printer_Overhead_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Reason_For_Multiple_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Brush_Required_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Type_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Type_Tamp_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Time_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Required_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Type_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_PandA_Scale_Required_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Type_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Spacing_Type_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Carton_Panels_Scanned_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Carton_Presentation_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Label_Orientation_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Rescan_Barcode_For_Verification_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scanner_Configuration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scanner_Data_Transmit_Mode_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Shadowing_Allowed_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Shadowing_Potential_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_Max_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_Min_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Caclucation_Errors_Present_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Caclucation_Warnings_Present_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Carton_Length_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Limit_Set_By_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Limit_Set_By_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_User_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_User_UOM_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Control_Reaction_Time_Distance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Divert_Angle_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Divert_Shifting_Distance_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Encoder_Resolution_IN_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Required_Gap_Max_Box_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Debug_Mode_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_XMLObjectName_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_XMLObjectType_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_XMLObjectValue_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Brush_Length_Factor_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Date_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Location_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Name_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Customer_Proposal_Number_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Max_Pneumatic_Stroke_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Pneumatic_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_Servo_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Pneumatic_Min_Head_to_Head_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Pneumatic_Tamp_Min_Gap_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Servo_Min_Head_to_Head_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Servo_Tamp_Min_Gap_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_User_UOM_System_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Method_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Max_Host_Resp_Time_Secs_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Acq_Max_Host_Resp_Time_Secs").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9534; TYPE:UC
              Select Case Me.Acq_Label_Data_Acquisition_Method
	Case "Real-Time Host Query"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9534; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Max_Host_Resp_Time_Secs_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Max_Local_Lookup_Time_Secs_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Acq_Max_Local_Lookup_Time_Secs").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9535; TYPE:UC
              Select Case Me.Acq_Label_Data_Acquisition_Method
	Case "Real-Time Host Query"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9535; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Max_Local_Lookup_Time_Secs_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Convey_Type_Pre_Panda_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9404; TYPE:UC
              Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9404; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Gen_BM_Belt_Input_Speed_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9405; TYPE:UC
              Select Case Me.Gen_Conveyor_Type
	Case "Standard B/M Belt"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9405; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Input_Speed_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_PTO_Ratio_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_PTO_Target_Ratio_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Type_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Gen_MDR_Min_Gap_Throughput_Limit_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9406; TYPE:UC
              Select Case Me.Gen_Conveyor_Type
	Case "2 - Belted MDR Zones"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9406; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Throughput_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Panels_Scanned_Quantity_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Carton_Panels_Scanned_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9501; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9501; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Panels_Scanned_Quantity_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Percent_Max_Length_Scanned_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Presentation_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Carton_Presentation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9503; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9503; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Presentation_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Label_Orientation_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Label_Orientation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9502; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9502; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Label_Orientation_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Scan_App_Min_Gap_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9510; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9510; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_App_Min_Gap_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Scan_Window_Length_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9515; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9515; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_Window_Length_Req_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Config_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Data_Transmit_Mode_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Shadowing_Allowed_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Shadowing_Allowed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9505; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Select Case Me.Ind_Scan_Shadowing_Potential
			Case "Yes"
				Result = True
			Case Else
				Result = False
		End Select
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9505; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Shadowing_Allowed_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Shadowing_Potential_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ind_Scan_Shadowing_Potential").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9504; TYPE:UC
              Select Case Me.Ind_Scan_Scanner_Config
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9504; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Shadowing_Potential_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_Max_Val_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_Min_Val_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MDR_RAT_Swivel_Rate_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Height_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9442; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9442; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Average_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Height_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9441; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9441; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Height_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9440; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9440; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Length_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9430; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9430; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Average_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Length_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9429; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9429; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Length_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9428; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9428; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Use_Local_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_LBS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Weight_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9445; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9445; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Average_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_LBS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Weight_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9444; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9444; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_LBS_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Weight_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9443; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9443; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Width_Average_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9439; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9439; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Average_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Width_Maximum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9438; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9438; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("MTBH_Width_Minimum_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9437; TYPE:UC
              Select Case Me.MTBH_Use_Local
	Case "No"
		Result = False
	Case Else
		Result = True
End Select
              '   END FORMULA; PROP ID:9437; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User_UO_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_UO_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Fixed_Printer_Overhead_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Reason_For_Multiple_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Brush_Required_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_Max_Valu_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_Min_Valu_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Type_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Type_Tamp_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Time_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("App_Label_Print_Time").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9613; TYPE:UC
              Select Case Me.App_Label_Applicator_Type
	Case "Side Apply"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9613; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Time_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9730; TYPE:UC
              Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9730; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("App_Min_H_to_H_Spacing_Avg_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9788; TYPE:UC
              Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9788; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("App_Tamp_Cycle_Time_Pneumatic_Side_Apply").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9612; TYPE:UC
              Select Case Me.App_Label_Applicator_Type
	Case "Side Apply"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9612; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Cycle_Time_Pneumatic_Side_Apply_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("App_Tamp_Home_Height_Above_Conveyor_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9651; TYPE:UC
              Select Case Me.App_Label_Applicator_Type
	Case "Top Apply"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9651; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Home_Height_Above_Conveyor_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Reject_Diverter_Min_Gap_Required_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9555; TYPE:UC
              Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9555; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Min_Gap_Required_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Required_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9571; TYPE:UC
              Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9571; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9570; TYPE:UC
              Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9570; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Type_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Reject_Diverter_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9551; TYPE:UC
              Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9551; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Type_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Scale_Min_Gap_on_Max_Box_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9846; TYPE:UC
              Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9846; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Max_Box_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Scale_Min_Gap_on_Min_Box_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9844; TYPE:UC
              Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9844; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Min_Box_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Scale_Min_Head_to_Head_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9842; TYPE:UC
              Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9842; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Head_to_Head_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_PandA_Scale_Required_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Scale_Scale_Bed_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9837; TYPE:UC
              Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9837; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Bed_Length_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Scale_Scale_Gap_Override_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9839; TYPE:UC
              Select Case Me.Scale_PandA_Scale_Required
	Case "Yes"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9839; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Gap_Override_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Type_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Spacing_Type_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Carton_Panels_Scanned_Quantity_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Carton_Panels_Scanned_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9792; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9792; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Carton_Panels_Scanned_Quantity_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Carton_Presentation_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Carton_Presentation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9794; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9794; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Carton_Presentation_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Max_Value_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_Min_Value_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Label_Orientation_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Label_Orientation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9793; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9793; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Label_Orientation_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Min_Gap_Scan_Application_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9812; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9812; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Gap_Scan_Application_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9805; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Data_Transmit_Mode
	Case "Lead Edge"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9805; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Percent_Max_Carton_Length_Scanned_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9804; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Data_Transmit_Mode
	Case "Lead Edge"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9804; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Percent_Max_Carton_Length_Scanned_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Rescan_Barcode_For_Verification_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Scan_Window_Length_Req_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9814; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9814; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scan_Window_Length_Req_User_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scanner_Configuration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scanner_Data_Transmit_Mode_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Shadowing_Allowed_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Shadowing_Allowed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9802; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Select Case Me.Ver_Scan_Shadowing_Potential
			Case "Yes"
				Result = True
			Case Else
				Result = False
		End Select
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9802; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Shadowing_Allowed_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Shadowing_Potential_USERCHANGE() as Boolean
      
              '/Part_Family/Property_Spec/Property_Constraint/Property_Formula[@Formula_Type = 'UC']
              Dim Result as Boolean = False
              Dim ctx as Object
              Try
              ctx = this
              If Me.Properties("Ver_Scan_Shadowing_Potential").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.UI_FORMULA) Then
              Stop
              End If
              '   BEGIN FORMULA; PROP ID:9799; TYPE:UC
              Select Case Me.Ver_Scan_Scanner_Configuration
	Case "None"
		Result = True
	Case Else
		Result = False
End Select
              '   END FORMULA; PROP ID:9799; TYPE:UC
              Catch ex As Exception
              ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Shadowing_Potential_USERCHANGE", ex.Message)
              If ObjectManager.DebugMode Then Stop
              End Try
              Return Result
            
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_Max_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_Min_Value_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Caclucation_Errors_Present_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Caclucation_Warnings_Present_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Carton_Length_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Limit_Set_By_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Limit_Set_By_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_IN_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_User_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_User_UOM_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Control_Reaction_Time_Distance_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Divert_Angle_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Divert_Shifting_Distance_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Encoder_Resolution_IN_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Transnorm_TS4800_Required_Gap_Max_Box_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Debug_Mode_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_XMLObjectName_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_XMLObjectType_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_XMLObjectValue_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_User_UOM_System_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("User_UOM_System").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9392; TYPE:VV
      Result = MakeValidValues(Array("Imperial", "Metric"))
      '   END FORMULA; PROP ID:9392; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_User_UOM_System_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Method_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Label_Data_Acquisition_Method").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9533; TYPE:VV
      Result = MakeValidValues(Array("Real-Time Host Query", "Local Lookup"))
      '   END FORMULA; PROP ID:9533; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Label_Data_Acquisition_Method_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Acq_Label_Data_Acquisition_Travel_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Acq_Label_Data_Acquisition_Travel_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9537; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9537; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Acq_Label_Data_Acquisition_Travel_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_FT_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9582; TYPE:VV
      Result = MakeValidValues(Array("FT", "M"))
      '   END FORMULA; PROP ID:9582; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_FT_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_App_Belt_Length_Req_IN_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_App_Belt_Length_Req_IN_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9581; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9581; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_App_Belt_Length_Req_IN_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conv_Total_Solution_Length_FT_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conv_Total_Solution_Length_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9583; TYPE:VV
      Result = MakeValidValues(Array("FT", "M"))
      '   END FORMULA; PROP ID:9583; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Conv_Total_Solution_Length_FT_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_User_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Zone_Length_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9402; TYPE:VV
      Select Case Me.Gen_Accumulation_Zone_Length_User_UOM
	Case "IN"
		Result = MakeValidValues(Array(24, 30, 36, 48))
	Case Else
		Result = MakeValidValues(Array(624, 780, 936))
End Select
      '   END FORMULA; PROP ID:9402; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Length_User_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Accumulation_Zone_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Accumulation_Zone_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9395; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9395; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Accumulation_Zone_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Belt_Speed_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Belt_Speed_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9393; TYPE:VV
      Result = MakeValidValues(Array("FT/MIN", "M/SEC"))
      '   END FORMULA; PROP ID:9393; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Belt_Speed_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Acc_Dec_Rate_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Acc_Dec_Rate_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9396; TYPE:VV
      Result = MakeValidValues(Array("IN/SEC/SEC", "M/SEC/SEC"))
      '   END FORMULA; PROP ID:9396; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Acc_Dec_Rate_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9397; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9397; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Gap_Stop_Min_Carton_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_BM_Belt_Input_Speed_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_BM_Belt_Input_Speed_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9398; TYPE:VV
      Result = MakeValidValues(Array("FT/MIN", "M/SEC"))
      '   END FORMULA; PROP ID:9398; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_BM_Belt_Input_Speed_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Type_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9415; TYPE:VV
      Result = MakeValidValues(Array("Standard B/M Belt", "2 - Belted MDR Zones"))
      '   END FORMULA; PROP ID:9415; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Type_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_User_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Width_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9401; TYPE:VV
      Select Case Me.Gen_Conveyor_Width_User_UOM
	Case "IN"
		Result = MakeValidValues(Array(16, 22, 28, 34))
	Case Else
		Result = MakeValidValues(Array(440, 540, 690, 840, 990))
End Select
      '   END FORMULA; PROP ID:9401; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Width_User_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_Conveyor_Width_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_Conveyor_Width_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9394; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9394; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_Conveyor_Width_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Gen_MDR_Min_Gap_Throughput_Limit_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9399; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9399; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Gen_MDR_Min_Gap_Throughput_Limit_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Presentation_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Presentation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9503; TYPE:VV
      Result = MakeValidValues(Array("Edge Aligned", "Random"))
      '   END FORMULA; PROP ID:9503; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Presentation_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9522; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9522; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Carton_Scanned_Max_Lin_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Label_Orientation_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Label_Orientation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9502; TYPE:VV
      Select Case Me.Ind_Scan_Carton_Panels_Scanned_Quantity
	Case 0
		Result = MakeValidValues(Array(""))
	Case Else
		Result = MakeValidValues(Array("Uni-Directional", "Omni-Directional"))
End Select
      '   END FORMULA; PROP ID:9502; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Label_Orientation_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_App_Min_Gap_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_App_Min_Gap_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9519; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9519; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_App_Min_Gap_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scan_Window_Length_Req_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scan_Window_Length_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9520; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9520; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scan_Window_Length_Req_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Config_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Config").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9500; TYPE:VV
      Select Case Me.Parent.Scan_Configurations.Quantity
	Case 0
		Result = MakeValidValues(Array("None"))
	Case Else
		Dim vv As New ValidValues()
		For Each part As Part In Me.Parent.Scan_Configurations
			vv.add(part.Properties("Configuration_Name").Value)
		Next
		Result = vv
End Select
      '   END FORMULA; PROP ID:9500; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Config_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Data_Transmit_Mode_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Data_Transmit_Mode").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9506; TYPE:VV
      Result = MakeValidValues(Array("Lead Edge", "Trail Edge"))
      '   END FORMULA; PROP ID:9506; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Data_Transmit_Mode_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Scanner_Min_Xmit_Point_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9523; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9523; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Scanner_Min_Xmit_Point_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Shadowing_Allowed_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Shadowing_Allowed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9505; TYPE:VV
      Select Case Me.Ind_Scan_Shadowing_Potential
	Case "No"
		Result = MakeValidValues(Array("N/A"))
	Case Else
		Result = MakeValidValues(Array("No", "Partial", "Full"))
End Select
      '   END FORMULA; PROP ID:9505; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Shadowing_Allowed_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Shadowing_Potential_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Shadowing_Potential").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9504; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9504; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Shadowing_Potential_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ind_Scan_Tracking_Photocell_Distance_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ind_Scan_Tracking_Photocell_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9521; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9521; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ind_Scan_Tracking_Photocell_Distance_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Average_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9436; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9436; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Average_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Maximum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9435; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9435; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Maximum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Height_Minimum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Height_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9434; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9434; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Height_Minimum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Average_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9421; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9421; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Average_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Maximum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9420; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9420; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Maximum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Length_Minimum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Length_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9419; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9419; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Length_Minimum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Use_Local_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Use_Local").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9418; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9418; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Use_Local_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Average_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9448; TYPE:VV
      Result = MakeValidValues(Array("LB", "KG"))
      '   END FORMULA; PROP ID:9448; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Average_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Maximum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9447; TYPE:VV
      Result = MakeValidValues(Array("LB", "KG"))
      '   END FORMULA; PROP ID:9447; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Maximum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Weight_Minimum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Weight_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9446; TYPE:VV
      Result = MakeValidValues(Array("LB", "KG"))
      '   END FORMULA; PROP ID:9446; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Weight_Minimum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Average_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Average_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9427; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9427; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Average_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Maximum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Maximum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9426; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9426; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Maximum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MTBH_Width_Minimum_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MTBH_Width_Minimum_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9425; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9425; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_MTBH_Width_Minimum_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Carton_Stability_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Carton_Stability_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9878; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9878; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Carton_Stability_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9877; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9877; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Max_Lgth_of_Carton_Scanned_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9880; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9880; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induct_Scan_Data_Cap_Window_Lgth_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Induction_Scan_Window_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Induction_Scan_Window_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9879; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9879; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Induction_Scan_Window_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_1_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_1_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9881; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9881; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_1_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Label_Data_Acq_Distance_App_2_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Label_Data_Acq_Distance_App_2_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9882; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9882; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Label_Data_Acq_Distance_App_2_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9885; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9885; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Dist_Last_App_Tamp_Ver_Scan_PE_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_Between_Applicator_1_2_User_UO_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_Between_Applicator_1_2_User_UO").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9884; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9884; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_Between_Applicator_1_2_User_UO_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_for_Printer_Setup_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_for_Printer_Setup_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9883; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9883; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_for_Printer_Setup_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Min_Distance_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Min_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9942; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9942; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Min_Distance_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_PandA_Belt_Exit_PE_Distance_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_PandA_Belt_Exit_PE_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9890; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9890; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_PandA_Belt_Exit_PE_Distance_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_FT_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9894; TYPE:VV
      Result = MakeValidValues(Array("FT", "M"))
      '   END FORMULA; PROP ID:9894; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_FT_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Double_IN_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Double_IN_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9892; TYPE:VV
      Result = MakeValidValues(Array("FT", "M"))
      '   END FORMULA; PROP ID:9892; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Double_IN_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_FT_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_FT_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9893; TYPE:VV
      Result = MakeValidValues(Array("FT", "M"))
      '   END FORMULA; PROP ID:9893; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_FT_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Total_Calc_Belt_Length_Single_IN_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Total_Calc_Belt_Length_Single_IN_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9891; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9891; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Total_Calc_Belt_Length_Single_IN_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Max_Length_of_Carton_Scanned_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9887; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9887; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Max_Length_of_Carton_Scanned_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_UO_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Ver_Scan_Data_Capture_Window_Length_User_UO").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9889; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9889; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Ver_Scan_Data_Capture_Window_Length_User_UO_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Distance_to_Xmit_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Distance_to_Xmit_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9888; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9888; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Distance_to_Xmit_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Output_Verify_Scanner_Window_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Output_Verify_Scanner_Window_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9886; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9886; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Output_Verify_Scanner_Window_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Down_Stroke_Tamp_Clearance_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Down_Stroke_Tamp_Clearance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9617; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9617; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Down_Stroke_Tamp_Clearance_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Quantity_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9607; TYPE:VV
      Result = MakeValidValues(Array(1, 2))
      '   END FORMULA; PROP ID:9607; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Quantity_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Reason_For_Multiple_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Reason_For_Multiple").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9608; TYPE:VV
      Result = MakeValidValues(Array("Redundancy", "Increased Rate"))
      '   END FORMULA; PROP ID:9608; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Reason_For_Multiple_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Brush_Required_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Brush_Required").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9610; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9610; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Brush_Required_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Tamp_Pad_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Tamp_Pad_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9634; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9634; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Tamp_Pad_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Type_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9606; TYPE:VV
      Result = MakeValidValues(Array("Top Apply", "Side Apply"))
      '   END FORMULA; PROP ID:9606; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Type_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Applicator_Type_Tamp_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Applicator_Type_Tamp").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9609; TYPE:VV
      Result = MakeValidValues(Array("Electric Servo", "Pneumatic"))
      '   END FORMULA; PROP ID:9609; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Applicator_Type_Tamp_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_User_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Print_Speed_User").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9632; TYPE:VV
      Select Case Me.App_Label_Print_Speed_User_UOM
	Case "IN/SEC"
		Result = MakeValidValues(Array(6, 8, 10, 12, 14))
	Case Else
		Result = MakeValidValues(Array(152.4, 203.2, 254, 304.8, 355.6))
End Select
      '   END FORMULA; PROP ID:9632; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Speed_User_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Print_Speed_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Print_Speed_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9615; TYPE:VV
      Result = MakeValidValues(Array("IN/SEC", "MM/SEC"))
      '   END FORMULA; PROP ID:9615; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Print_Speed_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Label_Printed_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Label_Printed_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9614; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9614; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Label_Printed_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Max_Tamp_Stroke_Req_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Max_Tamp_Stroke_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9621; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9621; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Max_Tamp_Stroke_Req_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9720; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9720; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Dist_Req_Data_Xmit_to_Tamp_Prepos_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9729; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9729; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Avg_to_Min_Box_Tamp_Clr_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9655; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9655; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Gap_Req_Max_Min_Box_Tamp_Clr_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9723; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9723; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Req_Compl_PandA_Cycle_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Avg_Carton_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9787; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9787; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Avg_Carton_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_H_to_H_Spacing_Largest_Carton_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9716; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9716; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_H_to_H_Spacing_Largest_Carton_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Min_Pitch_Btw_App_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Min_Pitch_Btw_App_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9619; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9619; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Min_Pitch_Btw_App_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Return_Stroke_Tamp_Clearance_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Return_Stroke_Tamp_Clearance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9618; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9618; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Return_Stroke_Tamp_Clearance_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_App_Tamp_Home_Height_Above_Conveyor_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("App_Tamp_Home_Height_Above_Conveyor_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9620; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9620; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_App_Tamp_Home_Height_Above_Conveyor_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Min_Gap_Required_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Min_Gap_Required_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9552; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9552; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Min_Gap_Required_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Required_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Required").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9550; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9550; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Required_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9554; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9554; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Avg_Carton_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9553; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9553; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Spacing_Cont_Flow_Max_Carton_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Reject_Diverter_Type_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Reject_Diverter_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9551; TYPE:VV
      Select Case Me.Reject_Diverter_Required
	Case "Yes"
		Result = MakeValidValues(Array("MDR RAT", "MDR Swivel", "WD Pop-Up Wheel", "Transnorm TS4800 30deg"))
	Case Else
		Result = MakeValidValues(Array(""))
End Select
      '   END FORMULA; PROP ID:9551; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Reject_Diverter_Type_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Max_Box_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Max_Box_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9836; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9836; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Max_Box_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Gap_on_Min_Box_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Gap_on_Min_Box_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9835; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9835; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Gap_on_Min_Box_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Min_Head_to_Head_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Min_Head_to_Head_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9841; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9841; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Min_Head_to_Head_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_PandA_Scale_Required_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_PandA_Scale_Required").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9829; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9829; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_PandA_Scale_Required_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Bed_Length_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Bed_Length_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9832; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9832; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Bed_Length_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Gap_Override_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Gap_Override_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9833; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9833; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Gap_Override_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Scale_Type_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Scale_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9830; TYPE:VV
      Result = MakeValidValues(Array("Single Stage", "Multi-Stage"))
      '   END FORMULA; PROP ID:9830; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Scale_Type_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Scale_Spacing_Type_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Scale_Spacing_Type").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9831; TYPE:VV
      Result = MakeValidValues(Array("Head-to-Head", "Tail-to-Head"))
      '   END FORMULA; PROP ID:9831; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Scale_Spacing_Type_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Carton_Presentation_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Carton_Presentation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9794; TYPE:VV
      Result = MakeValidValues(Array("Edge Aligned", "Random"))
      '   END FORMULA; PROP ID:9794; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Carton_Presentation_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9808; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9808; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Distance_Last_Tamp__Scan_Window_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Label_Orientation_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Label_Orientation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9793; TYPE:VV
      Result = MakeValidValues(Array("Uni-Directional", "Omni-Directional"))
      '   END FORMULA; PROP ID:9793; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Label_Orientation_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9810; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9810; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Max_Linear_Length_Carton_Scanned_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Gap_Scan_Application_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Gap_Scan_Application_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9806; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9806; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Gap_Scan_Application_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9811; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9811; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Min_Xmit_Point_FromScan_Window_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Rescan_Barcode_For_Verification_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Rescan_Barcode_For_Verification").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9790; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9790; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Rescan_Barcode_For_Verification_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scan_Window_Length_Req_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scan_Window_Length_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9807; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9807; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scan_Window_Length_Req_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scanner_Configuration_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scanner_Configuration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9791; TYPE:VV
      Select Case Me.Parent.Scan_Configurations.Quantity
	Case 0
		Result = MakeValidValues(Array("None"))
	Case Else
		Dim vv As New ValidValues()
		For Each part As Part In me.Parent.Scan_Configurations
			vv.add(part.Properties("Configuration_Name").Value)
		Next
		Result = vv
End Select
      '   END FORMULA; PROP ID:9791; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scanner_Configuration_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Scanner_Data_Transmit_Mode_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Scanner_Data_Transmit_Mode").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9803; TYPE:VV
      Result = MakeValidValues(Array("Lead Edge", "Trail Edge"))
      '   END FORMULA; PROP ID:9803; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Scanner_Data_Transmit_Mode_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Shadowing_Allowed_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Shadowing_Allowed").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9802; TYPE:VV
      Select Case Me.Ver_Scan_Shadowing_Potential
	Case "Yes"
		Result = MakeValidValues(Array("No", "Partial", "Full"))
	Case Else
		Result = MakeValidValues(Array(""))
End Select
      '   END FORMULA; PROP ID:9802; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Shadowing_Allowed_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Shadowing_Potential_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Shadowing_Potential").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9799; TYPE:VV
      Result = MakeValidValues(Array("Yes", "No"))
      '   END FORMULA; PROP ID:9799; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Shadowing_Potential_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Ver_Scan_Tracking_Photocell_Distance_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Ver_Scan_Tracking_Photocell_Distance_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9809; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9809; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Ver_Scan_Tracking_Photocell_Distance_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_H_to_H_Spacing_Req_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_H_to_H_Spacing_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9860; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9860; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_H_to_H_Spacing_Req_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Summary_Min_T_to_H_Gap_Req_User_UOM_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Summary_Min_T_to_H_Gap_Req_User_UOM").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9861; TYPE:VV
      Result = MakeValidValues(Array("IN", "MM"))
      '   END FORMULA; PROP ID:9861; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_Summary_Min_T_to_H_Gap_Req_User_UOM_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_PandA_Theoretical_Max_Throughput_Rate_PARTNAMES() as String
      
      Dim Result as String = ""
      Dim ctx as Object
      Try
      ctx = this
      '   BEGIN FORMULA; SUB ID:267; TYPE:PN
      
      '   END FORMULA; SUB ID:267; TYPE:PN
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_PandA_Theoretical_Max_Throughput_Rate_PARTNAMES", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function

      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_PandA_Theoretical_Max_Throughput_Rate_QUANTITY() as Integer 'Long
      
      Dim Result as Integer = 0 'Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Subparts("PandA_Theoretical_Max_Throughput_Rate").GetDebugState(Rulestream.Kernel.Subpart.FormulaDebugTypes.QUANTITY_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; SUB ID:267; TYPE:QF
      Dim count As Integer = 0
Dim maxLength As Double = Me.MTBH_Length_Maximum_IN
Dim minLength As Double = Me.MTBH_Length_Minimum_IN

While minLength <= maxLength
	count += 1
	minLength += 1
End While

Result = count
      '   END FORMULA; SUB ID:267; TYPE:QF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_PandA_Theoretical_Max_Throughput_Rate_QUANTITY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function

      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_PandA_Theoretical_Max_Throughput_Rate_OPTIMALPARTFAMILY() as String
      
      Dim Result as String = ""
      Dim ctx as Object
      Try
      ctx = this
      If Me.Subparts("PandA_Theoretical_Max_Throughput_Rate").GetDebugState(Rulestream.Kernel.Subpart.FormulaDebugTypes.OPF_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; SUB ID:267; TYPE:OP
      result = "CAE_App_Calc_Print_And_Apply_Theoretical_Max"
      '   END FORMULA; SUB ID:267; TYPE:OP
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_App_Calc_Print_And_Apply.Formula_PandA_Theoretical_Max_Throughput_Rate_OPTIMALPARTFAMILY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Function GetRecordsetSQL(ByVal lngDBConID as Long) as String Implements RuleStream.IRsPartFormulas.GetRecordsetSQL
    Dim strSelectStmt As String = ""
    Return strSelectStmt
    End Function
    #End Region

    #Region "Event Handling "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub AddRsEventHandlerMappings()
    
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub RemoveRsEventHandlerMappings()
    
    End Sub
    #End Region

    End Class

  