Option Strict Off
Option Explicit On 
Option Infer On

'$ Application: IGSEST
'$ PartFamily: CAE_TTCB_Costing_Mech
'$ GenerateDate: 07/18/2025 11:37:15

    Imports Microsoft.VisualBasic
    Imports System
    Imports System.IO
    Imports System.Data
    Imports System.Windows.Forms
    Imports System.Collections
    Imports System.Diagnostics
    Imports System.Math
    Imports System.Xml
    Imports System.Xml.Linq
    Imports RuleStream
    Imports RuleStream.Kernel
    Imports System.Collections.Generic
    Imports RulestreamTCUtilities
    Imports IGSEST.swMateType_e
    Imports IGSEST.swMateAlign_e
    Imports IGSEST.severity

    Public Class [CAE_TTCB_Costing_Mech]
    
    Inherits RuleStream.Kernel.Part
    Implements RuleStream.IRsPartFormulas

    '*************************************************************************
    '*                                                                       *
    '*   This source code, together with any object or execution files       *
    '*   generated herefrom (whether by compiling, translating, or linking   *
    '*   this source file to any header files, resource files, library       *
    '*   files, other source files or object files) are confidential and     *
    '*   proprietary to Siemens Product Lifecycle Management Software Inc.   *
    '*   No person may sell, offer for sale, copy, use, compile, translate   *
    '*   or link this source                                                 *
    '*   file without the written prior approval of Siemens Product          *
    '*   Lifecycle Management Software Inc.                                  *
    '*                                                                       *
    '*   Copyright (C) 2024 Siemens. All rights reserved.                    *
    '*                                                                       *
    '*************************************************************************

    Private this as CAE_TTCB_Costing_Mech = me

    #Region " IRsPartFormulas Implementation "

    Public Function GetNormalValue(ByVal Value as Object, ByVal propertyName As String, ByVal context As String) As Double Implements RuleStream.IRsPartFormulas.GetNormalValue
    Dim MethodName as String = string.format("Formula_{0}_NORMALVALUE{1}", propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method, Value)
    End Function

    Public Function GetOptimalPartFamily(ByVal subpartSpecName As String, ByVal context As String) As String Implements RuleStream.IRsPartFormulas.GetOptimalPartFamily
    Dim MethodName as String = string.format("Formula_{0}_OPTIMALPARTFAMILY{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetPartNames(ByVal subpartSpecName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetPartNames
    Dim MethodName as String = string.format("Formula_{0}_PARTNAMES{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetParts(ByVal specName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetParts
    Dim MethodName as String = string.format("Formula_{0}_PARTS{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetProcessStepComment(ByVal processId As String, ByVal processStep As String) As String Implements RuleStream.IRsPartFormulas.GetProcessStepComment
    Dim Result as String = ""
    
    Return Result
    End Function

    Public Function GetProcessStepStatus(ByVal processId As String, ByVal processStep As String) As Integer Implements RuleStream.IRsPartFormulas.GetProcessStepStatus
    Dim Result as Integer 'Long
    
    Return Result
    End Function

    Public Function GetQuantity(ByVal subpartSpecName As String, ByVal context As String) As Integer Implements RuleStream.IRsPartFormulas.GetQuantity
    Dim MethodName as String = string.format("Formula_{0}_QUANTITY{1}",subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResult(ByVal propertyName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetResult
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResultCustomCheckDependancy(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetResultCustomCheckDependancy
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetUserChange(ByVal specName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetUserChange
    Dim MethodName as String = string.format("Formula_{0}_USERCHANGE{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetHideCalculatedValue(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetHideCalculatedValue
    Dim MethodName as String = string.format("Formula_{0}_HIDE_CALCULATED_VALUE{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Sub NewContextInit() Implements RuleStream.IRsPartFormulas.NewContextInit
    NewContextInit_Properties()
    NewContextInit_ValidValues()
    NewContextInit_Subparts()
    NewContextInit_Connections()
    NewContextInit_DB()
    End Sub

    Public Sub OnChanged(ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method)
    Select Case specName & "_" & context
    End Select
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Sub OnChanged(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Function OnChangedStatus(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String)As Boolean Implements RuleStream.IRsPartFormulas.OnChangedStatus
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Dim Status as Boolean = False
    Select Case specName & "_" & context
    Case Else
    Status = False
    End Select
    Return Status
    End Function

    #End Region

    #Region " Properties, Subparts, Connections "
    
          Public Property [MEI_Adjust_Dollar_Clean_Up]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Clean_Up").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Clean_Up").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_Fencing]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Fencing").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Fencing").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_Gates]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Gates").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Gates").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_Miscellaneous_1]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Miscellaneous_1").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Miscellaneous_1").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_Miscellaneous_2]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Miscellaneous_2").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Miscellaneous_2").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_Miscellaneous_3]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Miscellaneous_3").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Miscellaneous_3").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_System_Efficiency]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_System_Efficiency").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_System_Efficiency").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_Total]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Dollar_TTCB_Sorter]() As Double
      Get
      Return Properties("MEI_Adjust_Dollar_TTCB_Sorter").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Dollar_TTCB_Sorter").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Clean_Up]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Clean_Up").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Clean_Up").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Fencing]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Fencing").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Fencing").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Gates]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Gates").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Gates").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Miscellaneous_1]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Miscellaneous_1").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Miscellaneous_1").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Miscellaneous_2]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Miscellaneous_2").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Miscellaneous_2").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Miscellaneous_3]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Miscellaneous_3").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Miscellaneous_3").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_System_Efficiency]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_System_Efficiency").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_System_Efficiency").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_Total]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Hours_TTCB_Sorter]() As Double
      Get
      Return Properties("MEI_Adjust_Hours_TTCB_Sorter").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Hours_TTCB_Sorter").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_Length_TTCB_Sorter]() As Double
      Get
      Return Properties("MEI_Adjust_Length_TTCB_Sorter").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_Length_TTCB_Sorter").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Adjust_TTCB_Sorter_Length_in_Meters]() As Double
      Get
      Return Properties("MEI_Adjust_TTCB_Sorter_Length_in_Meters").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Adjust_TTCB_Sorter_Length_in_Meters").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_1_2_Inch_pipeCost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_1_2_Inch_pipeCost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_1_2_Inch_pipeCost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_3_Inch_pipe_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_3_Inch_pipe_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_3_Inch_pipe_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_7_8_Inch_pipe_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_7_8_Inch_pipe_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_7_8_Inch_pipe_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_A_C_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_A_C_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_A_C_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_Dryer_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_Dryer_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_Dryer_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_FILTER_REG_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_FILTER_REG_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_FILTER_REG_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_Hours_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_Mat_Cost_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_Mat_Cost_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_Mat_Cost_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_Red_A_C_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_Red_A_C_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_Red_A_C_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Air_Pipe_Tubing_Cost]() As Double
      Get
      Return Properties("MEI_Air_Pipe_Tubing_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Air_Pipe_Tubing_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Ajust_Total_Percentage]() As Double
      Get
      Return Properties("MEI_Ajust_Total_Percentage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Ajust_Total_Percentage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Average_Hrs_per_Wk]() As Double
      Get
      Return Properties("MEI_Crew_Average_Hrs_per_Wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Average_Hrs_per_Wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Avg_Crew_Size_Installers]() As Double
      Get
      Return Properties("MEI_Crew_Avg_Crew_Size_Installers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Avg_Crew_Size_Installers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Comm_Sppt_Hrs_per_Wk]() As Double
      Get
      Return Properties("MEI_Crew_Comm_Sppt_Hrs_per_Wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Comm_Sppt_Hrs_per_Wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Head_Count_Installer]() As Double
      Get
      Return Properties("MEI_Crew_Head_Count_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Head_Count_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Head_Count_Lead_Men]() As Double
      Get
      Return Properties("MEI_Crew_Head_Count_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Head_Count_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Head_Count_Superintendent]() As Double
      Get
      Return Properties("MEI_Crew_Head_Count_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Head_Count_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Head_Count_Total]() As Double
      Get
      Return Properties("MEI_Crew_Head_Count_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Head_Count_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Mobilization_Cost_Per_Person]() As Double
      Get
      Return Properties("MEI_Crew_Mobilization_Cost_Per_Person").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Mobilization_Cost_Per_Person").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Mobilization_Count_Installer]() As Double
      Get
      Return Properties("MEI_Crew_Mobilization_Count_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Mobilization_Count_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Mobilization_Count_Lead_Men]() As Double
      Get
      Return Properties("MEI_Crew_Mobilization_Count_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Mobilization_Count_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Mobilization_Count_Superintendent]() As Double
      Get
      Return Properties("MEI_Crew_Mobilization_Count_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Mobilization_Count_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Peak_Crew_Hrs_per_Wk]() As Double
      Get
      Return Properties("MEI_Crew_Peak_Crew_Hrs_per_Wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Peak_Crew_Hrs_per_Wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Peak_Crew_Installers]() As Double
      Get
      Return Properties("MEI_Crew_Peak_Crew_Installers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Peak_Crew_Installers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Total_Mobilization_Cost_Installer]() As Double
      Get
      Return Properties("MEI_Crew_Total_Mobilization_Cost_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Total_Mobilization_Cost_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Total_Mobilization_Cost_Lead_Men]() As Double
      Get
      Return Properties("MEI_Crew_Total_Mobilization_Cost_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Total_Mobilization_Cost_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Total_Mobilization_Cost_Superintendent]() As Double
      Get
      Return Properties("MEI_Crew_Total_Mobilization_Cost_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Total_Mobilization_Cost_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Crew_Total_Mobilization_Cost_Total]() As Double
      Get
      Return Properties("MEI_Crew_Total_Mobilization_Cost_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Crew_Total_Mobilization_Cost_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Equipment_Rental_Cost]() As Double
      Get
      Return Properties("MEI_Equipment_Rental_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Equipment_Rental_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Equipment_Rental_Dumpsters_Cost]() As Double
      Get
      Return Properties("MEI_Equipment_Rental_Dumpsters_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Equipment_Rental_Dumpsters_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Equipment_Rental_Porta_Johns_Cost]() As Double
      Get
      Return Properties("MEI_Equipment_Rental_Porta_Johns_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Equipment_Rental_Porta_Johns_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Cranes_SmallIndoor]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Cranes_SmallIndoor").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Cranes_SmallIndoor").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Dumpsters]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Dumpsters").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Dumpsters").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Fork_Truck]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Fork_Truck").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Fork_Truck").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Large_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Large_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Large_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Large_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Large_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Large_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Large_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Large_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Large_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Porta_Johns]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Porta_Johns").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Porta_Johns").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Single_Person_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Single_Person_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Single_Person_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Site_Trailer]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Site_Trailer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Site_Trailer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Small_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Small_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Small_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Small_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Small_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Small_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Small_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Small_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Small_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Install_Duration_Welders]() As Double
      Get
      Return Properties("MEI_EquipRent_Install_Duration_Welders").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Install_Duration_Welders").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Cranes_Large_Outdoors]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Cranes_Large_Outdoors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Cranes_Large_Outdoors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Cranes_Small_Indoors]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Cranes_Small_Indoors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Cranes_Small_Indoors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Dumpsters]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Dumpsters").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Dumpsters").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Fork_Truck]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Fork_Truck").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Fork_Truck").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Large_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Large_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Large_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Large_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Large_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Large_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Large_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Large_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Large_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Porta_Johns]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Porta_Johns").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Porta_Johns").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Single_Person_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Single_Person_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Single_Person_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Site_Trailer]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Site_Trailer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Site_Trailer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Small_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Small_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Small_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Small_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Small_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Small_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Small_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Small_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Small_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Quantity_Welders]() As Double
      Get
      Return Properties("MEI_EquipRent_Quantity_Welders").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Quantity_Welders").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Cranes_Small_Indoors]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Cranes_Small_Indoors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Cranes_Small_Indoors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Dumpsters]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Dumpsters").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Dumpsters").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Fork_Truck]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Fork_Truck").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Fork_Truck").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Large_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Large_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Large_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Large_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Large_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Large_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Large_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Large_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Large_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Porta_Johns]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Porta_Johns").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Porta_Johns").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Single_Person_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Single_Person_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Single_Person_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Site_Trailer]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Site_Trailer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Site_Trailer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Small_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Small_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Small_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Small_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Small_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Small_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Small_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Small_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Small_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Total_Cost_Welders]() As Double
      Get
      Return Properties("MEI_EquipRent_Total_Cost_Welders").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Total_Cost_Welders").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Dumpsters]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Dumpsters").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Dumpsters").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Fork_Truck]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Fork_Truck").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Fork_Truck").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Large_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Large_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Large_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Large_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Large_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Large_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Porta_Johns]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Porta_Johns").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Porta_Johns").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Single_Person_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Single_Person_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Single_Person_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Site_Trailer]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Site_Trailer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Site_Trailer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Small_Boom_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Small_Boom_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Small_Boom_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Small_Telehandler]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Small_Telehandler").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Small_Telehandler").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_EquipRent_Weekly_Rate_Welders]() As Double
      Get
      Return Properties("MEI_EquipRent_Weekly_Rate_Welders").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_EquipRent_Weekly_Rate_Welders").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Factors_Air_Piping]() As String
      Get
      Return Properties("MEI_Factors_Air_Piping").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Factors_Air_Piping").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Factors_Risk_Rating]() As String
      Get
      Return Properties("MEI_Factors_Risk_Rating").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Factors_Risk_Rating").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Factors_Seismic]() As Double
      Get
      Return Properties("MEI_Factors_Seismic").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Factors_Seismic").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Factors_Value]() As Double
      Get
      Return Properties("MEI_Factors_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Factors_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Fencing_Footage]() As Double
      Get
      Return Properties("MEI_Fencing_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Fencing_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Fencing_Footage_Cost_per_Hours]() As Double
      Get
      Return Properties("MEI_Fencing_Footage_Cost_per_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Fencing_Footage_Cost_per_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Fencing_Footage_Total]() As Double
      Get
      Return Properties("MEI_Fencing_Footage_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Fencing_Footage_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Gates_QTY]() As Double
      Get
      Return Properties("MEI_Gates_QTY").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Gates_QTY").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Gates_QTY_Cost_per_Hours]() As Double
      Get
      Return Properties("MEI_Gates_QTY_Cost_per_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Gates_QTY_Cost_per_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Gates_QTY_Total]() As Double
      Get
      Return Properties("MEI_Gates_QTY_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Gates_QTY_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Current_Rate_IG_Installer]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Current_Rate_IG_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Current_Rate_IG_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Current_Rate_Lead_Person]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Current_Rate_Lead_Person").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Current_Rate_Lead_Person").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Current_Rate_Superintendent]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Current_Rate_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Current_Rate_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_New_Rate_IG_Installer]() As Double
      Get
      Return Properties("MEI_Labor_Rate_New_Rate_IG_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_New_Rate_IG_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_New_Rate_Lead_Person]() As Double
      Get
      Return Properties("MEI_Labor_Rate_New_Rate_Lead_Person").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_New_Rate_Lead_Person").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_New_Rate_Superintendent]() As Double
      Get
      Return Properties("MEI_Labor_Rate_New_Rate_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_New_Rate_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Percent_Adjustment]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Percent_Adjustment").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Percent_Adjustment").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Percent_Adjustment_IG_Installer]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Percent_Adjustment_IG_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Percent_Adjustment_IG_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Percent_Adjustment_Lead_Person]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Percent_Adjustment_Lead_Person").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Percent_Adjustment_Lead_Person").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Percent_Adjustment_Superintendent]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Percent_Adjustment_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Percent_Adjustment_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Tot_Cost_Adj_Installer]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Tot_Cost_Adj_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Tot_Cost_Adj_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Tot_Cost_Adj_Superintendent]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Tot_Cost_Adj_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Tot_Cost_Adj_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Labor_Rate_Total_Cost_Adjustment]() As Double
      Get
      Return Properties("MEI_Labor_Rate_Total_Cost_Adjustment").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Labor_Rate_Total_Cost_Adjustment").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Mech_Conveyor_Installation_Cost]() As Double
      Get
      Return Properties("MEI_Mech_Conveyor_Installation_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Mech_Conveyor_Installation_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Mech_Conveyor_Installation_Hours]() As Double
      Get
      Return Properties("MEI_Mech_Conveyor_Installation_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Mech_Conveyor_Installation_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Miscellaneous_Administrative_Cost]() As Double
      Get
      Return Properties("MEI_Miscellaneous_Administrative_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Miscellaneous_Administrative_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Miscellaneous_Cost]() As Double
      Get
      Return Properties("MEI_Miscellaneous_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Miscellaneous_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Other_Cost_Onsite_Admin_Duration_Wks]() As Double
      Get
      Return Properties("MEI_Other_Cost_Onsite_Admin_Duration_Wks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Other_Cost_Onsite_Admin_Duration_Wks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week]() As Double
      Get
      Return Properties("MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Other_Cost_Permit_Hours]() As Double
      Get
      Return Properties("MEI_Other_Cost_Permit_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Other_Cost_Permit_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Other_Cost_Qty_Gang_Boxes]() As Double
      Get
      Return Properties("MEI_Other_Cost_Qty_Gang_Boxes").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Other_Cost_Qty_Gang_Boxes").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Other_Cost_Qty_Trucks]() As Double
      Get
      Return Properties("MEI_Other_Cost_Qty_Trucks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Other_Cost_Qty_Trucks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Comm_No_of_Installers]() As Double
      Get
      Return Properties("MEI_People_Needs_Comm_No_of_Installers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Comm_No_of_Installers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Comm_No_of_Lead_Men]() As Double
      Get
      Return Properties("MEI_People_Needs_Comm_No_of_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Comm_No_of_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Comm_No_of_Superintendents]() As Double
      Get
      Return Properties("MEI_People_Needs_Comm_No_of_Superintendents").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Comm_No_of_Superintendents").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Install_No_of_Installers]() As Double
      Get
      Return Properties("MEI_People_Needs_Install_No_of_Installers").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Install_No_of_Installers").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Install_No_of_Lead_Men]() As Double
      Get
      Return Properties("MEI_People_Needs_Install_No_of_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Install_No_of_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Install_No_of_Superintendents]() As Double
      Get
      Return Properties("MEI_People_Needs_Install_No_of_Superintendents").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Install_No_of_Superintendents").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Work_Percent_No_of_Lead_Men]() As Double
      Get
      Return Properties("MEI_People_Needs_Work_Percent_No_of_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Work_Percent_No_of_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_People_Needs_Work_Percent_No_of_Superintendent]() As Double
      Get
      Return Properties("MEI_People_Needs_Work_Percent_No_of_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_People_Needs_Work_Percent_No_of_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Permits_Cost]() As Double
      Get
      Return Properties("MEI_Permits_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Permits_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Info_Customer]() As String
      Get
      Return Properties("MEI_Project_Info_Customer").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Project_Info_Customer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Info_Description]() As String
      Get
      Return Properties("MEI_Project_Info_Description").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Project_Info_Description").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Info_Location]() As String
      Get
      Return Properties("MEI_Project_Info_Location").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Project_Info_Location").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Info_Number]() As Long
      Get
      Return Properties("MEI_Project_Info_Number").Value
      End Get
      Set(ByVal Value As Long)
      Properties("MEI_Project_Info_Number").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Info_Project_Tier]() As String
      Get
      Return Properties("MEI_Project_Info_Project_Tier").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Project_Info_Project_Tier").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Info_Quote_Date]() As Date
      Get
      Return Properties("MEI_Project_Info_Quote_Date").Value
      End Get
      Set(ByVal Value As Date)
      Properties("MEI_Project_Info_Quote_Date").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Project_Tier_Value]() As Double
      Get
      Return Properties("MEI_Project_Tier_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Project_Tier_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Schedule_End_Mechanical_Installation]() As Date
      Get
      Return Properties("MEI_Schedule_End_Mechanical_Installation").Value
      End Get
      Set(ByVal Value As Date)
      Properties("MEI_Schedule_End_Mechanical_Installation").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Schedule_End_Run_In_Level_5]() As Date
      Get
      Return Properties("MEI_Schedule_End_Run_In_Level_5").Value
      End Get
      Set(ByVal Value As Date)
      Properties("MEI_Schedule_End_Run_In_Level_5").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Schedule_Start_Mechanical_Installation]() As Date
      Get
      Return Properties("MEI_Schedule_Start_Mechanical_Installation").Value
      End Get
      Set(ByVal Value As Date)
      Properties("MEI_Schedule_Start_Mechanical_Installation").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Schedule_Weeks_Comm]() As Double
      Get
      Return Properties("MEI_Schedule_Weeks_Comm").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Schedule_Weeks_Comm").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Schedule_Weeks_Install]() As Double
      Get
      Return Properties("MEI_Schedule_Weeks_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Schedule_Weeks_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Feet_Catwalk]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Feet_Catwalk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Feet_Catwalk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Feet_Demo]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Feet_Demo").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Feet_Demo").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Feet_GRID_Structure]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Feet_GRID_Structure").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Feet_GRID_Structure").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Feet_Platform_Bar_Grating]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Feet_Platform_Bar_Grating").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Feet_Platform_Bar_Grating").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Feet_Platform_Resin_Deck]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Feet_Platform_Resin_Deck").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Feet_Platform_Resin_Deck").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Feet_Total]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Feet_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Feet_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Hour_Catwalk]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Hour_Catwalk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Hour_Catwalk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Hour_Demo]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Hour_Demo").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Hour_Demo").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Hour_GRID_Structure]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Hour_GRID_Structure").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Hour_GRID_Structure").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Hour_Platform_Bar_Grating]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Hour_Platform_Bar_Grating").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Hour_Platform_Bar_Grating").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Hour_Platform_Resin_Deck]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Hour_Platform_Resin_Deck").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Hour_Platform_Resin_Deck").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Hour_Total]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Hour_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Hour_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Per_Ft_Catwalk]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Per_Ft_Catwalk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Per_Ft_Catwalk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Per_Ft_Demo]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Per_Ft_Demo").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Per_Ft_Demo").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Structures_Platforms_Per_Ft_Total]() As Double
      Get
      Return Properties("MEI_Structures_Platforms_Per_Ft_Total").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Structures_Platforms_Per_Ft_Total").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent__Hours]() As Double
      Get
      Return Properties("MEI_Superintendent__Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent__Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Commissioning_Cost]() As Double
      Get
      Return Properties("MEI_Superintendent_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Commissioning_Hours]() As Double
      Get
      Return Properties("MEI_Superintendent_Commissioning_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Commissioning_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Cost]() As Double
      Get
      Return Properties("MEI_Superintendent_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Install_Cost]() As Double
      Get
      Return Properties("MEI_Superintendent_Install_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Install_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Install_Hours]() As Double
      Get
      Return Properties("MEI_Superintendent_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Rate]() As Double
      Get
      Return Properties("MEI_Superintendent_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Stagnant_Hours_Cost]() As Double
      Get
      Return Properties("MEI_Superintendent_Stagnant_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Stagnant_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Superintendent_Stagnant_Hours_Hours]() As Double
      Get
      Return Properties("MEI_Superintendent_Stagnant_Hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Superintendent_Stagnant_Hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Supplies_Consumables_All_Other_Cost]() As Double
      Get
      Return Properties("MEI_Supplies_Consumables_All_Other_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Supplies_Consumables_All_Other_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Supplies_Consumables_Cost]() As Double
      Get
      Return Properties("MEI_Supplies_Consumables_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Supplies_Consumables_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Supplies_Consumables_HW_Air_Piping_Cost]() As Double
      Get
      Return Properties("MEI_Supplies_Consumables_HW_Air_Piping_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Supplies_Consumables_HW_Air_Piping_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Total_Mobilization_Cost]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Total_Mobilization_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Total_Mobilization_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Crew_Total_Travel_Cost]() As Double
      Get
      Return Properties("MEI_Travel_Cost_Crew_Total_Travel_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Cost_Crew_Total_Travel_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Per_Diem_Range]() As String
      Get
      Return Properties("MEI_Travel_Cost_Per_Diem_Range").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Travel_Cost_Per_Diem_Range").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Cost_Per_Diem_Range_Link]() As String
      Get
      Return Properties("MEI_Travel_Cost_Per_Diem_Range_Link").Value
      End Get
      Set(ByVal Value As String)
      Properties("MEI_Travel_Cost_Per_Diem_Range_Link").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_Travel_Expense_Cost]() As Double
      Get
      Return Properties("MEI_Travel_Expense_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_Travel_Expense_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Costing_D9]() As Double
      Get
      Return Properties("MEI_TTCB_Costing_D9").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Costing_D9").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Commissioning_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Commissioning_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Commissioning_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Commissioning_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Demo_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Demo_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Demo_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Demo_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Demo_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Demo_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Install_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Install_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Install_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Install_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Miscellaneous_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Miscellaneous_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Miscellaneous_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Miscellaneous_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Miscellaneous_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Miscellaneous_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Rate]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Stagnant_Hours_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Stagnant_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Stagnant_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_Stagnant_Hours_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_Stagnant_Hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_Stagnant_Hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Commissioning_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Commissioning_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Commissioning_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Commissioning_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Install_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Install_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Install_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Install_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Rate]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Stagnant_Hours_Cost]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [MEI_TTCB_Lead_Person_Stagnant_Hours_Hours]() As Double
      Get
      Return Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [PartNumber]() As String
      Get
      Return Properties("PartNumber").Value
      End Get
      Set(ByVal Value As String)
      Properties("PartNumber").CalculatedValue = Value
      End Set
      End Property
    
    #End Region

    #Region " Initialization "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize() Implements RuleStream.IRsPartFormulas.Initialize
    Dim oSpec As Rulestream.Kernel.Spec = Nothing
    Dim oConnection as Rulestream.Kernel.Connection = Nothing
    Dim oSubpart as Rulestream.Kernel.Subpart = Nothing
    dim oMasterDoc as Rulestream.Kernel.MasterDoc = Nothing
    InitPart("CAE_TTCB_Costing_Mech", <a><![CDATA[CAE_TTCB_Costing_Mech]]></a>.Value, 401, "IGSEST",  "N", "N", False, False, "In Development", "", "", "", "", "",  "GLOBAL\H611896", "07/17/2025 13:33:02")
    AddProperty("8460", "MEI_Adjust_Dollar_Clean_Up", <a><![CDATA[MEI_Adjust_Dollar_Clean_Up]]></a>.Value, "Mech Install^'TTCB Costing'!I46", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:59 AM")
    AddProperty("8461", "MEI_Adjust_Dollar_Fencing", <a><![CDATA[MEI_Adjust_Dollar_Fencing]]></a>.Value, "Mech Install^'TTCB Costing'!I47", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:02 AM")
    AddProperty("8462", "MEI_Adjust_Dollar_Gates", <a><![CDATA[MEI_Adjust_Dollar_Gates]]></a>.Value, "Mech Install^'TTCB Costing'!I48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:05 AM")
    AddProperty("8463", "MEI_Adjust_Dollar_Miscellaneous_1", <a><![CDATA[MEI_Adjust_Dollar_Miscellaneous_1]]></a>.Value, "Mech Install^'TTCB Costing'!I49", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:08 AM")
    AddProperty("8464", "MEI_Adjust_Dollar_Miscellaneous_2", <a><![CDATA[MEI_Adjust_Dollar_Miscellaneous_2]]></a>.Value, "Mech Install^'TTCB Costing'!I50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:11 AM")
    AddProperty("8465", "MEI_Adjust_Dollar_Miscellaneous_3", <a><![CDATA[MEI_Adjust_Dollar_Miscellaneous_3]]></a>.Value, "Mech Install^'TTCB Costing'!I51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:14 AM")
    AddProperty("8459", "MEI_Adjust_Dollar_System_Efficiency", <a><![CDATA[MEI_Adjust_Dollar_System_Efficiency]]></a>.Value, "Mech Install^'TTCB Costing'!I45", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:57 AM")
    AddProperty("8466", "MEI_Adjust_Dollar_Total", <a><![CDATA[MEI_Adjust_Dollar_Total]]></a>.Value, "Mech Install^'TTCB Costing'!I52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:43:52 AM")
    AddProperty("8458", "MEI_Adjust_Dollar_TTCB_Sorter", <a><![CDATA[MEI_Adjust_Dollar_TTCB_Sorter]]></a>.Value, "Mech Install^'TTCB Costing'!I44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:55 AM")
    AddProperty("8469", "MEI_Adjust_Hours_Clean_Up", <a><![CDATA[MEI_Adjust_Hours_Clean_Up]]></a>.Value, "Mech Install^'TTCB Costing'!J46", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:44:53 AM")
    AddProperty("8470", "MEI_Adjust_Hours_Fencing", <a><![CDATA[MEI_Adjust_Hours_Fencing]]></a>.Value, "Mech Install^'TTCB Costing'!J47", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:45:09 AM")
    AddProperty("8471", "MEI_Adjust_Hours_Gates", <a><![CDATA[MEI_Adjust_Hours_Gates]]></a>.Value, "Mech Install^'TTCB Costing'!J48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:45:24 AM")
    AddProperty("8472", "MEI_Adjust_Hours_Miscellaneous_1", <a><![CDATA[MEI_Adjust_Hours_Miscellaneous_1]]></a>.Value, "Mech Install^'TTCB Costing'!J49", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:47 AM")
    AddProperty("8473", "MEI_Adjust_Hours_Miscellaneous_2", <a><![CDATA[MEI_Adjust_Hours_Miscellaneous_2]]></a>.Value, "Mech Install^'TTCB Costing'!J50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:50 AM")
    AddProperty("8474", "MEI_Adjust_Hours_Miscellaneous_3", <a><![CDATA[MEI_Adjust_Hours_Miscellaneous_3]]></a>.Value, "Mech Install^'TTCB Costing'!J51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:53 AM")
    AddProperty("8468", "MEI_Adjust_Hours_System_Efficiency", <a><![CDATA[MEI_Adjust_Hours_System_Efficiency]]></a>.Value, "Mech Install^'TTCB Costing'!J45", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:44:28 AM")
    AddProperty("8475", "MEI_Adjust_Hours_Total", <a><![CDATA[MEI_Adjust_Hours_Total]]></a>.Value, "Mech Install^'TTCB Costing'!J52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:45:53 AM")
    AddProperty("8467", "MEI_Adjust_Hours_TTCB_Sorter", <a><![CDATA[MEI_Adjust_Hours_TTCB_Sorter]]></a>.Value, "Mech Install^'TTCB Costing'!J44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:32 AM")
    AddProperty("9887", "MEI_Adjust_Length_TTCB_Sorter", <a><![CDATA[MEI_Adjust_Length_TTCB_Sorter]]></a>.Value, "Mech Install^'TTCB Costing'!K44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/10/2025 8:37:40 PM")
    AddProperty("8476", "MEI_Adjust_TTCB_Sorter_Length_in_Meters", <a><![CDATA[MEI_Adjust_TTCB_Sorter_Length_in_Meters]]></a>.Value, "Mech Install^'TTCB Costing'!K44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:43:59 AM")
    AddProperty("8409", "MEI_Air_Pipe_1_2_Inch_pipeCost", <a><![CDATA[MEI_Air_Pipe_1_2_Inch_pipeCost]]></a>.Value, "Mech Install^'TTCB Costing'!F48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:09 AM")
    AddProperty("8407", "MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost", <a><![CDATA[MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F46", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:04 AM")
    AddProperty("8406", "MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost", <a><![CDATA[MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F45", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:02 AM")
    AddProperty("8405", "MEI_Air_Pipe_3_Inch_pipe_Cost", <a><![CDATA[MEI_Air_Pipe_3_Inch_pipe_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:00 AM")
    AddProperty("8408", "MEI_Air_Pipe_7_8_Inch_pipe_Cost", <a><![CDATA[MEI_Air_Pipe_7_8_Inch_pipe_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F47", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:06 AM")
    AddProperty("8412", "MEI_Air_Pipe_A_C_Cost", <a><![CDATA[MEI_Air_Pipe_A_C_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:15 AM")
    AddProperty("8414", "MEI_Air_Pipe_Dryer_Cost", <a><![CDATA[MEI_Air_Pipe_Dryer_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F53", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:20 AM")
    AddProperty("8411", "MEI_Air_Pipe_FILTER_REG_Cost", <a><![CDATA[MEI_Air_Pipe_FILTER_REG_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:13 AM")
    AddProperty("8416", "MEI_Air_Pipe_Hours_Cost", <a><![CDATA[MEI_Air_Pipe_Hours_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F55", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:24 AM")
    AddProperty("8415", "MEI_Air_Pipe_Mat_Cost_Cost", <a><![CDATA[MEI_Air_Pipe_Mat_Cost_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F54", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/7/2025 1:30:58 PM")
    AddProperty("8843", "MEI_Air_Pipe_Red_A_C_Cost", <a><![CDATA[MEI_Air_Pipe_Red_A_C_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/7/2025 1:34:09 PM")
    AddProperty("8410", "MEI_Air_Pipe_Tubing_Cost", <a><![CDATA[MEI_Air_Pipe_Tubing_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!F49", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:11 AM")
    AddProperty("8477", "MEI_Ajust_Total_Percentage", <a><![CDATA[MEI_Ajust_Total_Percentage]]></a>.Value, "Mech Install^'TTCB Costing'!K45", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:02 AM")
    AddProperty("8433", "MEI_Crew_Average_Hrs_per_Wk", <a><![CDATA[MEI_Crew_Average_Hrs_per_Wk]]></a>.Value, "Mech Install^'TTCB Costing'!I25", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:00 AM")
    AddProperty("8437", "MEI_Crew_Avg_Crew_Size_Installers", <a><![CDATA[MEI_Crew_Avg_Crew_Size_Installers]]></a>.Value, "Mech Install^'TTCB Costing'!K28", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:19:28 PM")
    AddProperty("8434", "MEI_Crew_Comm_Sppt_Hrs_per_Wk", <a><![CDATA[MEI_Crew_Comm_Sppt_Hrs_per_Wk]]></a>.Value, "Mech Install^'TTCB Costing'!I26", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:02 AM")
    AddProperty("8452", "MEI_Crew_Head_Count_Installer", <a><![CDATA[MEI_Crew_Head_Count_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!J40", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:36:50 AM")
    AddProperty("8451", "MEI_Crew_Head_Count_Lead_Men", <a><![CDATA[MEI_Crew_Head_Count_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!J39", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:36:35 AM")
    AddProperty("8450", "MEI_Crew_Head_Count_Superintendent", <a><![CDATA[MEI_Crew_Head_Count_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!J38", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:36:17 AM")
    AddProperty("8453", "MEI_Crew_Head_Count_Total", <a><![CDATA[MEI_Crew_Head_Count_Total]]></a>.Value, "Mech Install^'TTCB Costing'!J41", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:37:21 AM")
    AddProperty("8446", "MEI_Crew_Mobilization_Cost_Per_Person", <a><![CDATA[MEI_Crew_Mobilization_Cost_Per_Person]]></a>.Value, "Mech Install^'TTCB Costing'!I36", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:34:54 AM")
    AddProperty("8449", "MEI_Crew_Mobilization_Count_Installer", <a><![CDATA[MEI_Crew_Mobilization_Count_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!I40", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:34 AM")
    AddProperty("8448", "MEI_Crew_Mobilization_Count_Lead_Men", <a><![CDATA[MEI_Crew_Mobilization_Count_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!I39", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:32 AM")
    AddProperty("8447", "MEI_Crew_Mobilization_Count_Superintendent", <a><![CDATA[MEI_Crew_Mobilization_Count_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!I38", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:42:30 AM")
    AddProperty("8435", "MEI_Crew_Peak_Crew_Hrs_per_Wk", <a><![CDATA[MEI_Crew_Peak_Crew_Hrs_per_Wk]]></a>.Value, "Mech Install^'TTCB Costing'!I27", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:16:41 PM")
    AddProperty("8436", "MEI_Crew_Peak_Crew_Installers", <a><![CDATA[MEI_Crew_Peak_Crew_Installers]]></a>.Value, "Mech Install^'TTCB Costing'!K26", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:17:49 PM")
    AddProperty("8456", "MEI_Crew_Total_Mobilization_Cost_Installer", <a><![CDATA[MEI_Crew_Total_Mobilization_Cost_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!K40", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:42:32 AM")
    AddProperty("8455", "MEI_Crew_Total_Mobilization_Cost_Lead_Men", <a><![CDATA[MEI_Crew_Total_Mobilization_Cost_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!K39", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:42:02 AM")
    AddProperty("8454", "MEI_Crew_Total_Mobilization_Cost_Superintendent", <a><![CDATA[MEI_Crew_Total_Mobilization_Cost_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!K38", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:41:42 AM")
    AddProperty("8457", "MEI_Crew_Total_Mobilization_Cost_Total", <a><![CDATA[MEI_Crew_Total_Mobilization_Cost_Total]]></a>.Value, "Mech Install^'TTCB Costing'!K41", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:42:53 AM")
    AddProperty("8395", "MEI_Equipment_Rental_Cost", <a><![CDATA[MEI_Equipment_Rental_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E25", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:28:44 PM")
    AddProperty("8396", "MEI_Equipment_Rental_Dumpsters_Cost", <a><![CDATA[MEI_Equipment_Rental_Dumpsters_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E26", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:22:31 PM")
    AddProperty("8397", "MEI_Equipment_Rental_Porta_Johns_Cost", <a><![CDATA[MEI_Equipment_Rental_Porta_Johns_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E27", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:22:51 PM")
    AddProperty("8507", "MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor", <a><![CDATA[MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor]]></a>.Value, "Mech Install^'TTCB Costing'!O18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:04 AM")
    AddProperty("8506", "MEI_EquipRent_Install_Duration_Cranes_SmallIndoor", <a><![CDATA[MEI_EquipRent_Install_Duration_Cranes_SmallIndoor]]></a>.Value, "Mech Install^'TTCB Costing'!O17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:02 AM")
    AddProperty("8510", "MEI_EquipRent_Install_Duration_Dumpsters", <a><![CDATA[MEI_EquipRent_Install_Duration_Dumpsters]]></a>.Value, "Mech Install^'TTCB Costing'!O21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:56:08 AM")
    AddProperty("8505", "MEI_EquipRent_Install_Duration_Fork_Truck", <a><![CDATA[MEI_EquipRent_Install_Duration_Fork_Truck]]></a>.Value, "Mech Install^'TTCB Costing'!O16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:23:39 AM")
    AddProperty("8502", "MEI_EquipRent_Install_Duration_Large_Boom_Lift", <a><![CDATA[MEI_EquipRent_Install_Duration_Large_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!O13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:22:35 AM")
    AddProperty("8500", "MEI_EquipRent_Install_Duration_Large_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Install_Duration_Large_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!O11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:21:37 AM")
    AddProperty("8504", "MEI_EquipRent_Install_Duration_Large_Telehandler", <a><![CDATA[MEI_EquipRent_Install_Duration_Large_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!O15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:58 AM")
    AddProperty("8511", "MEI_EquipRent_Install_Duration_Porta_Johns", <a><![CDATA[MEI_EquipRent_Install_Duration_Porta_Johns]]></a>.Value, "Mech Install^'TTCB Costing'!O22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:56:29 AM")
    AddProperty("8498", "MEI_EquipRent_Install_Duration_Single_Person_Lift", <a><![CDATA[MEI_EquipRent_Install_Duration_Single_Person_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!O9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:18:47 AM")
    AddProperty("8509", "MEI_EquipRent_Install_Duration_Site_Trailer", <a><![CDATA[MEI_EquipRent_Install_Duration_Site_Trailer]]></a>.Value, "Mech Install^'TTCB Costing'!O20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:55:44 AM")
    AddProperty("8501", "MEI_EquipRent_Install_Duration_Small_Boom_Lift", <a><![CDATA[MEI_EquipRent_Install_Duration_Small_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!O12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:22:04 AM")
    AddProperty("8499", "MEI_EquipRent_Install_Duration_Small_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Install_Duration_Small_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!O10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:20:45 AM")
    AddProperty("8503", "MEI_EquipRent_Install_Duration_Small_Telehandler", <a><![CDATA[MEI_EquipRent_Install_Duration_Small_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!O14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:56 AM")
    AddProperty("8508", "MEI_EquipRent_Install_Duration_Welders", <a><![CDATA[MEI_EquipRent_Install_Duration_Welders]]></a>.Value, "Mech Install^'TTCB Costing'!O19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:55:14 AM")
    AddProperty("8493", "MEI_EquipRent_Quantity_Cranes_Large_Outdoors", <a><![CDATA[MEI_EquipRent_Quantity_Cranes_Large_Outdoors]]></a>.Value, "Mech Install^'TTCB Costing'!N18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:35 AM")
    AddProperty("8492", "MEI_EquipRent_Quantity_Cranes_Small_Indoors", <a><![CDATA[MEI_EquipRent_Quantity_Cranes_Small_Indoors]]></a>.Value, "Mech Install^'TTCB Costing'!N17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:33 AM")
    AddProperty("8496", "MEI_EquipRent_Quantity_Dumpsters", <a><![CDATA[MEI_EquipRent_Quantity_Dumpsters]]></a>.Value, "Mech Install^'TTCB Costing'!N21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:42 AM")
    AddProperty("8491", "MEI_EquipRent_Quantity_Fork_Truck", <a><![CDATA[MEI_EquipRent_Quantity_Fork_Truck]]></a>.Value, "Mech Install^'TTCB Costing'!N16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:32 AM")
    AddProperty("8488", "MEI_EquipRent_Quantity_Large_Boom_Lift", <a><![CDATA[MEI_EquipRent_Quantity_Large_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!N13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:25 AM")
    AddProperty("8486", "MEI_EquipRent_Quantity_Large_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Quantity_Large_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!N11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:21 AM")
    AddProperty("8490", "MEI_EquipRent_Quantity_Large_Telehandler", <a><![CDATA[MEI_EquipRent_Quantity_Large_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!N15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:30 AM")
    AddProperty("8497", "MEI_EquipRent_Quantity_Porta_Johns", <a><![CDATA[MEI_EquipRent_Quantity_Porta_Johns]]></a>.Value, "Mech Install^'TTCB Costing'!N22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:44 AM")
    AddProperty("8484", "MEI_EquipRent_Quantity_Single_Person_Lift", <a><![CDATA[MEI_EquipRent_Quantity_Single_Person_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!N9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:17 AM")
    AddProperty("8495", "MEI_EquipRent_Quantity_Site_Trailer", <a><![CDATA[MEI_EquipRent_Quantity_Site_Trailer]]></a>.Value, "Mech Install^'TTCB Costing'!N20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:40 AM")
    AddProperty("8487", "MEI_EquipRent_Quantity_Small_Boom_Lift", <a><![CDATA[MEI_EquipRent_Quantity_Small_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!N12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:23 AM")
    AddProperty("8485", "MEI_EquipRent_Quantity_Small_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Quantity_Small_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!N10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:19 AM")
    AddProperty("8489", "MEI_EquipRent_Quantity_Small_Telehandler", <a><![CDATA[MEI_EquipRent_Quantity_Small_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!N14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:28 AM")
    AddProperty("8494", "MEI_EquipRent_Quantity_Welders", <a><![CDATA[MEI_EquipRent_Quantity_Welders]]></a>.Value, "Mech Install^'TTCB Costing'!N19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:37 AM")
    AddProperty("8535", "MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors", <a><![CDATA[MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors]]></a>.Value, "Mech Install^'TTCB Costing'!Q18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:03:50 AM")
    AddProperty("8534", "MEI_EquipRent_Total_Cost_Cranes_Small_Indoors", <a><![CDATA[MEI_EquipRent_Total_Cost_Cranes_Small_Indoors]]></a>.Value, "Mech Install^'TTCB Costing'!Q17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:03:22 AM")
    AddProperty("8538", "MEI_EquipRent_Total_Cost_Dumpsters", <a><![CDATA[MEI_EquipRent_Total_Cost_Dumpsters]]></a>.Value, "Mech Install^'TTCB Costing'!Q21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:06:12 AM")
    AddProperty("8533", "MEI_EquipRent_Total_Cost_Fork_Truck", <a><![CDATA[MEI_EquipRent_Total_Cost_Fork_Truck]]></a>.Value, "Mech Install^'TTCB Costing'!Q16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:02:52 AM")
    AddProperty("8530", "MEI_EquipRent_Total_Cost_Large_Boom_Lift", <a><![CDATA[MEI_EquipRent_Total_Cost_Large_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!Q13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:59:56 AM")
    AddProperty("8528", "MEI_EquipRent_Total_Cost_Large_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Total_Cost_Large_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!Q11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:58:53 AM")
    AddProperty("8532", "MEI_EquipRent_Total_Cost_Large_Telehandler", <a><![CDATA[MEI_EquipRent_Total_Cost_Large_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!Q15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:01:05 AM")
    AddProperty("8539", "MEI_EquipRent_Total_Cost_Porta_Johns", <a><![CDATA[MEI_EquipRent_Total_Cost_Porta_Johns]]></a>.Value, "Mech Install^'TTCB Costing'!Q22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:06:39 AM")
    AddProperty("8526", "MEI_EquipRent_Total_Cost_Single_Person_Lift", <a><![CDATA[MEI_EquipRent_Total_Cost_Single_Person_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!Q9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:57:55 AM")
    AddProperty("8537", "MEI_EquipRent_Total_Cost_Site_Trailer", <a><![CDATA[MEI_EquipRent_Total_Cost_Site_Trailer]]></a>.Value, "Mech Install^'TTCB Costing'!Q20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:46:07 AM")
    AddProperty("8529", "MEI_EquipRent_Total_Cost_Small_Boom_Lift", <a><![CDATA[MEI_EquipRent_Total_Cost_Small_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!Q12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:59:31 AM")
    AddProperty("8527", "MEI_EquipRent_Total_Cost_Small_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Total_Cost_Small_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!Q10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:58:21 AM")
    AddProperty("8531", "MEI_EquipRent_Total_Cost_Small_Telehandler", <a><![CDATA[MEI_EquipRent_Total_Cost_Small_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!Q14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:00:27 AM")
    AddProperty("8536", "MEI_EquipRent_Total_Cost_Welders", <a><![CDATA[MEI_EquipRent_Total_Cost_Welders]]></a>.Value, "Mech Install^'TTCB Costing'!Q19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:05:12 AM")
    AddProperty("8521", "MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors]]></a>.Value, "Mech Install^'TTCB Costing'!P18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:34 AM")
    AddProperty("8520", "MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors]]></a>.Value, "Mech Install^'TTCB Costing'!P17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:32 AM")
    AddProperty("8524", "MEI_EquipRent_Weekly_Rate_Dumpsters", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Dumpsters]]></a>.Value, "Mech Install^'TTCB Costing'!P21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:40 AM")
    AddProperty("8519", "MEI_EquipRent_Weekly_Rate_Fork_Truck", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Fork_Truck]]></a>.Value, "Mech Install^'TTCB Costing'!P16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:29 AM")
    AddProperty("8516", "MEI_EquipRent_Weekly_Rate_Large_Boom_Lift", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Large_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!P13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:23 AM")
    AddProperty("8514", "MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!P11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:19 AM")
    AddProperty("8518", "MEI_EquipRent_Weekly_Rate_Large_Telehandler", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Large_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!P15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:27 AM")
    AddProperty("8525", "MEI_EquipRent_Weekly_Rate_Porta_Johns", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Porta_Johns]]></a>.Value, "Mech Install^'TTCB Costing'!P22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:42 AM")
    AddProperty("8512", "MEI_EquipRent_Weekly_Rate_Single_Person_Lift", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Single_Person_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!P9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:15 AM")
    AddProperty("8523", "MEI_EquipRent_Weekly_Rate_Site_Trailer", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Site_Trailer]]></a>.Value, "Mech Install^'TTCB Costing'!P20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:38 AM")
    AddProperty("8515", "MEI_EquipRent_Weekly_Rate_Small_Boom_Lift", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Small_Boom_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!P12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:21 AM")
    AddProperty("8513", "MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift]]></a>.Value, "Mech Install^'TTCB Costing'!P10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:17 AM")
    AddProperty("8517", "MEI_EquipRent_Weekly_Rate_Small_Telehandler", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Small_Telehandler]]></a>.Value, "Mech Install^'TTCB Costing'!P14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:25 AM")
    AddProperty("8522", "MEI_EquipRent_Weekly_Rate_Welders", <a><![CDATA[MEI_EquipRent_Weekly_Rate_Welders]]></a>.Value, "Mech Install^'TTCB Costing'!P19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:45:36 AM")
    AddProperty("8425", "MEI_Factors_Air_Piping", <a><![CDATA[MEI_Factors_Air_Piping]]></a>.Value, "Mech Install^'TTCB Costing'!I16", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:43 AM")
    AddProperty("8424", "MEI_Factors_Risk_Rating", <a><![CDATA[MEI_Factors_Risk_Rating]]></a>.Value, "Mech Install^'TTCB Costing'!I15", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:41 AM")
    AddProperty("8426", "MEI_Factors_Seismic", <a><![CDATA[MEI_Factors_Seismic]]></a>.Value, "Mech Install^'TTCB Costing'!I17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:45 AM")
    AddProperty("8427", "MEI_Factors_Value", <a><![CDATA[MEI_Factors_Value]]></a>.Value, "Mech Install^'TTCB Costing'!K15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 1:59:11 PM")
    AddProperty("8478", "MEI_Fencing_Footage", <a><![CDATA[MEI_Fencing_Footage]]></a>.Value, "Mech Install^'TTCB Costing'!I55", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:04 AM")
    AddProperty("8480", "MEI_Fencing_Footage_Cost_per_Hours", <a><![CDATA[MEI_Fencing_Footage_Cost_per_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!J55", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:16:06 AM")
    AddProperty("8482", "MEI_Fencing_Footage_Total", <a><![CDATA[MEI_Fencing_Footage_Total]]></a>.Value, "Mech Install^'TTCB Costing'!K55", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:17:00 AM")
    AddProperty("8479", "MEI_Gates_QTY", <a><![CDATA[MEI_Gates_QTY]]></a>.Value, "Mech Install^'TTCB Costing'!I56", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:44:06 AM")
    AddProperty("8481", "MEI_Gates_QTY_Cost_per_Hours", <a><![CDATA[MEI_Gates_QTY_Cost_per_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!J56", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:16:34 AM")
    AddProperty("8483", "MEI_Gates_QTY_Total", <a><![CDATA[MEI_Gates_QTY_Total]]></a>.Value, "Mech Install^'TTCB Costing'!K56", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 8:17:25 AM")
    AddProperty("8567", "MEI_Labor_Rate_Current_Rate_IG_Installer", <a><![CDATA[MEI_Labor_Rate_Current_Rate_IG_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!O44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:09 AM")
    AddProperty("8566", "MEI_Labor_Rate_Current_Rate_Lead_Person", <a><![CDATA[MEI_Labor_Rate_Current_Rate_Lead_Person]]></a>.Value, "Mech Install^'TTCB Costing'!O43", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:07 AM")
    AddProperty("8565", "MEI_Labor_Rate_Current_Rate_Superintendent", <a><![CDATA[MEI_Labor_Rate_Current_Rate_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!O42", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:05 AM")
    AddProperty("8570", "MEI_Labor_Rate_New_Rate_IG_Installer", <a><![CDATA[MEI_Labor_Rate_New_Rate_IG_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!P44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:40:48 AM")
    AddProperty("8569", "MEI_Labor_Rate_New_Rate_Lead_Person", <a><![CDATA[MEI_Labor_Rate_New_Rate_Lead_Person]]></a>.Value, "Mech Install^'TTCB Costing'!P43", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:40:25 AM")
    AddProperty("8568", "MEI_Labor_Rate_New_Rate_Superintendent", <a><![CDATA[MEI_Labor_Rate_New_Rate_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!P42", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:39:50 AM")
    AddProperty("8561", "MEI_Labor_Rate_Percent_Adjustment", <a><![CDATA[MEI_Labor_Rate_Percent_Adjustment]]></a>.Value, "Mech Install^'TTCB Costing'!N41", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:46:57 AM")
    AddProperty("8564", "MEI_Labor_Rate_Percent_Adjustment_IG_Installer", <a><![CDATA[MEI_Labor_Rate_Percent_Adjustment_IG_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!N44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:38:36 AM")
    AddProperty("8563", "MEI_Labor_Rate_Percent_Adjustment_Lead_Person", <a><![CDATA[MEI_Labor_Rate_Percent_Adjustment_Lead_Person]]></a>.Value, "Mech Install^'TTCB Costing'!N43", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:38:23 AM")
    AddProperty("8562", "MEI_Labor_Rate_Percent_Adjustment_Superintendent", <a><![CDATA[MEI_Labor_Rate_Percent_Adjustment_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!N42", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:38:08 AM")
    AddProperty("8573", "MEI_Labor_Rate_Tot_Cost_Adj_Installer", <a><![CDATA[MEI_Labor_Rate_Tot_Cost_Adj_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!Q44", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:43:22 AM")
    AddProperty("8572", "MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person", <a><![CDATA[MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person]]></a>.Value, "Mech Install^'TTCB Costing'!Q43", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:43:00 AM")
    AddProperty("8571", "MEI_Labor_Rate_Tot_Cost_Adj_Superintendent", <a><![CDATA[MEI_Labor_Rate_Tot_Cost_Adj_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!Q42", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:42:37 AM")
    AddProperty("8574", "MEI_Labor_Rate_Total_Cost_Adjustment", <a><![CDATA[MEI_Labor_Rate_Total_Cost_Adjustment]]></a>.Value, "Mech Install^'TTCB Costing'!Q45", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:43:58 AM")
    AddProperty("8358", "MEI_Mech_Conveyor_Installation_Cost", <a><![CDATA[MEI_Mech_Conveyor_Installation_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E8", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:16:25 AM")
    AddProperty("8359", "MEI_Mech_Conveyor_Installation_Hours", <a><![CDATA[MEI_Mech_Conveyor_Installation_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F8", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:17:02 AM")
    AddProperty("8404", "MEI_Miscellaneous_Administrative_Cost", <a><![CDATA[MEI_Miscellaneous_Administrative_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E34", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:33:02 PM")
    AddProperty("8403", "MEI_Miscellaneous_Cost", <a><![CDATA[MEI_Miscellaneous_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E33", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:40:56 AM")
    AddProperty("8543", "MEI_Other_Cost_Onsite_Admin_Duration_Wks", <a><![CDATA[MEI_Other_Cost_Onsite_Admin_Duration_Wks]]></a>.Value, "Mech Install^'TTCB Costing'!N29", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:11:36 AM")
    AddProperty("8544", "MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week", <a><![CDATA[MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week]]></a>.Value, "Mech Install^'TTCB Costing'!N30", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:12:12 AM")
    AddProperty("8542", "MEI_Other_Cost_Permit_Hours", <a><![CDATA[MEI_Other_Cost_Permit_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!N27", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:10:32 AM")
    AddProperty("8541", "MEI_Other_Cost_Qty_Gang_Boxes", <a><![CDATA[MEI_Other_Cost_Qty_Gang_Boxes]]></a>.Value, "Mech Install^'TTCB Costing'!N26", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:09:38 AM")
    AddProperty("8540", "MEI_Other_Cost_Qty_Trucks", <a><![CDATA[MEI_Other_Cost_Qty_Trucks]]></a>.Value, "Mech Install^'TTCB Costing'!N25", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:08:42 AM")
    AddProperty("8443", "MEI_People_Needs_Comm_No_of_Installers", <a><![CDATA[MEI_People_Needs_Comm_No_of_Installers]]></a>.Value, "Mech Install^'TTCB Costing'!J33", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:27:10 AM")
    AddProperty("8442", "MEI_People_Needs_Comm_No_of_Lead_Men", <a><![CDATA[MEI_People_Needs_Comm_No_of_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!J32", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:26:42 AM")
    AddProperty("8441", "MEI_People_Needs_Comm_No_of_Superintendents", <a><![CDATA[MEI_People_Needs_Comm_No_of_Superintendents]]></a>.Value, "Mech Install^'TTCB Costing'!J31", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:26:10 AM")
    AddProperty("8440", "MEI_People_Needs_Install_No_of_Installers", <a><![CDATA[MEI_People_Needs_Install_No_of_Installers]]></a>.Value, "Mech Install^'TTCB Costing'!I33", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:26:28 PM")
    AddProperty("8439", "MEI_People_Needs_Install_No_of_Lead_Men", <a><![CDATA[MEI_People_Needs_Install_No_of_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!I32", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:25:41 PM")
    AddProperty("8438", "MEI_People_Needs_Install_No_of_Superintendents", <a><![CDATA[MEI_People_Needs_Install_No_of_Superintendents]]></a>.Value, "Mech Install^'TTCB Costing'!I31", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:23:08 PM")
    AddProperty("8445", "MEI_People_Needs_Work_Percent_No_of_Lead_Men", <a><![CDATA[MEI_People_Needs_Work_Percent_No_of_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!K32", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:32:52 AM")
    AddProperty("8444", "MEI_People_Needs_Work_Percent_No_of_Superintendent", <a><![CDATA[MEI_People_Needs_Work_Percent_No_of_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!K31", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 7:29:55 AM")
    AddProperty("8402", "MEI_Permits_Cost", <a><![CDATA[MEI_Permits_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E32", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:25:15 PM")
    AddProperty("8417", "MEI_Project_Info_Customer", <a><![CDATA[MEI_Project_Info_Customer]]></a>.Value, "Mech Install^'TTCB Costing'!I8", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:26 AM")
    AddProperty("8420", "MEI_Project_Info_Description", <a><![CDATA[MEI_Project_Info_Description]]></a>.Value, "Mech Install^'TTCB Costing'!I11", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:33 AM")
    AddProperty("8418", "MEI_Project_Info_Location", <a><![CDATA[MEI_Project_Info_Location]]></a>.Value, "Mech Install^'TTCB Costing'!I9", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:28 AM")
    AddProperty("8419", "MEI_Project_Info_Number", <a><![CDATA[MEI_Project_Info_Number]]></a>.Value, "Mech Install^'TTCB Costing'!I10", "Long","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:31 AM")
    AddProperty("8422", "MEI_Project_Info_Project_Tier", <a><![CDATA[MEI_Project_Info_Project_Tier]]></a>.Value, "Mech Install^'TTCB Costing'!K8", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:37 AM")
    AddProperty("8421", "MEI_Project_Info_Quote_Date", <a><![CDATA[MEI_Project_Info_Quote_Date]]></a>.Value, "Mech Install^'TTCB Costing'!I12", "Date","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:35 AM")
    AddProperty("8423", "MEI_Project_Tier_Value", <a><![CDATA[MEI_Project_Tier_Value]]></a>.Value, "Mech Install^'TTCB Costing'!K9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/16/2025 2:21:10 PM")
    AddProperty("8429", "MEI_Schedule_End_Mechanical_Installation", <a><![CDATA[MEI_Schedule_End_Mechanical_Installation]]></a>.Value, "Mech Install^'TTCB Costing'!I21", "Date","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:52 AM")
    AddProperty("8430", "MEI_Schedule_End_Run_In_Level_5", <a><![CDATA[MEI_Schedule_End_Run_In_Level_5]]></a>.Value, "Mech Install^'TTCB Costing'!I22", "Date","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:54 AM")
    AddProperty("8428", "MEI_Schedule_Start_Mechanical_Installation", <a><![CDATA[MEI_Schedule_Start_Mechanical_Installation]]></a>.Value, "Mech Install^'TTCB Costing'!I20", "Date","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:41:50 AM")
    AddProperty("8432", "MEI_Schedule_Weeks_Comm", <a><![CDATA[MEI_Schedule_Weeks_Comm]]></a>.Value, "Mech Install^'TTCB Costing'!J22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:49:44 AM")
    AddProperty("8431", "MEI_Schedule_Weeks_Install", <a><![CDATA[MEI_Schedule_Weeks_Install]]></a>.Value, "Mech Install^'TTCB Costing'!J21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 9:50:05 AM")
    AddProperty("8579", "MEI_Structures_Platforms_Feet_Catwalk", <a><![CDATA[MEI_Structures_Platforms_Feet_Catwalk]]></a>.Value, "Mech Install^'TTCB Costing'!N52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:34 AM")
    AddProperty("8575", "MEI_Structures_Platforms_Feet_Demo", <a><![CDATA[MEI_Structures_Platforms_Feet_Demo]]></a>.Value, "Mech Install^'TTCB Costing'!N48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:25 AM")
    AddProperty("8576", "MEI_Structures_Platforms_Feet_GRID_Structure", <a><![CDATA[MEI_Structures_Platforms_Feet_GRID_Structure]]></a>.Value, "Mech Install^'TTCB Costing'!N49", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:28 AM")
    AddProperty("8577", "MEI_Structures_Platforms_Feet_Platform_Bar_Grating", <a><![CDATA[MEI_Structures_Platforms_Feet_Platform_Bar_Grating]]></a>.Value, "Mech Install^'TTCB Costing'!N50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:30 AM")
    AddProperty("8578", "MEI_Structures_Platforms_Feet_Platform_Resin_Deck", <a><![CDATA[MEI_Structures_Platforms_Feet_Platform_Resin_Deck]]></a>.Value, "Mech Install^'TTCB Costing'!N51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:32 AM")
    AddProperty("8580", "MEI_Structures_Platforms_Feet_Total", <a><![CDATA[MEI_Structures_Platforms_Feet_Total]]></a>.Value, "Mech Install^'TTCB Costing'!N53", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:46:13 AM")
    AddProperty("8585", "MEI_Structures_Platforms_Hour_Catwalk", <a><![CDATA[MEI_Structures_Platforms_Hour_Catwalk]]></a>.Value, "Mech Install^'TTCB Costing'!O52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:48:27 AM")
    AddProperty("8581", "MEI_Structures_Platforms_Hour_Demo", <a><![CDATA[MEI_Structures_Platforms_Hour_Demo]]></a>.Value, "Mech Install^'TTCB Costing'!O48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:46:34 AM")
    AddProperty("8582", "MEI_Structures_Platforms_Hour_GRID_Structure", <a><![CDATA[MEI_Structures_Platforms_Hour_GRID_Structure]]></a>.Value, "Mech Install^'TTCB Costing'!O49", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:40 AM")
    AddProperty("8583", "MEI_Structures_Platforms_Hour_Platform_Bar_Grating", <a><![CDATA[MEI_Structures_Platforms_Hour_Platform_Bar_Grating]]></a>.Value, "Mech Install^'TTCB Costing'!O50", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:43 AM")
    AddProperty("8584", "MEI_Structures_Platforms_Hour_Platform_Resin_Deck", <a><![CDATA[MEI_Structures_Platforms_Hour_Platform_Resin_Deck]]></a>.Value, "Mech Install^'TTCB Costing'!O51", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:45 AM")
    AddProperty("8586", "MEI_Structures_Platforms_Hour_Total", <a><![CDATA[MEI_Structures_Platforms_Hour_Total]]></a>.Value, "Mech Install^'TTCB Costing'!O53", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:48:52 AM")
    AddProperty("8588", "MEI_Structures_Platforms_Per_Ft_Catwalk", <a><![CDATA[MEI_Structures_Platforms_Per_Ft_Catwalk]]></a>.Value, "Mech Install^'TTCB Costing'!P52", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:53 AM")
    AddProperty("8587", "MEI_Structures_Platforms_Per_Ft_Demo", <a><![CDATA[MEI_Structures_Platforms_Per_Ft_Demo]]></a>.Value, "Mech Install^'TTCB Costing'!P48", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:47:51 AM")
    AddProperty("8589", "MEI_Structures_Platforms_Per_Ft_Total", <a><![CDATA[MEI_Structures_Platforms_Per_Ft_Total]]></a>.Value, "Mech Install^'TTCB Costing'!P53", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:59:44 AM")
    AddProperty("8364", "MEI_Superintendent__Hours", <a><![CDATA[MEI_Superintendent__Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:20:20 AM")
    AddProperty("8363", "MEI_Superintendent_Commissioning_Cost", <a><![CDATA[MEI_Superintendent_Commissioning_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:19:57 AM")
    AddProperty("8367", "MEI_Superintendent_Commissioning_Hours", <a><![CDATA[MEI_Superintendent_Commissioning_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F12", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:23:01 AM")
    AddProperty("8360", "MEI_Superintendent_Cost", <a><![CDATA[MEI_Superintendent_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:17:55 AM")
    AddProperty("8361", "MEI_Superintendent_Install_Cost", <a><![CDATA[MEI_Superintendent_Install_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:18:25 AM")
    AddProperty("8365", "MEI_Superintendent_Install_Hours", <a><![CDATA[MEI_Superintendent_Install_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F10", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:21:00 AM")
    AddProperty("8368", "MEI_Superintendent_Rate", <a><![CDATA[MEI_Superintendent_Rate]]></a>.Value, "Mech Install^'TTCB Costing'!D9", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:39:42 AM")
    AddProperty("8362", "MEI_Superintendent_Stagnant_Hours_Cost", <a><![CDATA[MEI_Superintendent_Stagnant_Hours_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:19:00 AM")
    AddProperty("8366", "MEI_Superintendent_Stagnant_Hours_Hours", <a><![CDATA[MEI_Superintendent_Stagnant_Hours_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F11", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:22:16 AM")
    AddProperty("8400", "MEI_Supplies_Consumables_All_Other_Cost", <a><![CDATA[MEI_Supplies_Consumables_All_Other_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E30", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:24:17 PM")
    AddProperty("8398", "MEI_Supplies_Consumables_Cost", <a><![CDATA[MEI_Supplies_Consumables_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E28", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:23:30 PM")
    AddProperty("8399", "MEI_Supplies_Consumables_HW_Air_Piping_Cost", <a><![CDATA[MEI_Supplies_Consumables_HW_Air_Piping_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E29", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:23:55 PM")
    AddProperty("8549", "MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer", <a><![CDATA[MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!N37", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:46:33 AM")
    AddProperty("8548", "MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men", <a><![CDATA[MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!N36", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:46:30 AM")
    AddProperty("8547", "MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent", <a><![CDATA[MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!N35", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:46:28 AM")
    AddProperty("8555", "MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!P37", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:32:01 AM")
    AddProperty("8554", "MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!P36", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:31:45 AM")
    AddProperty("8553", "MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI]]></a>.Value, "Mech Install^'TTCB Costing'!P35", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:31:30 AM")
    AddProperty("8552", "MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!O37", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:30:52 AM")
    AddProperty("8551", "MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!O36", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:30:03 AM")
    AddProperty("8550", "MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent]]></a>.Value, "Mech Install^'TTCB Costing'!O35", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:29:21 AM")
    AddProperty("8559", "MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer]]></a>.Value, "Mech Install^'TTCB Costing'!Q37", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:35:15 AM")
    AddProperty("8558", "MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men]]></a>.Value, "Mech Install^'TTCB Costing'!Q36", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:34:53 AM")
    AddProperty("8557", "MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI", <a><![CDATA[MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI]]></a>.Value, "Mech Install^'TTCB Costing'!Q35", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:34:30 AM")
    AddProperty("8556", "MEI_Travel_Cost_Crew_Total_Mobilization_Cost", <a><![CDATA[MEI_Travel_Cost_Crew_Total_Mobilization_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!P38", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:33:18 AM")
    AddProperty("8560", "MEI_Travel_Cost_Crew_Total_Travel_Cost", <a><![CDATA[MEI_Travel_Cost_Crew_Total_Travel_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!Q38", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:36:12 AM")
    AddProperty("8545", "MEI_Travel_Cost_Per_Diem_Range", <a><![CDATA[MEI_Travel_Cost_Per_Diem_Range]]></a>.Value, "Mech Install^'TTCB Costing'!N33", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:23:53 AM")
    AddProperty("8546", "MEI_Travel_Cost_Per_Diem_Range_Link", <a><![CDATA[MEI_Travel_Cost_Per_Diem_Range_Link]]></a>.Value, "Mech Install^'TTCB Costing'!O33", "String","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 10:27:41 AM")
    AddProperty("8401", "MEI_Travel_Expense_Cost", <a><![CDATA[MEI_Travel_Expense_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E31", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:40:51 AM")
    AddProperty("8121", "MEI_TTCB_Costing_D9", <a><![CDATA[Superintendent Rate]]></a>.Value, "Mechanical Conveyor Installation_Superintendent_Rate", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H582667", "7/4/2025 3:49:41 PM")
    AddProperty("8384", "MEI_TTCB_Installer_Commissioning_Cost", <a><![CDATA[MEI_TTCB_Installer_Commissioning_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E23", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 12:02:10 PM")
    AddProperty("8393", "MEI_TTCB_Installer_Commissioning_Hours", <a><![CDATA[MEI_TTCB_Installer_Commissioning_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F23", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:14:25 PM")
    AddProperty("8378", "MEI_TTCB_Installer_Cost", <a><![CDATA[MEI_TTCB_Installer_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:55:42 AM")
    AddProperty("8381", "MEI_TTCB_Installer_Demo_Cost", <a><![CDATA[MEI_TTCB_Installer_Demo_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:59:56 AM")
    AddProperty("8390", "MEI_TTCB_Installer_Demo_Hours", <a><![CDATA[MEI_TTCB_Installer_Demo_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F20", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:12:08 PM")
    AddProperty("8387", "MEI_TTCB_Installer_Hours", <a><![CDATA[MEI_TTCB_Installer_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 12:26:11 PM")
    AddProperty("8379", "MEI_TTCB_Installer_Install_Cost", <a><![CDATA[MEI_TTCB_Installer_Install_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:57:08 AM")
    AddProperty("8388", "MEI_TTCB_Installer_Install_Hours", <a><![CDATA[MEI_TTCB_Installer_Install_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F18", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 12:34:10 PM")
    AddProperty("8382", "MEI_TTCB_Installer_Miscellaneous_Cost", <a><![CDATA[MEI_TTCB_Installer_Miscellaneous_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 12:00:17 PM")
    AddProperty("8391", "MEI_TTCB_Installer_Miscellaneous_Hours", <a><![CDATA[MEI_TTCB_Installer_Miscellaneous_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F21", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:13:02 PM")
    AddProperty("8380", "MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost", <a><![CDATA[MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:58:00 AM")
    AddProperty("8389", "MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours", <a><![CDATA[MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F19", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:09:22 PM")
    AddProperty("8386", "MEI_TTCB_Installer_Rate", <a><![CDATA[MEI_TTCB_Installer_Rate]]></a>.Value, "Mech Install^'TTCB Costing'!D17", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:40:20 AM")
    AddProperty("8383", "MEI_TTCB_Installer_Stagnant_Hours_Cost", <a><![CDATA[MEI_TTCB_Installer_Stagnant_Hours_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 12:00:48 PM")
    AddProperty("8392", "MEI_TTCB_Installer_Stagnant_Hours_Hours", <a><![CDATA[MEI_TTCB_Installer_Stagnant_Hours_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F22", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:13:43 PM")
    AddProperty("8385", "MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost", <a><![CDATA[MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E24", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 12:04:21 PM")
    AddProperty("8394", "MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours", <a><![CDATA[MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F24", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 1:27:29 PM")
    AddProperty("8372", "MEI_TTCB_Lead_Person_Commissioning_Cost", <a><![CDATA[MEI_TTCB_Lead_Person_Commissioning_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:36:27 AM")
    AddProperty("8376", "MEI_TTCB_Lead_Person_Commissioning_Hours", <a><![CDATA[MEI_TTCB_Lead_Person_Commissioning_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F16", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:45:12 AM")
    AddProperty("8369", "MEI_TTCB_Lead_Person_Cost", <a><![CDATA[MEI_TTCB_Lead_Person_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:24:25 AM")
    AddProperty("8373", "MEI_TTCB_Lead_Person_Hours", <a><![CDATA[MEI_TTCB_Lead_Person_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:37:22 AM")
    AddProperty("8370", "MEI_TTCB_Lead_Person_Install_Cost", <a><![CDATA[MEI_TTCB_Lead_Person_Install_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:25:35 AM")
    AddProperty("8374", "MEI_TTCB_Lead_Person_Install_Hours", <a><![CDATA[MEI_TTCB_Lead_Person_Install_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F14", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:38:25 AM")
    AddProperty("8377", "MEI_TTCB_Lead_Person_Rate", <a><![CDATA[MEI_TTCB_Lead_Person_Rate]]></a>.Value, "Mech Install^'TTCB Costing'!D13", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 6:40:01 AM")
    AddProperty("8371", "MEI_TTCB_Lead_Person_Stagnant_Hours_Cost", <a><![CDATA[MEI_TTCB_Lead_Person_Stagnant_Hours_Cost]]></a>.Value, "Mech Install^'TTCB Costing'!E15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:32:32 AM")
    AddProperty("8375", "MEI_TTCB_Lead_Person_Stagnant_Hours_Hours", <a><![CDATA[MEI_TTCB_Lead_Person_Stagnant_Hours_Hours]]></a>.Value, "Mech Install^'TTCB Costing'!F15", "Double","","Mech Install","FD", 9999, "", 0,0, "", "", "GLOBAL\H611896", "7/17/2025 11:43:53 AM")
    AddProperty("8089", "PartNumber", <a><![CDATA[Part Number]]></a>.Value, "", "String","N","System","MN", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/2/2025 5:13:26 PM")
    
      AddValidValue("MEI_Travel_Cost_Per_Diem_Range")
    
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize_Process(ByVal lngProcessID as Integer) Implements RuleStream.IRsPartFormulas.InitializeProcess
    Select Case lngProcessID
    
    Case Else
    Process = "DefaultProcess"
    End Select
    End Sub

    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Properties()
    Dim ctx as String
    ctx = ContextId
    
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Clean_Up", "8045", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:59 AM", "", "In Development",  0,12936)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Fencing", "8046", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:02 AM", "", "In Development",  0,12938)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Gates", "8047", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:05 AM", "", "In Development",  0,12940)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Miscellaneous_1", "8048", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:08 AM", "", "In Development",  0,12942)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Miscellaneous_2", "8049", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:11 AM", "", "In Development",  0,12944)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Miscellaneous_3", "8050", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:14 AM", "", "In Development",  0,12946)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_System_Efficiency", "8044", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:57 AM", "", "In Development",  0,12934)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_Total", "8051", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:43:52 AM", "", "In Development",  0,18362)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Dollar_TTCB_Sorter", "8043", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:55 AM", "", "In Development",  0,12932)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Clean_Up", "8054", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:44:53 AM", "", "In Development",  0,18364)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Fencing", "8055", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:45:09 AM", "", "In Development",  0,18365)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Gates", "8056", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:45:24 AM", "", "In Development",  0,18366)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Miscellaneous_1", "8057", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:47 AM", "", "In Development",  0,12960)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Miscellaneous_2", "8058", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:50 AM", "", "In Development",  0,12962)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Miscellaneous_3", "8059", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:53 AM", "", "In Development",  0,12964)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_System_Efficiency", "8053", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:44:28 AM", "", "In Development",  0,18363)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_Total", "8060", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:45:53 AM", "", "In Development",  0,18367)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Hours_TTCB_Sorter", "8052", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:32 AM", "", "In Development",  0,12950)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_Length_TTCB_Sorter", "9471", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/10/2025 8:37:32 PM", "", "In Development",  0,16277)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Adjust_TTCB_Sorter_Length_in_Meters", "8061", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:43:59 AM", "", "In Development",  0,12968)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_1_2_Inch_pipeCost", "7994", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:09 AM", "", "In Development",  0,12834)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost", "7992", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:04 AM", "", "In Development",  0,12830)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost", "7991", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:02 AM", "", "In Development",  0,12828)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_3_Inch_pipe_Cost", "7990", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:00 AM", "", "In Development",  0,12826)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_7_8_Inch_pipe_Cost", "7993", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:06 AM", "", "In Development",  0,12832)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_A_C_Cost", "7997", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:15 AM", "", "In Development",  0,12840)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_Dryer_Cost", "7999", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:20 AM", "", "In Development",  0,12844)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_FILTER_REG_Cost", "7996", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:13 AM", "", "In Development",  0,12838)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_Hours_Cost", "8001", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:24 AM", "", "In Development",  0,12848)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_Mat_Cost_Cost", "8000", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/7/2025 1:30:58 PM", "", "In Development",  0,12846)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_Red_A_C_Cost", "8428", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/7/2025 1:34:09 PM", "", "In Development",  0,13669)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Air_Pipe_Tubing_Cost", "7995", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:11 AM", "", "In Development",  0,12836)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Ajust_Total_Percentage", "8062", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:02 AM", "", "In Development",  0,12970)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Average_Hrs_per_Wk", "8018", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:00 AM", "", "In Development",  0,12882)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Avg_Crew_Size_Installers", "8022", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:19:28 PM", "", "In Development",  0,18074)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Comm_Sppt_Hrs_per_Wk", "8019", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:02 AM", "", "In Development",  0,12884)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Head_Count_Installer", "8037", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:36:50 AM", "", "In Development",  0,18356)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Head_Count_Lead_Men", "8036", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:36:35 AM", "", "In Development",  0,18355)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Head_Count_Superintendent", "8035", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:36:17 AM", "", "In Development",  0,18354)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Head_Count_Total", "8038", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:37:21 AM", "", "In Development",  0,18357)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Mobilization_Cost_Per_Person", "8031", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:34:54 AM", "", "In Development",  0,18353)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Mobilization_Count_Installer", "8034", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:34 AM", "", "In Development",  0,12914)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Mobilization_Count_Lead_Men", "8033", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:32 AM", "", "In Development",  0,12912)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Mobilization_Count_Superintendent", "8032", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:42:30 AM", "", "In Development",  0,12910)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Peak_Crew_Hrs_per_Wk", "8020", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:16:41 PM", "", "In Development",  0,18072)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Peak_Crew_Installers", "8021", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:17:49 PM", "", "In Development",  0,18073)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Total_Mobilization_Cost_Installer", "8041", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:42:32 AM", "", "In Development",  0,18360)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Total_Mobilization_Cost_Lead_Men", "8040", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:42:02 AM", "", "In Development",  0,18359)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Total_Mobilization_Cost_Superintendent", "8039", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:39:28 AM", "", "In Development",  0,18358)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Crew_Total_Mobilization_Cost_Total", "8042", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:42:53 AM", "", "In Development",  0,18361)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Equipment_Rental_Cost", "7980", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:28:44 PM", "", "In Development",  0,18527)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Equipment_Rental_Dumpsters_Cost", "7981", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:22:31 PM", "", "In Development",  0,18517)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Equipment_Rental_Porta_Johns_Cost", "7982", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:22:51 PM", "", "In Development",  0,18518)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor", "8092", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:04 AM", "", "In Development",  0,13030)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Cranes_SmallIndoor", "8091", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:02 AM", "", "In Development",  0,13028)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Dumpsters", "8095", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:56:08 AM", "", "In Development",  0,18391)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Fork_Truck", "8090", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:23:39 AM", "", "In Development",  0,18377)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Large_Boom_Lift", "8087", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:22:35 AM", "", "In Development",  0,18376)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Large_Scissors_Lift", "8085", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:21:13 AM", "", "In Development",  0,18374)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Large_Telehandler", "8089", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:58 AM", "", "In Development",  0,13024)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Porta_Johns", "8096", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:56:29 AM", "", "In Development",  0,18392)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Single_Person_Lift", "8083", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:18:47 AM", "", "In Development",  0,18372)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Site_Trailer", "8094", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:55:44 AM", "", "In Development",  0,18390)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Small_Boom_Lift", "8086", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:22:04 AM", "", "In Development",  0,18375)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Small_Scissors_Lift", "8084", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:20:45 AM", "", "In Development",  0,18373)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Small_Telehandler", "8088", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:56 AM", "", "In Development",  0,13022)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Install_Duration_Welders", "8093", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:55:14 AM", "", "In Development",  0,18389)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Cranes_Large_Outdoors", "8078", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:35 AM", "", "In Development",  0,13002)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Cranes_Small_Indoors", "8077", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:33 AM", "", "In Development",  0,13000)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Dumpsters", "8081", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:42 AM", "", "In Development",  0,13008)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Fork_Truck", "8076", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:32 AM", "", "In Development",  0,12998)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Large_Boom_Lift", "8073", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:25 AM", "", "In Development",  0,12992)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Large_Scissors_Lift", "8071", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:21 AM", "", "In Development",  0,12988)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Large_Telehandler", "8075", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:30 AM", "", "In Development",  0,12996)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Porta_Johns", "8082", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:44 AM", "", "In Development",  0,13010)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Single_Person_Lift", "8069", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:17 AM", "", "In Development",  0,12984)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Site_Trailer", "8080", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:40 AM", "", "In Development",  0,13006)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Small_Boom_Lift", "8072", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:23 AM", "", "In Development",  0,12990)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Small_Scissors_Lift", "8070", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:19 AM", "", "In Development",  0,12986)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Small_Telehandler", "8074", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:28 AM", "", "In Development",  0,12994)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Quantity_Welders", "8079", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:37 AM", "", "In Development",  0,13004)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors", "8120", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:03:50 AM", "", "In Development",  0,18403)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Cranes_Small_Indoors", "8119", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:03:22 AM", "", "In Development",  0,18402)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Dumpsters", "8123", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:06:12 AM", "", "In Development",  0,18405)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Fork_Truck", "8118", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:02:52 AM", "", "In Development",  0,18400)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Large_Boom_Lift", "8115", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:59:56 AM", "", "In Development",  0,18397)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Large_Scissors_Lift", "8113", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:58:53 AM", "", "In Development",  0,18395)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Large_Telehandler", "8117", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:01:05 AM", "", "In Development",  0,18399)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Porta_Johns", "8124", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:06:39 AM", "", "In Development",  0,18406)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Single_Person_Lift", "8111", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:57:55 AM", "", "In Development",  0,18393)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Site_Trailer", "8122", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:46:07 AM", "", "In Development",  0,13090)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Small_Boom_Lift", "8114", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:59:31 AM", "", "In Development",  0,18396)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Small_Scissors_Lift", "8112", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:58:21 AM", "", "In Development",  0,18394)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Small_Telehandler", "8116", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:00:27 AM", "", "In Development",  0,18398)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Total_Cost_Welders", "8121", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:05:12 AM", "", "In Development",  0,18404)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors", "8106", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:34 AM", "", "In Development",  0,13058)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors", "8105", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:32 AM", "", "In Development",  0,13056)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Dumpsters", "8109", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:40 AM", "", "In Development",  0,13064)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Fork_Truck", "8104", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:29 AM", "", "In Development",  0,13054)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Large_Boom_Lift", "8101", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:23 AM", "", "In Development",  0,13048)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift", "8099", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:19 AM", "", "In Development",  0,13044)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Large_Telehandler", "8103", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:27 AM", "", "In Development",  0,13052)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Porta_Johns", "8110", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:42 AM", "", "In Development",  0,13066)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Single_Person_Lift", "8097", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:15 AM", "", "In Development",  0,13040)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Site_Trailer", "8108", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:38 AM", "", "In Development",  0,13062)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Small_Boom_Lift", "8100", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:21 AM", "", "In Development",  0,13046)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift", "8098", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:17 AM", "", "In Development",  0,13042)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Small_Telehandler", "8102", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:25 AM", "", "In Development",  0,13050)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_EquipRent_Weekly_Rate_Welders", "8107", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:45:36 AM", "", "In Development",  0,13060)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Factors_Air_Piping", "8010", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:43 AM", "", "In Development",  0,12866)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Factors_Risk_Rating", "8009", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:41 AM", "", "In Development",  0,12864)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Factors_Seismic", "8011", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:45 AM", "", "In Development",  0,12868)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Factors_Value", "8012", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 1:59:11 PM", "", "In Development",  0,18070)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Fencing_Footage", "8063", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:04 AM", "", "In Development",  0,12972)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Fencing_Footage_Cost_per_Hours", "8065", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:16:06 AM", "", "In Development",  0,18368)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Fencing_Footage_Total", "8067", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:17:00 AM", "", "In Development",  0,18370)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Gates_QTY", "8064", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:44:06 AM", "", "In Development",  0,12974)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Gates_QTY_Cost_per_Hours", "8066", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:16:34 AM", "", "In Development",  0,18369)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Gates_QTY_Total", "8068", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 8:17:25 AM", "", "In Development",  0,18371)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Current_Rate_IG_Installer", "8152", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:09 AM", "", "In Development",  0,13150)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Current_Rate_Lead_Person", "8151", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:07 AM", "", "In Development",  0,13148)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Current_Rate_Superintendent", "8150", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:05 AM", "", "In Development",  0,13146)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_New_Rate_IG_Installer", "8155", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:40:48 AM", "", "In Development",  0,18432)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_New_Rate_Lead_Person", "8154", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:40:25 AM", "", "In Development",  0,18431)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_New_Rate_Superintendent", "8153", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:39:50 AM", "", "In Development",  0,18430)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Percent_Adjustment", "8146", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:46:57 AM", "", "In Development",  0,13138)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Percent_Adjustment_IG_Installer", "8149", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:38:36 AM", "", "In Development",  0,18429)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Percent_Adjustment_Lead_Person", "8148", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:38:23 AM", "", "In Development",  0,18428)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Percent_Adjustment_Superintendent", "8147", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:38:08 AM", "", "In Development",  0,18427)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Tot_Cost_Adj_Installer", "8158", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:43:22 AM", "", "In Development",  0,18435)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person", "8157", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:43:00 AM", "", "In Development",  0,18434)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Tot_Cost_Adj_Superintendent", "8156", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:42:37 AM", "", "In Development",  0,18433)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Labor_Rate_Total_Cost_Adjustment", "8159", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:43:58 AM", "", "In Development",  0,18436)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Mech_Conveyor_Installation_Cost", "7943", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:16:25 AM", "", "In Development",  0,18443)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Mech_Conveyor_Installation_Hours", "7944", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:17:02 AM", "", "In Development",  0,18444)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Miscellaneous_Administrative_Cost", "7989", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:32:47 PM", "", "In Development",  0,18529)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Miscellaneous_Cost", "7988", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:40:56 AM", "", "In Development",  0,12822)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Other_Cost_Onsite_Admin_Duration_Wks", "8128", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:11:36 AM", "", "In Development",  0,18410)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week", "8129", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:12:12 AM", "", "In Development",  0,18411)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Other_Cost_Permit_Hours", "8127", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:10:32 AM", "", "In Development",  0,18409)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Other_Cost_Qty_Gang_Boxes", "8126", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:09:38 AM", "", "In Development",  0,18408)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Other_Cost_Qty_Trucks", "8125", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:08:42 AM", "", "In Development",  0,18407)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Comm_No_of_Installers", "8028", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:27:10 AM", "", "In Development",  0,18350)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Comm_No_of_Lead_Men", "8027", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:26:42 AM", "", "In Development",  0,18349)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Comm_No_of_Superintendents", "8026", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:26:10 AM", "", "In Development",  0,18348)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Install_No_of_Installers", "8025", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:26:28 PM", "", "In Development",  0,18079)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Install_No_of_Lead_Men", "8024", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:25:22 PM", "", "In Development",  0,18077)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Install_No_of_Superintendents", "8023", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:23:08 PM", "", "In Development",  0,18076)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Work_Percent_No_of_Lead_Men", "8030", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:32:52 AM", "", "In Development",  0,18352)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_People_Needs_Work_Percent_No_of_Superintendent", "8029", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 7:29:55 AM", "", "In Development",  0,18351)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Permits_Cost", "7987", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:25:15 PM", "", "In Development",  0,18522)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Info_Customer", "8002", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:26 AM", "", "In Development",  0,12850)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Info_Description", "8005", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:33 AM", "", "In Development",  0,12856)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Info_Location", "8003", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:28 AM", "", "In Development",  0,12852)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Info_Number", "8004", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:31 AM", "", "In Development",  0,12854)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Info_Project_Tier", "8007", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:37 AM", "", "In Development",  0,12860)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Info_Quote_Date", "8006", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:35 AM", "", "In Development",  0,12858)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Project_Tier_Value", "8008", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/16/2025 2:21:10 PM", "", "In Development",  0,18075)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Schedule_End_Mechanical_Installation", "8014", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:52 AM", "", "In Development",  0,12874)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Schedule_End_Run_In_Level_5", "8015", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:54 AM", "", "In Development",  0,12876)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Schedule_Start_Mechanical_Installation", "8013", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:41:50 AM", "", "In Development",  0,12872)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Schedule_Weeks_Comm", "8017", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:49:44 AM", "", "In Development",  0,18387)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Schedule_Weeks_Install", "8016", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 9:50:05 AM", "", "In Development",  0,18388)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Feet_Catwalk", "8164", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:34 AM", "", "In Development",  0,13174)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Feet_Demo", "8160", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:25 AM", "", "In Development",  0,13166)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Feet_GRID_Structure", "8161", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:28 AM", "", "In Development",  0,13168)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Feet_Platform_Bar_Grating", "8162", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:30 AM", "", "In Development",  0,13170)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Feet_Platform_Resin_Deck", "8163", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:32 AM", "", "In Development",  0,13172)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Feet_Total", "8165", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:46:13 AM", "", "In Development",  0,18437)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Hour_Catwalk", "8170", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:48:27 AM", "", "In Development",  0,18439)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Hour_Demo", "8166", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:46:34 AM", "", "In Development",  0,18438)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Hour_GRID_Structure", "8167", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:40 AM", "", "In Development",  0,13180)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Hour_Platform_Bar_Grating", "8168", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:43 AM", "", "In Development",  0,13182)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Hour_Platform_Resin_Deck", "8169", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:45 AM", "", "In Development",  0,13184)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Hour_Total", "8171", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:48:52 AM", "", "In Development",  0,18440)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Per_Ft_Catwalk", "8173", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:53 AM", "", "In Development",  0,13192)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Per_Ft_Demo", "8172", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:47:51 AM", "", "In Development",  0,13190)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Structures_Platforms_Per_Ft_Total", "8174", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:59:44 AM", "", "In Development",  0,18442)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent__Hours", "7949", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:20:20 AM", "", "In Development",  0,18449)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Commissioning_Cost", "7948", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:19:57 AM", "", "In Development",  0,18448)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Commissioning_Hours", "7952", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:23:01 AM", "", "In Development",  0,18452)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Cost", "7945", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:17:55 AM", "", "In Development",  0,18445)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Install_Cost", "7946", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:18:25 AM", "", "In Development",  0,18446)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Install_Hours", "7950", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:21:00 AM", "", "In Development",  0,18450)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Rate", "7953", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:39:42 AM", "", "In Development",  0,12752)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Stagnant_Hours_Cost", "7947", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:19:00 AM", "", "In Development",  0,18447)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Superintendent_Stagnant_Hours_Hours", "7951", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:22:16 AM", "", "In Development",  0,18451)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Supplies_Consumables_All_Other_Cost", "7985", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:24:17 PM", "", "In Development",  0,18521)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Supplies_Consumables_Cost", "7983", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:23:30 PM", "", "In Development",  0,18519)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Supplies_Consumables_HW_Air_Piping_Cost", "7984", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:23:55 PM", "", "In Development",  0,18520)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer", "8134", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:46:33 AM", "", "In Development",  0,13114)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men", "8133", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:46:30 AM", "", "In Development",  0,13112)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent", "8132", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:46:28 AM", "", "In Development",  0,13110)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer", "8140", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:32:01 AM", "", "In Development",  0,18421)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men", "8139", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:31:45 AM", "", "In Development",  0,18420)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI", "8138", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:31:30 AM", "", "In Development",  0,18419)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer", "8137", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:30:52 AM", "", "In Development",  0,18418)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men", "8136", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:30:03 AM", "", "In Development",  0,18417)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent", "8135", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:29:21 AM", "", "In Development",  0,18416)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer", "8144", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:35:15 AM", "", "In Development",  0,18425)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men", "8143", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:34:53 AM", "", "In Development",  0,18424)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI", "8142", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:34:30 AM", "", "In Development",  0,18423)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Total_Mobilization_Cost", "8141", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:33:18 AM", "", "In Development",  0,18422)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Crew_Total_Travel_Cost", "8145", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:36:12 AM", "", "In Development",  0,18426)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Per_Diem_Range", "8130", "", "", "Y", "","", 0, "-1", 1, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:23:53 AM", "", "In Development",  0,13106)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Cost_Per_Diem_Range_Link", "8131", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 10:27:41 AM", "", "In Development",  0,18415)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_Travel_Expense_Cost", "7986", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:40:51 AM", "", "In Development",  0,12818)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Costing_D9", "7709", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H582667", "7/4/2025 3:49:41 PM", "", "In Development",  0,12640)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Commissioning_Cost", "7969", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 12:02:10 PM", "", "In Development",  0,18502)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Commissioning_Hours", "7978", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:14:25 PM", "", "In Development",  0,18516)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Cost", "7963", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:55:42 AM", "", "In Development",  0,18488)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Demo_Cost", "7966", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:59:56 AM", "", "In Development",  0,18495)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Demo_Hours", "7975", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:12:08 PM", "", "In Development",  0,18513)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Hours", "7972", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 12:25:12 PM", "", "In Development",  0,18509)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Install_Cost", "7964", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:57:08 AM", "", "In Development",  0,18491)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Install_Hours", "7973", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 12:34:10 PM", "", "In Development",  0,18510)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Miscellaneous_Cost", "7967", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 12:00:17 PM", "", "In Development",  0,18496)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Miscellaneous_Hours", "7976", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:13:02 PM", "", "In Development",  0,18514)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost", "7965", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:58:00 AM", "", "In Development",  0,18493)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours", "7974", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:09:22 PM", "", "In Development",  0,18512)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Rate", "7971", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:40:20 AM", "", "In Development",  0,12788)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Stagnant_Hours_Cost", "7968", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 12:00:48 PM", "", "In Development",  0,18498)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_Stagnant_Hours_Hours", "7977", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:13:43 PM", "", "In Development",  0,18515)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost", "7970", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 12:04:21 PM", "", "In Development",  0,18504)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours", "7979", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 1:27:29 PM", "", "In Development",  0,18525)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Commissioning_Cost", "7957", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:36:27 AM", "", "In Development",  0,18458)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Commissioning_Hours", "7961", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:45:12 AM", "", "In Development",  0,18480)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Cost", "7954", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:24:25 AM", "", "In Development",  0,18453)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Hours", "7958", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:37:22 AM", "", "In Development",  0,18459)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Install_Cost", "7955", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:25:35 AM", "", "In Development",  0,18454)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Install_Hours", "7959", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:38:25 AM", "", "In Development",  0,18461)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Rate", "7962", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 6:40:01 AM", "", "In Development",  0,12770)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Stagnant_Hours_Cost", "7956", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:32:32 AM", "", "In Development",  0,18456)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("MEI_TTCB_Lead_Person_Stagnant_Hours_Hours", "7960", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H611896", "7/17/2025 11:43:53 AM", "", "In Development",  0,18477)
        End If
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_ValidValues()
    Dim ctx as String
    ctx = ContextId
            If Incontext("-1", ctx) Then
          
        InitValidValue("MEI_Travel_Cost_Per_Diem_Range_ValidValues", "8130", "-1", 18413)
        End If
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Subparts()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Connections()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_DB()
    Dim ctx as String
    ctx = ContextId
    End Sub

    #End Region

    #Region " Formulas "

    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Clean_Up() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Clean_Up").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8045; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8045; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Clean_Up", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Fencing() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Fencing").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8046; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8046; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Fencing", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Gates() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Gates").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8047; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8047; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Gates", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_1() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Miscellaneous_1").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8048; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8048; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_1", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_2() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Miscellaneous_2").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8049; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8049; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_2", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_3() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Miscellaneous_3").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8050; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8050; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_3", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_System_Efficiency() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_System_Efficiency").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8044; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8044; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_System_Efficiency", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8051; TYPE:PF
      Result = Me.MEI_Adjust_Dollar_System_Efficiency + Me.MEI_Adjust_Dollar_Fencing + Me.MEI_Adjust_Dollar_Gates + Me.MEI_Adjust_Dollar_Miscellaneous_1 + Me.MEI_Adjust_Dollar_Miscellaneous_2 + Me.MEI_Adjust_Dollar_Miscellaneous_3
      '   END FORMULA; PROP ID:8051; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_TTCB_Sorter() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Dollar_TTCB_Sorter").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8043; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8043; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_TTCB_Sorter", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Clean_Up() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Clean_Up").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8054; TYPE:PF
      If (Me.MEI_Adjust_Hours_TTCB_Sorter = 0)
	Result = 0.0
Else
	Result = Me.MEI_Adjust_Hours_TTCB_Sorter * 0.05
End If
      '   END FORMULA; PROP ID:8054; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Clean_Up", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Fencing() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Fencing").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8055; TYPE:PF
      Result = Me.MEI_Fencing_Footage_Total
      '   END FORMULA; PROP ID:8055; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Fencing", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Gates() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Gates").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8056; TYPE:PF
      Result = Me.MEI_Gates_QTY_Total
      '   END FORMULA; PROP ID:8056; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Gates", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_1() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Miscellaneous_1").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8057; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8057; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_1", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_2() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Miscellaneous_2").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8058; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8058; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_2", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_3() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Miscellaneous_3").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8059; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8059; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_3", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_System_Efficiency() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_System_Efficiency").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8053; TYPE:PF
      Result = (Me.MEI_Structures_Platforms_Hour_Demo + Me.MEI_Structures_Platforms_Hour_GRID_Structure + Me.MEI_Structures_Platforms_Hour_Platform_Bar_Grating + Me.MEI_Structures_Platforms_Hour_Platform_Resin_Deck + Me.MEI_Structures_Platforms_Hour_Catwalk + Me.MEI_Adjust_Hours_TTCB_Sorter + Me.MEI_Air_Pipe_Hours_Cost)*(1-Me.MEI_Ajust_Total_Percentage)
      '   END FORMULA; PROP ID:8053; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_System_Efficiency", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8060; TYPE:PF
      Result = Me.MEI_Adjust_Hours_System_Efficiency + Me.MEI_Adjust_Hours_Fencing + Me.MEI_Adjust_Hours_Gates + Me.MEI_Adjust_Hours_Miscellaneous_1 + Me.MEI_Adjust_Hours_Miscellaneous_2 + Me.MEI_Adjust_Hours_Miscellaneous_3
      '   END FORMULA; PROP ID:8060; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_TTCB_Sorter() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Hours_TTCB_Sorter").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8052; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8052; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_TTCB_Sorter", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Length_TTCB_Sorter() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_Length_TTCB_Sorter").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9471; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:9471; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Length_TTCB_Sorter", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Adjust_TTCB_Sorter_Length_in_Meters").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8061; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8061; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_1_2_Inch_pipeCost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_1_2_Inch_pipeCost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7994; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7994; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_1_2_Inch_pipeCost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7992; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7992; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7991; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7991; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_3_Inch_pipe_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_3_Inch_pipe_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7990; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7990; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_3_Inch_pipe_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_7_8_Inch_pipe_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7993; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7993; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_A_C_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_A_C_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7997; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7997; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_A_C_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Dryer_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_Dryer_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7999; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7999; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Dryer_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_FILTER_REG_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_FILTER_REG_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7996; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7996; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_FILTER_REG_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8001; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8001; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Mat_Cost_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_Mat_Cost_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8000; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8000; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Mat_Cost_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Red_A_C_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_Red_A_C_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8428; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8428; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Red_A_C_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Tubing_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Air_Pipe_Tubing_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7995; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7995; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Tubing_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Ajust_Total_Percentage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Ajust_Total_Percentage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8062; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8062; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Ajust_Total_Percentage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Average_Hrs_per_Wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Average_Hrs_per_Wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8018; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8018; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Average_Hrs_per_Wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Avg_Crew_Size_Installers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Avg_Crew_Size_Installers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8022; TYPE:PF
      Dim Var As Double
Dim Var_Sum_F18_21 = Me.MEI_TTCB_Installer_Install_Hours + Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours + Me.MEI_TTCB_Installer_Demo_Hours + Me.MEI_TTCB_Installer_Miscellaneous_Hours
Dim Var_Mul_I25_J21 = Me.MEI_Crew_Average_Hrs_per_Wk * Me.MEI_Schedule_Weeks_Install
Dim Var_Div = ((Var_Sum_F18_21 + Me.MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours)/Me.MEI_Crew_Average_Hrs_per_Wk)/Me.MEI_Schedule_Weeks_Install

If(Me.MEI_Schedule_Weeks_Install = 0 Or Var_Sum_F18_21 = 0)
	Var = 0
Else If(Var_Sum_F18_21 < Var_Mul_I25_J21)
	Var = 1
Else
	Var = Var_Div
End If

Result = Math.Ceiling(Var)
      '   END FORMULA; PROP ID:8022; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Avg_Crew_Size_Installers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Comm_Sppt_Hrs_per_Wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8019; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8019; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Head_Count_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8037; TYPE:PF
      Result = Me.MEI_People_Needs_Install_No_of_Installers
      '   END FORMULA; PROP ID:8037; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Head_Count_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8036; TYPE:PF
      Result = Me.MEI_People_Needs_Install_No_of_Lead_Men
      '   END FORMULA; PROP ID:8036; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Head_Count_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8035; TYPE:PF
      Result = Me.MEI_People_Needs_Install_No_of_Superintendents
      '   END FORMULA; PROP ID:8035; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Head_Count_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8038; TYPE:PF
      Result = Me.MEI_Crew_Head_Count_Superintendent + Me.MEI_Crew_Head_Count_Lead_Men + Me.MEI_Crew_Head_Count_Installer
      '   END FORMULA; PROP ID:8038; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Cost_Per_Person() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Mobilization_Cost_Per_Person").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8031; TYPE:PF
      Result = 2654.00
      '   END FORMULA; PROP ID:8031; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Cost_Per_Person", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Count_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Mobilization_Count_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8034; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8034; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Count_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Mobilization_Count_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8033; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8033; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Count_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Mobilization_Count_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8032; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8032; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Peak_Crew_Hrs_per_Wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8020; TYPE:PF
      If(Me.MEI_Schedule_Weeks_Install>=2)
Result = 1.25
Else 
Result = 0.0
End If
      '   END FORMULA; PROP ID:8020; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Peak_Crew_Installers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Peak_Crew_Installers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8021; TYPE:PF
      Result = Math.Ceiling(Me.MEI_Crew_Avg_Crew_Size_Installers*Me.MEI_Crew_Peak_Crew_Hrs_per_Wk)
      '   END FORMULA; PROP ID:8021; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Peak_Crew_Installers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Total_Mobilization_Cost_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8041; TYPE:PF
      Result = Me.MEI_Crew_Mobilization_Cost_Per_Person * Me.MEI_Crew_Mobilization_Count_Installer * Me.MEI_Crew_Head_Count_Installer
      '   END FORMULA; PROP ID:8041; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Total_Mobilization_Cost_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8040; TYPE:PF
      Result = Me.MEI_Crew_Mobilization_Cost_Per_Person * Me.MEI_Crew_Mobilization_Count_Lead_Men * Me.MEI_Crew_Head_Count_Lead_Men
      '   END FORMULA; PROP ID:8040; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Total_Mobilization_Cost_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8039; TYPE:PF
      Result = Me.MEI_Crew_Mobilization_Cost_Per_Person * Me.MEI_Crew_Mobilization_Count_Superintendent * Me.MEI_Crew_Head_Count_Superintendent
      '   END FORMULA; PROP ID:8039; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Crew_Total_Mobilization_Cost_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8042; TYPE:PF
      Result = Me.MEI_Crew_Total_Mobilization_Cost_Superintendent + Me.MEI_Crew_Total_Mobilization_Cost_Lead_Men + Me.MEI_Crew_Total_Mobilization_Cost_Installer
      '   END FORMULA; PROP ID:8042; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Equipment_Rental_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Equipment_Rental_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7980; TYPE:PF
      Dim Sum1 As Double = (Me.MEI_EquipRent_Total_Cost_Single_Person_Lift +
Me.MEI_EquipRent_Total_Cost_Small_Scissors_Lift +
Me.MEI_EquipRent_Total_Cost_Large_Scissors_Lift +
Me.MEI_EquipRent_Total_Cost_Small_Boom_Lift +
Me.MEI_EquipRent_Total_Cost_Large_Boom_Lift +
Me.MEI_EquipRent_Total_Cost_Small_Telehandler +
Me.MEI_EquipRent_Total_Cost_Large_Telehandler +
Me.MEI_EquipRent_Total_Cost_Fork_Truck +
Me.MEI_EquipRent_Total_Cost_Cranes_Small_Indoors +
Me.MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors +
Me.MEI_EquipRent_Total_Cost_Welders +
Me.MEI_EquipRent_Total_Cost_Site_Trailer +
Me.MEI_EquipRent_Total_Cost_Dumpsters +
Me.MEI_EquipRent_Total_Cost_Porta_Johns)

If (Me.MEI_Schedule_Weeks_Install + Me.MEI_Schedule_Weeks_Comm) = 0 Then
Result = 0
Else
Result = math.Round(Sum1,0)
End If
      '   END FORMULA; PROP ID:7980; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Equipment_Rental_Dumpsters_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Equipment_Rental_Dumpsters_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7981; TYPE:PF
      Result = Math.Round(Me.MEI_EquipRent_Total_Cost_Dumpsters,0)
      '   END FORMULA; PROP ID:7981; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Dumpsters_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Equipment_Rental_Porta_Johns_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Equipment_Rental_Porta_Johns_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7982; TYPE:PF
      Result = Math.Round(Me.MEI_EquipRent_Total_Cost_Porta_Johns,0)
      '   END FORMULA; PROP ID:7982; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Porta_Johns_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8092; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8092; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Cranes_SmallIndoor").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8091; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8091; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Dumpsters() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Dumpsters").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8095; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Dumpsters=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8095; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Dumpsters", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Fork_Truck() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Fork_Truck").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8090; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Fork_Truck=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8090; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Fork_Truck", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Large_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8087; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Large_Boom_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8087; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Large_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8085; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Large_Scissors_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8085; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Large_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8089; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8089; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Porta_Johns() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Porta_Johns").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8096; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Porta_Johns=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8096; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Porta_Johns", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Single_Person_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8083; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Small_Scissors_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8083; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Site_Trailer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Site_Trailer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8094; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Site_Trailer=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8094; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Site_Trailer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Small_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8086; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Small_Boom_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8086; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Small_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8084; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Small_Scissors_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8084; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Small_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8088; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8088; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Welders() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Install_Duration_Welders").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8093; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Welders=0)
	Result = 0.0
Else
	Result = Me.MEI_Schedule_Weeks_Install
End If
      '   END FORMULA; PROP ID:8093; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Welders", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Cranes_Large_Outdoors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8078; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8078; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Cranes_Small_Indoors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8077; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8077; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Dumpsters() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Dumpsters").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8081; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8081; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Dumpsters", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Fork_Truck() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Fork_Truck").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8076; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8076; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Fork_Truck", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Large_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Large_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8073; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8073; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Large_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8071; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8071; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Large_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Large_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8075; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8075; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Porta_Johns() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Porta_Johns").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8082; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8082; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Porta_Johns", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Single_Person_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Single_Person_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8069; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8069; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Single_Person_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Site_Trailer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Site_Trailer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8080; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8080; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Site_Trailer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Small_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Small_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8072; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8072; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Small_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8070; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8070; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Small_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Small_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8074; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8074; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Welders() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Quantity_Welders").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8079; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8079; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Welders", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8120; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Cranes_Large_Outdoors=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors*Me.MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor*Me.MEI_EquipRent_Quantity_Cranes_Large_Outdoors
End If
      '   END FORMULA; PROP ID:8120; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Cranes_Small_Indoors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8119; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Cranes_Small_Indoors=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors*Me.MEI_EquipRent_Install_Duration_Cranes_SmallIndoor*Me.MEI_EquipRent_Quantity_Cranes_Small_Indoors
End If
      '   END FORMULA; PROP ID:8119; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Dumpsters() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Dumpsters").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8123; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Dumpsters=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Dumpsters*Me.MEI_EquipRent_Install_Duration_Dumpsters*Me.MEI_EquipRent_Quantity_Dumpsters
End If
      '   END FORMULA; PROP ID:8123; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Dumpsters", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Fork_Truck() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Fork_Truck").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8118; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Fork_Truck=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Fork_Truck*(Me.MEI_EquipRent_Install_Duration_Fork_Truck*Me.MEI_EquipRent_Quantity_Fork_Truck+Me.MEI_Schedule_Weeks_Comm)
End If
      '   END FORMULA; PROP ID:8118; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Fork_Truck", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Large_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8115; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Large_Boom_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Large_Boom_Lift*Me.MEI_EquipRent_Install_Duration_Large_Boom_Lift*Me.MEI_EquipRent_Quantity_Large_Boom_Lift
End If
      '   END FORMULA; PROP ID:8115; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Large_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8113; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Large_Scissors_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift*Me.MEI_EquipRent_Install_Duration_Large_Scissors_Lift*Me.MEI_EquipRent_Quantity_Large_Scissors_Lift
End If
      '   END FORMULA; PROP ID:8113; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Large_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8117; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Large_Telehandler=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Large_Telehandler*Me.MEI_EquipRent_Install_Duration_Large_Telehandler*Me.MEI_EquipRent_Quantity_Large_Telehandler
End If
      '   END FORMULA; PROP ID:8117; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Porta_Johns() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Porta_Johns").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8124; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Porta_Johns=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Porta_Johns*Me.MEI_EquipRent_Install_Duration_Porta_Johns*Me.MEI_EquipRent_Quantity_Porta_Johns
End If
      '   END FORMULA; PROP ID:8124; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Porta_Johns", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Single_Person_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8111; TYPE:PF
      If(Me.MEI_EquipRent_Quantity_Single_Person_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Single_Person_Lift*Me.MEI_EquipRent_Install_Duration_Single_Person_Lift*Me.MEI_EquipRent_Quantity_Single_Person_Lift
End If
      '   END FORMULA; PROP ID:8111; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Site_Trailer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Site_Trailer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8122; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8122; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Site_Trailer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Small_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8114; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Small_Boom_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Small_Boom_Lift*Me.MEI_EquipRent_Install_Duration_Small_Boom_Lift*Me.MEI_EquipRent_Quantity_Small_Boom_Lift
End If
      '   END FORMULA; PROP ID:8114; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Small_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8112; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Small_Scissors_Lift=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift*(Me.MEI_EquipRent_Install_Duration_Small_Scissors_Lift*MEI_EquipRent_Quantity_Small_Scissors_Lift+Me.MEI_Schedule_Weeks_Comm)
End If
      '   END FORMULA; PROP ID:8112; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Small_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8116; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Small_Telehandler=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Small_Telehandler*Me.MEI_EquipRent_Install_Duration_Small_Telehandler*Me.MEI_EquipRent_Quantity_Small_Telehandler
End If
      '   END FORMULA; PROP ID:8116; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Welders() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Total_Cost_Welders").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8121; TYPE:PF
      If (Me.MEI_EquipRent_Quantity_Welders=0)
	Result = 0.0
Else
	Result = Me.MEI_EquipRent_Weekly_Rate_Welders*Me.MEI_EquipRent_Install_Duration_Welders*Me.MEI_EquipRent_Quantity_Welders
End If
      '   END FORMULA; PROP ID:8121; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Welders", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8106; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8106; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8105; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8105; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Dumpsters() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Dumpsters").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8109; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8109; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Dumpsters", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Fork_Truck").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8104; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8104; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8101; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8101; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8099; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8099; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8103; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8103; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Porta_Johns").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8110; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8110; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Single_Person_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8097; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8097; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Site_Trailer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8108; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8108; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Boom_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8100; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8100; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8098; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8098; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Telehandler").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8102; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8102; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Welders() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_EquipRent_Weekly_Rate_Welders").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8107; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8107; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Welders", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Air_Piping() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Factors_Air_Piping").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8010; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8010; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Air_Piping", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Risk_Rating() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Factors_Risk_Rating").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8009; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8009; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Risk_Rating", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Seismic() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Factors_Seismic").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8011; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8011; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Seismic", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Factors_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8012; TYPE:PF
      Dim Var As String = Me.MEI_Factors_Risk_Rating
Result = Var.Substring(0, 1)
      '   END FORMULA; PROP ID:8012; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Fencing_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Fencing_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8063; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8063; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Fencing_Footage_Cost_per_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Fencing_Footage_Cost_per_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8065; TYPE:PF
      'Todo - Review: Check with business How often the Price change, Hardcoded 'coz its in excel - MPC 07/17/2025
Result = 0.25
      '   END FORMULA; PROP ID:8065; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_Cost_per_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Fencing_Footage_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Fencing_Footage_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8067; TYPE:PF
      Result = Math.Ceiling(Me.MEI_Fencing_Footage * Me.MEI_Fencing_Footage_Cost_per_Hours)
      '   END FORMULA; PROP ID:8067; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Gates_QTY() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Gates_QTY").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8064; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8064; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Gates_QTY_Cost_per_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Gates_QTY_Cost_per_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8066; TYPE:PF
      'Todo - Review: Check with business How often the Price change, Hardcoded 'coz its in excel - MPC 07/17/2025
Result = 4
      '   END FORMULA; PROP ID:8066; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_Cost_per_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Gates_QTY_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Gates_QTY_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8068; TYPE:PF
      Result = Me.MEI_Gates_QTY * Me.MEI_Gates_QTY_Cost_per_Hours
      '   END FORMULA; PROP ID:8068; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Current_Rate_IG_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Current_Rate_IG_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8152; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8152; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_IG_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Current_Rate_Lead_Person() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Current_Rate_Lead_Person").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8151; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8151; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_Lead_Person", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Current_Rate_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Current_Rate_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8150; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8150; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_New_Rate_IG_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_New_Rate_IG_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8155; TYPE:PF
      Result = Math.Ceiling((Me.MEI_Labor_Rate_Current_Rate_IG_Installer + Me.MEI_Labor_Rate_Current_Rate_IG_Installer*Me.MEI_Labor_Rate_Percent_Adjustment_IG_Installer)*100)/100
      '   END FORMULA; PROP ID:8155; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_IG_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_New_Rate_Lead_Person() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_New_Rate_Lead_Person").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8154; TYPE:PF
      Result = Math.Ceiling((Me.MEI_Labor_Rate_Current_Rate_Lead_Person + Me.MEI_Labor_Rate_Current_Rate_Lead_Person*Me.MEI_Labor_Rate_Percent_Adjustment_Lead_Person)*100)/100
      '   END FORMULA; PROP ID:8154; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_Lead_Person", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_New_Rate_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_New_Rate_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8153; TYPE:PF
      Result = Math.Ceiling((Me.MEI_Labor_Rate_Current_Rate_Superintendent + Me.MEI_Labor_Rate_Current_Rate_Superintendent*Me.MEI_Labor_Rate_Percent_Adjustment_Superintendent)*100)/100
      '   END FORMULA; PROP ID:8153; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Percent_Adjustment").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8146; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8146; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Percent_Adjustment_IG_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8149; TYPE:PF
      Result = Me.MEI_Labor_Rate_Percent_Adjustment
      '   END FORMULA; PROP ID:8149; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Percent_Adjustment_Lead_Person").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8148; TYPE:PF
      Result = Me.MEI_Labor_Rate_Percent_Adjustment
      '   END FORMULA; PROP ID:8148; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Percent_Adjustment_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8147; TYPE:PF
      Result = Me.MEI_Labor_Rate_Percent_Adjustment
      '   END FORMULA; PROP ID:8147; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8158; TYPE:PF
      Result = Math.Ceiling((Me.MEI_Labor_Rate_New_Rate_IG_Installer-Me.MEI_Labor_Rate_Current_Rate_IG_Installer)*Me.MEI_TTCB_Installer_Hours)
      '   END FORMULA; PROP ID:8158; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8157; TYPE:PF
      Result = Math.Ceiling((Me.MEI_Labor_Rate_New_Rate_Lead_Person-Me.MEI_Labor_Rate_Current_Rate_Lead_Person)*Me.MEI_TTCB_Lead_Person_Hours)
      '   END FORMULA; PROP ID:8157; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8156; TYPE:PF
      Result = Math.Ceiling((Me.MEI_Labor_Rate_New_Rate_Superintendent-Me.MEI_Labor_Rate_Current_Rate_Superintendent)*Me.MEI_Superintendent__Hours)
      '   END FORMULA; PROP ID:8156; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Total_Cost_Adjustment() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Labor_Rate_Total_Cost_Adjustment").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8159; TYPE:PF
      Result = Me.MEI_Labor_Rate_Tot_Cost_Adj_Superintendent+Me.MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person+Me.MEI_Labor_Rate_Tot_Cost_Adj_Installer
      '   END FORMULA; PROP ID:8159; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Total_Cost_Adjustment", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Mech_Conveyor_Installation_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Mech_Conveyor_Installation_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7943; TYPE:PF
      Result = 
Me.MEI_Superintendent_Cost +
Me.MEI_TTCB_Lead_Person_Cost +
Me.MEI_TTCB_Installer_Cost +
Me.MEI_Equipment_Rental_Cost +
Me.MEI_Supplies_Consumables_Cost +
Me.MEI_Travel_Expense_Cost +
Me.MEI_Permits_Cost +
Me.MEI_Miscellaneous_Cost
      '   END FORMULA; PROP ID:7943; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Mech_Conveyor_Installation_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Mech_Conveyor_Installation_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Mech_Conveyor_Installation_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7944; TYPE:PF
      Result = 
Me.MEI_Superintendent__Hours +
Me.MEI_TTCB_Lead_Person_Hours +
Me.MEI_TTCB_Installer_Hours
      '   END FORMULA; PROP ID:7944; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Mech_Conveyor_Installation_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Miscellaneous_Administrative_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Miscellaneous_Administrative_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7989; TYPE:PF
      Dim Var1 As Double
If Me.MEI_Other_Cost_Qty_Trucks = 0 Then 
Var1 = 0 
Else
Var1 = 15
End If
Result = (Math. Round(((Me.MEI_Other_Cost_Onsite_Admin_Duration_Wks * Me.MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week)+Var1),0))* (Me.MEI_TTCB_Installer_Rate * 0.75)
      '   END FORMULA; PROP ID:7989; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Miscellaneous_Administrative_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Miscellaneous_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Miscellaneous_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7988; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7988; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Miscellaneous_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Other_Cost_Onsite_Admin_Duration_Wks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8128; TYPE:PF
      If(Me.MEI_Project_Tier_Value <= 2 Or Me.MEI_Schedule_Weeks_Install > 8)
	Result = Me.MEI_Schedule_Weeks_Install
Else
	Result = 0.0
End If
      '   END FORMULA; PROP ID:8128; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8129; TYPE:PF
      If(Me.MEI_Other_Cost_Onsite_Admin_Duration_Wks > 0)
	Result = 40.0
Else
	Result = 0.0
End If
      '   END FORMULA; PROP ID:8129; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Permit_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Other_Cost_Permit_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8127; TYPE:PF
      Dim Var_Sum_F18_21 = Me.MEI_TTCB_Installer_Install_Hours + Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours + Me.MEI_TTCB_Installer_Demo_Hours + Me.MEI_TTCB_Installer_Miscellaneous_Hours
Dim Var_K9 = Me.MEI_Project_Tier_Value

If(Var_Sum_F18_21 = 0)
	Result = 0.0
Else If(Var_K9 <= 3.5)
	Result = 40
Else If(Var_K9 = 4)
	Result = 8
Else
	Result = 0.0
End If
      '   END FORMULA; PROP ID:8127; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Permit_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Qty_Gang_Boxes() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Other_Cost_Qty_Gang_Boxes").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8126; TYPE:PF
      If(Me.MEI_Project_Tier_Value >= 3.5)
	Result = 1
Else
	Result = 0
End If
      '   END FORMULA; PROP ID:8126; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Qty_Gang_Boxes", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Qty_Trucks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Other_Cost_Qty_Trucks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8125; TYPE:PF
      If(Me.MEI_Project_Tier_Value = 1)
	Result = 2
Else If(Me.MEI_Project_Tier_Value = 2 Or Me.MEI_Project_Tier_Value = 3)
	Result = 1
Else
	Result = 0
End If
      '   END FORMULA; PROP ID:8125; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Qty_Trucks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Comm_No_of_Installers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Comm_No_of_Installers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8028; TYPE:PF
      If ((Me.MEI_People_Needs_Comm_No_of_Lead_Men>0 Or Me.MEI_People_Needs_Comm_No_of_Superintendents>0) And Me.MEI_Schedule_Weeks_Comm>0)
	Result = 1
Else
	Result = 0
End If
      '   END FORMULA; PROP ID:8028; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Installers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Comm_No_of_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Comm_No_of_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8027; TYPE:PF
      If (Me.MEI_People_Needs_Comm_No_of_Superintendents<1 And Me.MEI_Schedule_Weeks_Comm>0)
	Result = 1
Else
	Result = 0
End If
      '   END FORMULA; PROP ID:8027; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Comm_No_of_Superintendents() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Comm_No_of_Superintendents").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8026; TYPE:PF
      If (Me.MEI_People_Needs_Install_No_of_Lead_Men<1 And Me.MEI_Schedule_Weeks_Comm>0)
	Result = 1
Else
	Result = 0
End If
      '   END FORMULA; PROP ID:8026; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Superintendents", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Install_No_of_Installers() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Install_No_of_Installers").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8025; TYPE:PF
      Result = Me.MEI_Crew_Avg_Crew_Size_Installers
      '   END FORMULA; PROP ID:8025; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Installers", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Install_No_of_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Install_No_of_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8024; TYPE:PF
      Dim Var As Double
Dim Var_Sum_F18_21 = Me.MEI_TTCB_Installer_Install_Hours + Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours + Me.MEI_TTCB_Installer_Demo_Hours + Me.MEI_TTCB_Installer_Miscellaneous_Hours
Dim Var_Div = (Var_Sum_F18_21/Me.MEI_Crew_Average_Hrs_per_Wk)/Me.MEI_Schedule_Weeks_Install/10

If(Var_Sum_F18_21 = 0)
	Var = 0
Else If(Me.MEI_Schedule_Weeks_Install>0)
	Var = math.floor(Var_Div)+1
Else	Var = 0
End If
Result = Var
      '   END FORMULA; PROP ID:8024; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Install_No_of_Superintendents() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Install_No_of_Superintendents").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8023; TYPE:PF
      If(Me.MEI_People_Needs_Install_No_of_Lead_Men>=2)
Result = 1
Else 
Result = 0.0
End If
      '   END FORMULA; PROP ID:8023; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Superintendents", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Work_Percent_No_of_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8030; TYPE:PF
      If (Me.MEI_People_Needs_Install_No_of_Lead_Men > 0)
	If(Me.MEI_People_Needs_Install_No_of_Lead_Men = 1)
	Result = 0.9
	Else
	Result = 0.5
	End If
Else
	Result = 0.0
End If
      '   END FORMULA; PROP ID:8030; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_People_Needs_Work_Percent_No_of_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8029; TYPE:PF
      If (Me.MEI_People_Needs_Install_No_of_Superintendents = 0)
	Result = 0.0
Else If(Me.MEI_People_Needs_Install_No_of_Lead_Men = 0)
	Result = 0.9
Else If(Me.MEI_People_Needs_Install_No_of_Lead_Men = 1)
	Result = 0.5
Else
	Result = 0.0
End If
      '   END FORMULA; PROP ID:8029; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Permits_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Permits_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7987; TYPE:PF
      Result = Me.MEI_Other_Cost_Permit_Hours *  Me.MEI_TTCB_Lead_Person_Rate
      '   END FORMULA; PROP ID:7987; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Permits_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Customer() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Info_Customer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8002; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8002; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Customer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Description() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Info_Description").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8005; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8005; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Description", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Location() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Info_Location").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8003; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8003; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Location", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Number() As Long
          Dim Result as Long
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Info_Number").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8004; TYPE:PF
      Result = 0
      '   END FORMULA; PROP ID:8004; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Number", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Project_Tier() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Info_Project_Tier").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8007; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8007; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Project_Tier", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Quote_Date() As Date
          Dim Result as Date
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Info_Quote_Date").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8006; TYPE:PF
      result = Date.Today()
      '   END FORMULA; PROP ID:8006; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Quote_Date", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Tier_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Project_Tier_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8008; TYPE:PF
      Dim K8 As String = Me.MEI_Project_Info_Project_Tier
If (K8 = "Tier 1: $20M+")
	Result = 1
Else If (K8 = "Tier 2: $5M - $20M")
	Result = 2
Else If (K8 = "Tier 3: $2M - $5M")
	Result = 3
Else If (K8 = "Tier 3.5: $1M - $2M")
	Result = 3.5
Else If (K8 = "Tier 4: $500k - $1M")
	Result = 4
Else If (K8 = "Tier 5: <$500K")
	Result = 5
Else Result = 0
End If
      '   END FORMULA; PROP ID:8008; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Tier_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_End_Mechanical_Installation() As Date
          Dim Result as Date
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Schedule_End_Mechanical_Installation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8014; TYPE:PF
      result = Date.Today()
      '   END FORMULA; PROP ID:8014; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_End_Mechanical_Installation", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_End_Run_In_Level_5() As Date
          Dim Result as Date
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Schedule_End_Run_In_Level_5").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8015; TYPE:PF
      result = Date.Today()
      '   END FORMULA; PROP ID:8015; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_End_Run_In_Level_5", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_Start_Mechanical_Installation() As Date
          Dim Result as Date
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Schedule_Start_Mechanical_Installation").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8013; TYPE:PF
      result = Date.Today()
      '   END FORMULA; PROP ID:8013; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Start_Mechanical_Installation", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_Weeks_Comm() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Schedule_Weeks_Comm").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8017; TYPE:PF
      ' Calculate the difference
Dim difference As TimeSpan = Me.MEI_Schedule_End_Run_In_Level_5 - Me.MEI_Schedule_End_Mechanical_Installation

' Get number of days
Dim totalDays As Integer = difference.Days + 1

' Get number of weeks (rounded down)
Dim totalWeeks As Integer = totalDays / 7

If(Me.MEI_Schedule_End_Run_In_Level_5 > Me.MEI_Schedule_End_Mechanical_Installation)
Result = Math.Ceiling(totalWeeks*10)/10
Else 
Result = 0.0
End If
      '   END FORMULA; PROP ID:8017; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Weeks_Comm", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_Weeks_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Schedule_Weeks_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8016; TYPE:PF
      ' Calculate the difference
Dim difference As TimeSpan = Me.MEI_Schedule_End_Mechanical_Installation - Me.MEI_Schedule_Start_Mechanical_Installation

' Get number of days
Dim totalDays As Integer = difference.Days + 1

' Get number of weeks (rounded down)
Dim totalWeeks As Integer = totalDays / 7

If(Me.MEI_Schedule_End_Mechanical_Installation > Me.MEI_Schedule_Start_Mechanical_Installation)
Result = Math.Ceiling(totalWeeks*10)/10
Else 
Result = 0.0
End If
      '   END FORMULA; PROP ID:8016; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Weeks_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Catwalk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Feet_Catwalk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8164; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8164; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Catwalk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Demo() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Feet_Demo").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8160; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8160; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Demo", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_GRID_Structure() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Feet_GRID_Structure").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8161; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8161; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_GRID_Structure", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Feet_Platform_Bar_Grating").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8162; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8162; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Feet_Platform_Resin_Deck").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8163; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8163; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Feet_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8165; TYPE:PF
      Result = Me.MEI_Structures_Platforms_Feet_Demo+Me.MEI_Structures_Platforms_Feet_GRID_Structure+Me.MEI_Structures_Platforms_Feet_Platform_Bar_Grating+Me.MEI_Structures_Platforms_Feet_Platform_Resin_Deck+Me.MEI_Structures_Platforms_Feet_Catwalk
      '   END FORMULA; PROP ID:8165; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Catwalk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Hour_Catwalk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8170; TYPE:PF
      Result = Math.Ceiling(Me.MEI_Structures_Platforms_Feet_Catwalk*Me.MEI_Structures_Platforms_Per_Ft_Catwalk)
      '   END FORMULA; PROP ID:8170; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Catwalk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Demo() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Hour_Demo").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8166; TYPE:PF
      Result = Math.Ceiling(Me.MEI_Structures_Platforms_Feet_Demo*Me.MEI_Structures_Platforms_Per_Ft_Demo)
      '   END FORMULA; PROP ID:8166; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Demo", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_GRID_Structure() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Hour_GRID_Structure").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8167; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8167; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_GRID_Structure", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Hour_Platform_Bar_Grating").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8168; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8168; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Hour_Platform_Resin_Deck").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8169; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8169; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Hour_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8171; TYPE:PF
      Result = Me.MEI_Structures_Platforms_Hour_Demo+Me.MEI_Structures_Platforms_Hour_GRID_Structure+Me.MEI_Structures_Platforms_Hour_Platform_Bar_Grating+Me.MEI_Structures_Platforms_Hour_Platform_Resin_Deck+Me.MEI_Structures_Platforms_Hour_Catwalk
      '   END FORMULA; PROP ID:8171; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Catwalk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Per_Ft_Catwalk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8173; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8173; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Catwalk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Demo() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Per_Ft_Demo").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8172; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8172; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Demo", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Total() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Structures_Platforms_Per_Ft_Total").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8174; TYPE:PF
      Try
	Result = Me.MEI_Structures_Platforms_Hour_Total/Me.MEI_Structures_Platforms_Feet_Total
Catch ex As Exception
	Result = 0.0
End Try


'If (Me.MEI_Structures_Platforms_Feet_Total = 0)
'	Result = 0.0
'Else
'	Result = Me.MEI_Structures_Platforms_Hour_Total/Me.MEI_Structures_Platforms_Feet_Total
'End If
      '   END FORMULA; PROP ID:8174; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Total", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent__Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent__Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7949; TYPE:PF
      Result = 
Me.MEI_Superintendent_Install_Hours +
Me.MEI_Superintendent_Stagnant_Hours_Hours
      '   END FORMULA; PROP ID:7949; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent__Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7948; TYPE:PF
      Result = 
Me.MEI_Superintendent_Commissioning_Hours *
Me.MEI_Superintendent_Rate
      '   END FORMULA; PROP ID:7948; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Commissioning_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Commissioning_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7952; TYPE:PF
      Result = 
Math.Ceiling(Me.MEI_Schedule_Weeks_Comm * Me.MEI_Crew_Comm_Sppt_Hrs_per_Wk * Me.MEI_People_Needs_Comm_No_of_Superintendents)
      '   END FORMULA; PROP ID:7952; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Commissioning_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7945; TYPE:PF
      Result = 
Me.MEI_Superintendent_Install_Cost +
Me.MEI_Superintendent_Stagnant_Hours_Cost
      '   END FORMULA; PROP ID:7945; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Install_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Install_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7946; TYPE:PF
      Result = 
Me.MEI_Superintendent_Install_Hours *
Me.MEI_Superintendent_Rate
      '   END FORMULA; PROP ID:7946; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Install_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7950; TYPE:PF
      Result = 
Math.Ceiling(Me.MEI_Schedule_Weeks_Install * Me.MEI_People_Needs_Install_No_of_Superintendents * Me.MEI_Crew_Average_Hrs_per_Wk)
      '   END FORMULA; PROP ID:7950; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7953; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7953; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Stagnant_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Stagnant_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7947; TYPE:PF
      Result = 
Me.MEI_Superintendent_Stagnant_Hours_Hours *
Me.MEI_Superintendent_Rate
      '   END FORMULA; PROP ID:7947; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Stagnant_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Stagnant_Hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Superintendent_Stagnant_Hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7951; TYPE:PF
      Dim Var1,Var2 As Double

If (MEI_Crew_Average_Hrs_per_Wk < 40) Then
Var1 = ((40-MEI_Crew_Average_Hrs_per_Wk )*MEI_People_Needs_Install_No_of_Superintendents)
Else
Var1 = 0
End If

If (MEI_Crew_Comm_Sppt_Hrs_per_Wk < 40) Then
Var2 =  (40-MEI_Crew_Comm_Sppt_Hrs_per_Wk)* MEI_People_Needs_Comm_No_of_Superintendents
Else 
Var2 = 0
End If
Result = Var1 + Var2
      '   END FORMULA; PROP ID:7951; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Stagnant_Hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Supplies_Consumables_All_Other_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Supplies_Consumables_All_Other_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7985; TYPE:PF
      Result = Math.Round(((Me.MEI_Superintendent__Hours + Me.MEI_TTCB_Lead_Person_Hours + Me.MEI_TTCB_Installer_Hours)*1),0)
      '   END FORMULA; PROP ID:7985; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_All_Other_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Supplies_Consumables_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Supplies_Consumables_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7983; TYPE:PF
      Result = Math.Round((Me.MEI_Supplies_Consumables_HW_Air_Piping_Cost + Me.MEI_Supplies_Consumables_All_Other_Cost),0)
      '   END FORMULA; PROP ID:7983; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Supplies_Consumables_HW_Air_Piping_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7984; TYPE:PF
      Result = Math.Round((((Me.MEI_Superintendent__Hours + Me.MEI_TTCB_Lead_Person_Hours + Me.MEI_TTCB_Installer_Hours)* 0.4) + Me.MEI_Air_Pipe_Mat_Cost_Cost),0)
      '   END FORMULA; PROP ID:7984; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8134; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8134; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8133; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8133; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8132; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8132; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8140; TYPE:PF
      Result = Me.MEI_Crew_Total_Mobilization_Cost_Installer
      '   END FORMULA; PROP ID:8140; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8139; TYPE:PF
      Result = Me.MEI_Crew_Total_Mobilization_Cost_Lead_Men
      '   END FORMULA; PROP ID:8139; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8138; TYPE:PF
      Result = Me.MEI_Crew_Total_Mobilization_Cost_Superintendent
      '   END FORMULA; PROP ID:8138; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8137; TYPE:PF
      Result = (Me.MEI_Schedule_Weeks_Install*Me.MEI_People_Needs_Install_No_of_Installers + Me.MEI_Schedule_Weeks_Comm*Me.MEI_People_Needs_Comm_No_of_Installers)*Me.MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer
      '   END FORMULA; PROP ID:8137; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8136; TYPE:PF
      Result = (Me.MEI_Schedule_Weeks_Install*Me.MEI_People_Needs_Install_No_of_Lead_Men + Me.MEI_Schedule_Weeks_Comm*Me.MEI_People_Needs_Comm_No_of_Lead_Men)*Me.MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men
      '   END FORMULA; PROP ID:8136; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8135; TYPE:PF
      Result = (Me.MEI_Schedule_Weeks_Install*Me.MEI_People_Needs_Install_No_of_Superintendents + Me.MEI_Schedule_Weeks_Comm*Me.MEI_People_Needs_Comm_No_of_Superintendents)*Me.MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent
      '   END FORMULA; PROP ID:8135; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8144; TYPE:PF
      Result = Me.MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer+ Me.MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer
      '   END FORMULA; PROP ID:8144; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8143; TYPE:PF
      Result = Me.MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men+ Me.MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men
      '   END FORMULA; PROP ID:8143; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8142; TYPE:PF
      Result = Me.MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent + Me.MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI
      '   END FORMULA; PROP ID:8142; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Total_Mobilization_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8141; TYPE:PF
      Result = Me.MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI + Me.MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men + Me.MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer
      '   END FORMULA; PROP ID:8141; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Crew_Total_Travel_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8145; TYPE:PF
      Result = Math.Ceiling(Me.MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI + Me.MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men + Me.MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer)
      '   END FORMULA; PROP ID:8145; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Per_Diem_Range() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Per_Diem_Range").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8130; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:8130; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_Link() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Per_Diem_Range_Link").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8131; TYPE:PF
      ' Todo - Review: Check with team how to implement URL in RS - MPC 07/17/2025

Result = "https://www.gsa.gov/travel/plan-book/per-diem-rates"
      '   END FORMULA; PROP ID:8131; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range_Link", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Expense_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Expense_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7986; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7986; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Expense_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Costing_D9() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Costing_D9").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7709; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7709; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Costing_D9", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7969; TYPE:PF
      Result = Me.MEI_TTCB_Installer_Commissioning_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7969; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Commissioning_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Commissioning_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7978; TYPE:PF
      Result = Math.Round((Me.MEI_Schedule_Weeks_Comm * Me.MEI_Crew_Comm_Sppt_Hrs_per_Wk * MEI_People_Needs_Comm_No_of_Installers),0)
      '   END FORMULA; PROP ID:7978; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Commissioning_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7963; TYPE:PF
      Dim Sum1 As Double = Me.MEI_TTCB_Installer_Install_Cost +
Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost +
Me.MEI_TTCB_Installer_Demo_Cost +
Me.MEI_TTCB_Installer_Miscellaneous_Cost +
Me.MEI_TTCB_Installer_Stagnant_Hours_Cost

If(Sum1<0)
Result = 0
Else 
Result = Sum1
End If
      '   END FORMULA; PROP ID:7963; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Demo_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Demo_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7966; TYPE:PF
      Result = Me.MEI_TTCB_Installer_Demo_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7966; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Demo_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Demo_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Demo_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7975; TYPE:PF
      Result = Math.Round(Me.MEI_Structures_Platforms_Hour_Demo,0)
      '   END FORMULA; PROP ID:7975; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Demo_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7972; TYPE:PF
      Dim Sum1 As Double = Me.MEI_Schedule_Weeks_Install + Me.MEI_Schedule_Weeks_Comm
Dim Sum2 As Double = Me.MEI_TTCB_Installer_Install_Hours +
Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours +
Me.MEI_TTCB_Installer_Demo_Hours +
Me.MEI_TTCB_Installer_Miscellaneous_Hours

Dim Sum3 As Double = Me.MEI_TTCB_Installer_Install_Hours +
Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours +
Me.MEI_TTCB_Installer_Demo_Hours +
Me.MEI_TTCB_Installer_Miscellaneous_Hours + Me.MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours

Dim Sum4 As Double = Me.MEI_TTCB_Installer_Stagnant_Hours_Hours +
Me.MEI_TTCB_Installer_Commissioning_Hours

Dim Sum5 As Double = Me.MEI_TTCB_Installer_Install_Hours +
Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours +
Me.MEI_TTCB_Installer_Demo_Hours +
Me.MEI_TTCB_Installer_Miscellaneous_Hours +
Me.MEI_TTCB_Installer_Stagnant_Hours_Hours +
Me.MEI_TTCB_Installer_Commissioning_Hours +
Me.MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours

If ((Sum1 = 0 ) Or (Sum2 = 0)) Then
Result = 0 
Else If (Sum3 < (Me.MEI_Schedule_Weeks_Install * Me.MEI_Crew_Average_Hrs_per_Wk)) Then
	Result = ((MEI_Schedule_Weeks_Comm * MEI_Crew_Average_Hrs_per_Wk ) + (Sum4))
	Else 
	Result = Sum5
End If
      '   END FORMULA; PROP ID:7972; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Install_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Install_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7964; TYPE:PF
      Result = Me.MEI_TTCB_Installer_Install_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7964; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Install_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7973; TYPE:PF
      Dim Sum1 As Double = Me.MEI_Adjust_Hours_TTCB_Sorter + Me.MEI_Adjust_Hours_Clean_Up + Me.MEI_Air_Pipe_Hours_Cost

Result = Math.Round(Sum1,0)
      '   END FORMULA; PROP ID:7973; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Miscellaneous_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7967; TYPE:PF
      Result = Me.MEI_TTCB_Installer_Miscellaneous_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7967; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Miscellaneous_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Miscellaneous_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7976; TYPE:PF
      Result = Math.Round(MEI_Adjust_Hours_Total,0)
      '   END FORMULA; PROP ID:7976; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Miscellaneous_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7965; TYPE:PF
      Result = Me.MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7965; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7974; TYPE:PF
      Dim sum1 As Double  = Me.MEI_Structures_Platforms_Hour_GRID_Structure +
Me.MEI_Structures_Platforms_Hour_Platform_Bar_Grating +
Me.MEI_Structures_Platforms_Hour_Platform_Resin_Deck +
Me.MEI_Structures_Platforms_Hour_Catwalk

Result = Math.Round(sum1,0)
      '   END FORMULA; PROP ID:7974; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7971; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7971; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Stagnant_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7968; TYPE:PF
      Result = Me.MEI_TTCB_Installer_Stagnant_Hours_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7968; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_Stagnant_Hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7977; TYPE:PF
      Dim Var1 As Double
If (Me.MEI_Crew_Average_Hrs_per_Wk < 40) Then
Var1 = ((40 - Me.MEI_Crew_Average_Hrs_per_Wk) * Me.MEI_People_Needs_Install_No_of_Installers)
Else
Var1 = 0
End If

Dim Var2 As Double
If ( Me.MEI_Crew_Comm_Sppt_Hrs_per_Wk < 40) Then
Var2 = ((40 - Me.MEI_Crew_Comm_Sppt_Hrs_per_Wk) * Me.MEI_People_Needs_Comm_No_of_Installers)
Else
Var2 = 0
End If
Result = Var1 + Var2
      '   END FORMULA; PROP ID:7977; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7970; TYPE:PF
      Result = Me.MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours * Me.MEI_TTCB_Installer_Rate
      '   END FORMULA; PROP ID:7970; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7979; TYPE:PF
      Result = (-((Me.MEI_TTCB_Lead_Person_Install_Hours * Me.MEI_People_Needs_Work_Percent_No_of_Lead_Men)+
(Me.MEI_Superintendent_Install_Hours * Me.MEI_People_Needs_Work_Percent_No_of_Superintendent)))
      '   END FORMULA; PROP ID:7979; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7957; TYPE:PF
      Result = 
Me.MEI_TTCB_Lead_Person_Commissioning_Hours * Me.MEI_TTCB_Lead_Person_Rate
      '   END FORMULA; PROP ID:7957; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Commissioning_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7961; TYPE:PF
      Dim Var1 As Double = (Me.MEI_Schedule_Weeks_Comm * Me.MEI_Crew_Comm_Sppt_Hrs_per_Wk * Me.MEI_People_Needs_Comm_No_of_Lead_Men)
Result = 
Math.Round(Var1,0 )
      '   END FORMULA; PROP ID:7961; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Commissioning_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7954; TYPE:PF
      Result = 
Me.MEI_TTCB_Lead_Person_Install_Cost +
Me.MEI_TTCB_Lead_Person_Stagnant_Hours_Cost
      '   END FORMULA; PROP ID:7954; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7958; TYPE:PF
      Result = 
Me.MEI_TTCB_Lead_Person_Install_Hours +
Me.MEI_TTCB_Lead_Person_Stagnant_Hours_Hours
      '   END FORMULA; PROP ID:7958; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Install_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Install_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7955; TYPE:PF
      Result = 
Me.MEI_TTCB_Lead_Person_Install_Hours * Me.MEI_TTCB_Lead_Person_Rate
      '   END FORMULA; PROP ID:7955; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Install_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7959; TYPE:PF
      Dim Var1 As Double = (Me.MEI_Schedule_Weeks_Install * Me.MEI_People_Needs_Install_No_of_Lead_Men * Me.MEI_Crew_Average_Hrs_per_Wk)
Result = 
Math.Round(Var1,0 )
      '   END FORMULA; PROP ID:7959; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7962; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:7962; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7956; TYPE:PF
      Result = 
Me.MEI_TTCB_Lead_Person_Stagnant_Hours_Hours * Me.MEI_TTCB_Lead_Person_Rate
      '   END FORMULA; PROP ID:7956; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:7960; TYPE:PF
      Dim Var1, Var2 As Double
If (Me.MEI_Crew_Average_Hrs_per_Wk < 40) Then
Var1 = ((40-Me.MEI_Crew_Average_Hrs_per_Wk )* Me.MEI_People_Needs_Install_No_of_Lead_Men)
Else
Var1 = 0
End If

If (MEI_Crew_Comm_Sppt_Hrs_per_Wk < 40) Then
Var2 =  (40-MEI_Crew_Comm_Sppt_Hrs_per_Wk)* MEI_People_Needs_Comm_No_of_Lead_Men
Else 
Var2 = 0
End If

Result = Var1 + Var2
      '   END FORMULA; PROP ID:7960; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Clean_Up_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Clean_Up"
          Me.Properties("MEI_Adjust_Dollar_Clean_Up").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8045; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8045; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Clean_Up_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Clean_Up").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Fencing_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Fencing"
          Me.Properties("MEI_Adjust_Dollar_Fencing").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8046; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8046; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Fencing_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Fencing").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Gates_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Gates"
          Me.Properties("MEI_Adjust_Dollar_Gates").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8047; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8047; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Gates_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Gates").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_1_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Miscellaneous_1"
          Me.Properties("MEI_Adjust_Dollar_Miscellaneous_1").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8048; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8048; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_1_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Miscellaneous_1").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_2_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Miscellaneous_2"
          Me.Properties("MEI_Adjust_Dollar_Miscellaneous_2").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8049; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8049; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_2_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Miscellaneous_2").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_3_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Miscellaneous_3"
          Me.Properties("MEI_Adjust_Dollar_Miscellaneous_3").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8050; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8050; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_3_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Miscellaneous_3").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_System_Efficiency_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_System_Efficiency"
          Me.Properties("MEI_Adjust_Dollar_System_Efficiency").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8044; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8044; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_System_Efficiency_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_System_Efficiency").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_Total"
          Me.Properties("MEI_Adjust_Dollar_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8051; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8051; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Dollar_TTCB_Sorter_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Dollar_TTCB_Sorter"
          Me.Properties("MEI_Adjust_Dollar_TTCB_Sorter").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8043; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8043; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_TTCB_Sorter_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Dollar_TTCB_Sorter").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Clean_Up_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Clean_Up"
          Me.Properties("MEI_Adjust_Hours_Clean_Up").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8054; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8054; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Clean_Up_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Clean_Up").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Fencing_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Fencing"
          Me.Properties("MEI_Adjust_Hours_Fencing").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8055; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8055; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Fencing_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Fencing").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Gates_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Gates"
          Me.Properties("MEI_Adjust_Hours_Gates").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8056; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8056; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Gates_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Gates").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_1_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Miscellaneous_1"
          Me.Properties("MEI_Adjust_Hours_Miscellaneous_1").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8057; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8057; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_1_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Miscellaneous_1").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_2_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Miscellaneous_2"
          Me.Properties("MEI_Adjust_Hours_Miscellaneous_2").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8058; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8058; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_2_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Miscellaneous_2").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_3_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Miscellaneous_3"
          Me.Properties("MEI_Adjust_Hours_Miscellaneous_3").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8059; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8059; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_3_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Miscellaneous_3").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_System_Efficiency_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_System_Efficiency"
          Me.Properties("MEI_Adjust_Hours_System_Efficiency").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8053; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8053; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_System_Efficiency_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_System_Efficiency").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_Total"
          Me.Properties("MEI_Adjust_Hours_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8060; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8060; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_Hours_TTCB_Sorter_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_Hours_TTCB_Sorter"
          Me.Properties("MEI_Adjust_Hours_TTCB_Sorter").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8052; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8052; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_TTCB_Sorter_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_Hours_TTCB_Sorter").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Adjust_TTCB_Sorter_Length_in_Meters"
          Me.Properties("MEI_Adjust_TTCB_Sorter_Length_in_Meters").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8061; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8061; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Adjust_TTCB_Sorter_Length_in_Meters").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_1_2_Inch_pipeCost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_1_2_Inch_pipeCost"
          Me.Properties("MEI_Air_Pipe_1_2_Inch_pipeCost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7994; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7994; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_1_2_Inch_pipeCost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_1_2_Inch_pipeCost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost"
          Me.Properties("MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7992; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7992; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost"
          Me.Properties("MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7991; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7991; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_3_Inch_pipe_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_3_Inch_pipe_Cost"
          Me.Properties("MEI_Air_Pipe_3_Inch_pipe_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7990; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7990; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_3_Inch_pipe_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_3_Inch_pipe_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_7_8_Inch_pipe_Cost"
          Me.Properties("MEI_Air_Pipe_7_8_Inch_pipe_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7993; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7993; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_7_8_Inch_pipe_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_A_C_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_A_C_Cost"
          Me.Properties("MEI_Air_Pipe_A_C_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7997; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7997; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_A_C_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_A_C_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Dryer_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_Dryer_Cost"
          Me.Properties("MEI_Air_Pipe_Dryer_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7999; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7999; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Dryer_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_Dryer_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_FILTER_REG_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_FILTER_REG_Cost"
          Me.Properties("MEI_Air_Pipe_FILTER_REG_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7996; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7996; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_FILTER_REG_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_FILTER_REG_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_Hours_Cost"
          Me.Properties("MEI_Air_Pipe_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8001; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8001; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Mat_Cost_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_Mat_Cost_Cost"
          Me.Properties("MEI_Air_Pipe_Mat_Cost_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8000; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8000; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Mat_Cost_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_Mat_Cost_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Air_Pipe_Tubing_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Air_Pipe_Tubing_Cost"
          Me.Properties("MEI_Air_Pipe_Tubing_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7995; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7995; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Tubing_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Air_Pipe_Tubing_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Ajust_Total_Percentage_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Ajust_Total_Percentage"
          Me.Properties("MEI_Ajust_Total_Percentage").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8062; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8062; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Ajust_Total_Percentage_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Ajust_Total_Percentage").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Average_Hrs_per_Wk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Average_Hrs_per_Wk"
          Me.Properties("MEI_Crew_Average_Hrs_per_Wk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8018; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8018; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Average_Hrs_per_Wk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Average_Hrs_per_Wk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Avg_Crew_Size_Installers_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Avg_Crew_Size_Installers"
          Me.Properties("MEI_Crew_Avg_Crew_Size_Installers").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8022; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8022; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Avg_Crew_Size_Installers_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Avg_Crew_Size_Installers").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Comm_Sppt_Hrs_per_Wk"
          Me.Properties("MEI_Crew_Comm_Sppt_Hrs_per_Wk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8019; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8019; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Comm_Sppt_Hrs_per_Wk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Head_Count_Installer"
          Me.Properties("MEI_Crew_Head_Count_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8037; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8037; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Head_Count_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Head_Count_Lead_Men"
          Me.Properties("MEI_Crew_Head_Count_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8036; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8036; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Head_Count_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Head_Count_Superintendent"
          Me.Properties("MEI_Crew_Head_Count_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8035; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8035; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Head_Count_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Head_Count_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Head_Count_Total"
          Me.Properties("MEI_Crew_Head_Count_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8038; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8038; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Head_Count_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Cost_Per_Person_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Mobilization_Cost_Per_Person"
          Me.Properties("MEI_Crew_Mobilization_Cost_Per_Person").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8031; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8031; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Cost_Per_Person_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Mobilization_Cost_Per_Person").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Count_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Mobilization_Count_Installer"
          Me.Properties("MEI_Crew_Mobilization_Count_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8034; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8034; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Mobilization_Count_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Count_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Mobilization_Count_Lead_Men"
          Me.Properties("MEI_Crew_Mobilization_Count_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8033; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8033; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Mobilization_Count_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Mobilization_Count_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Mobilization_Count_Superintendent"
          Me.Properties("MEI_Crew_Mobilization_Count_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8032; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8032; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Mobilization_Count_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Peak_Crew_Hrs_per_Wk"
          Me.Properties("MEI_Crew_Peak_Crew_Hrs_per_Wk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8020; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8020; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Peak_Crew_Hrs_per_Wk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Peak_Crew_Installers_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Peak_Crew_Installers"
          Me.Properties("MEI_Crew_Peak_Crew_Installers").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8021; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8021; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Peak_Crew_Installers_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Peak_Crew_Installers").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Total_Mobilization_Cost_Installer"
          Me.Properties("MEI_Crew_Total_Mobilization_Cost_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8041; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8041; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Total_Mobilization_Cost_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Total_Mobilization_Cost_Lead_Men"
          Me.Properties("MEI_Crew_Total_Mobilization_Cost_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8040; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8040; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Total_Mobilization_Cost_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Total_Mobilization_Cost_Superintendent"
          Me.Properties("MEI_Crew_Total_Mobilization_Cost_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8039; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8039; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Total_Mobilization_Cost_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Crew_Total_Mobilization_Cost_Total"
          Me.Properties("MEI_Crew_Total_Mobilization_Cost_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8042; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8042; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Crew_Total_Mobilization_Cost_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Equipment_Rental_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Equipment_Rental_Cost"
          Me.Properties("MEI_Equipment_Rental_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7980; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7980; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Equipment_Rental_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Equipment_Rental_Dumpsters_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Equipment_Rental_Dumpsters_Cost"
          Me.Properties("MEI_Equipment_Rental_Dumpsters_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7981; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7981; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Dumpsters_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Equipment_Rental_Dumpsters_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Equipment_Rental_Porta_Johns_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Equipment_Rental_Porta_Johns_Cost"
          Me.Properties("MEI_Equipment_Rental_Porta_Johns_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7982; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7982; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Porta_Johns_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Equipment_Rental_Porta_Johns_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor"
          Me.Properties("MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8092; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8092; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Cranes_SmallIndoor"
          Me.Properties("MEI_EquipRent_Install_Duration_Cranes_SmallIndoor").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8091; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8091; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Cranes_SmallIndoor").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Dumpsters_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Dumpsters"
          Me.Properties("MEI_EquipRent_Install_Duration_Dumpsters").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8095; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8095; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Dumpsters_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Dumpsters").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Fork_Truck_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Fork_Truck"
          Me.Properties("MEI_EquipRent_Install_Duration_Fork_Truck").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8090; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8090; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Fork_Truck_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Fork_Truck").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Large_Boom_Lift"
          Me.Properties("MEI_EquipRent_Install_Duration_Large_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8087; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8087; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Large_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Large_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Install_Duration_Large_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8085; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8085; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Large_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Large_Telehandler"
          Me.Properties("MEI_EquipRent_Install_Duration_Large_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8089; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8089; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Large_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Porta_Johns_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Porta_Johns"
          Me.Properties("MEI_EquipRent_Install_Duration_Porta_Johns").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8096; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8096; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Porta_Johns_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Porta_Johns").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Single_Person_Lift"
          Me.Properties("MEI_EquipRent_Install_Duration_Single_Person_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8083; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8083; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Single_Person_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Site_Trailer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Site_Trailer"
          Me.Properties("MEI_EquipRent_Install_Duration_Site_Trailer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8094; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8094; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Site_Trailer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Site_Trailer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Small_Boom_Lift"
          Me.Properties("MEI_EquipRent_Install_Duration_Small_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8086; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8086; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Small_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Small_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Install_Duration_Small_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8084; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8084; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Small_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Small_Telehandler"
          Me.Properties("MEI_EquipRent_Install_Duration_Small_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8088; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8088; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Small_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Install_Duration_Welders_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Install_Duration_Welders"
          Me.Properties("MEI_EquipRent_Install_Duration_Welders").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8093; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8093; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Welders_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Install_Duration_Welders").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Cranes_Large_Outdoors"
          Me.Properties("MEI_EquipRent_Quantity_Cranes_Large_Outdoors").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8078; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8078; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Cranes_Large_Outdoors").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Cranes_Small_Indoors"
          Me.Properties("MEI_EquipRent_Quantity_Cranes_Small_Indoors").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8077; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8077; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Cranes_Small_Indoors").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Dumpsters_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Dumpsters"
          Me.Properties("MEI_EquipRent_Quantity_Dumpsters").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8081; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8081; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Dumpsters_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Dumpsters").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Fork_Truck_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Fork_Truck"
          Me.Properties("MEI_EquipRent_Quantity_Fork_Truck").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8076; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8076; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Fork_Truck_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Fork_Truck").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Large_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Large_Boom_Lift"
          Me.Properties("MEI_EquipRent_Quantity_Large_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8073; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8073; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Large_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Large_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Quantity_Large_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8071; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8071; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Large_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Large_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Large_Telehandler"
          Me.Properties("MEI_EquipRent_Quantity_Large_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8075; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8075; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Large_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Porta_Johns_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Porta_Johns"
          Me.Properties("MEI_EquipRent_Quantity_Porta_Johns").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8082; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8082; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Porta_Johns_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Porta_Johns").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Single_Person_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Single_Person_Lift"
          Me.Properties("MEI_EquipRent_Quantity_Single_Person_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8069; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8069; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Single_Person_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Single_Person_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Site_Trailer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Site_Trailer"
          Me.Properties("MEI_EquipRent_Quantity_Site_Trailer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8080; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8080; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Site_Trailer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Site_Trailer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Small_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Small_Boom_Lift"
          Me.Properties("MEI_EquipRent_Quantity_Small_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8072; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8072; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Small_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Small_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Quantity_Small_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8070; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8070; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Small_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Small_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Small_Telehandler"
          Me.Properties("MEI_EquipRent_Quantity_Small_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8074; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8074; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Small_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Quantity_Welders_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Quantity_Welders"
          Me.Properties("MEI_EquipRent_Quantity_Welders").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8079; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8079; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Welders_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Quantity_Welders").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors"
          Me.Properties("MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8120; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8120; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Cranes_Small_Indoors"
          Me.Properties("MEI_EquipRent_Total_Cost_Cranes_Small_Indoors").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8119; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8119; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Cranes_Small_Indoors").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Dumpsters_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Dumpsters"
          Me.Properties("MEI_EquipRent_Total_Cost_Dumpsters").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8123; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8123; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Dumpsters_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Dumpsters").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Fork_Truck_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Fork_Truck"
          Me.Properties("MEI_EquipRent_Total_Cost_Fork_Truck").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8118; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8118; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Fork_Truck_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Fork_Truck").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Large_Boom_Lift"
          Me.Properties("MEI_EquipRent_Total_Cost_Large_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8115; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8115; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Large_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Large_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Total_Cost_Large_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8113; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8113; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Large_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Large_Telehandler"
          Me.Properties("MEI_EquipRent_Total_Cost_Large_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8117; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8117; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Large_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Porta_Johns_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Porta_Johns"
          Me.Properties("MEI_EquipRent_Total_Cost_Porta_Johns").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8124; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8124; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Porta_Johns_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Porta_Johns").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Single_Person_Lift"
          Me.Properties("MEI_EquipRent_Total_Cost_Single_Person_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8111; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8111; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Single_Person_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Site_Trailer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Site_Trailer"
          Me.Properties("MEI_EquipRent_Total_Cost_Site_Trailer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8122; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8122; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Site_Trailer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Site_Trailer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Small_Boom_Lift"
          Me.Properties("MEI_EquipRent_Total_Cost_Small_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8114; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8114; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Small_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Small_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Total_Cost_Small_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8112; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8112; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Small_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Small_Telehandler"
          Me.Properties("MEI_EquipRent_Total_Cost_Small_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8116; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8116; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Small_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Total_Cost_Welders_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Total_Cost_Welders"
          Me.Properties("MEI_EquipRent_Total_Cost_Welders").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8121; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8121; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Welders_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Total_Cost_Welders").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8106; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8106; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8105; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8105; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Dumpsters_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Dumpsters"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Dumpsters").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8109; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8109; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Dumpsters_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Dumpsters").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Fork_Truck"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Fork_Truck").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8104; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8104; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Fork_Truck").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Large_Boom_Lift"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8101; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8101; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8099; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8099; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Large_Telehandler"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8103; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8103; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Large_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Porta_Johns"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Porta_Johns").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8110; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8110; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Porta_Johns").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Single_Person_Lift"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Single_Person_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8097; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8097; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Single_Person_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Site_Trailer"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Site_Trailer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8108; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8108; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Site_Trailer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Small_Boom_Lift"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Boom_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8100; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8100; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Boom_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8098; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8098; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Small_Telehandler"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Telehandler").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8102; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8102; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Small_Telehandler").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Welders_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_EquipRent_Weekly_Rate_Welders"
          Me.Properties("MEI_EquipRent_Weekly_Rate_Welders").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8107; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8107; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Welders_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_EquipRent_Weekly_Rate_Welders").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Air_Piping_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Factors_Air_Piping"
          Me.Properties("MEI_Factors_Air_Piping").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8010; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8010; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Air_Piping_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Factors_Air_Piping").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Risk_Rating_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Factors_Risk_Rating"
          Me.Properties("MEI_Factors_Risk_Rating").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8009; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8009; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Risk_Rating_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Factors_Risk_Rating").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Seismic_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Factors_Seismic"
          Me.Properties("MEI_Factors_Seismic").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8011; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8011; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Seismic_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Factors_Seismic").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Factors_Value_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Factors_Value"
          Me.Properties("MEI_Factors_Value").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8012; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8012; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Value_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Factors_Value").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Fencing_Footage_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Fencing_Footage"
          Me.Properties("MEI_Fencing_Footage").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8063; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8063; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Fencing_Footage").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Fencing_Footage_Cost_per_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Fencing_Footage_Cost_per_Hours"
          Me.Properties("MEI_Fencing_Footage_Cost_per_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8065; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8065; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_Cost_per_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Fencing_Footage_Cost_per_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Fencing_Footage_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Fencing_Footage_Total"
          Me.Properties("MEI_Fencing_Footage_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8067; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8067; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Fencing_Footage_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Gates_QTY_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Gates_QTY"
          Me.Properties("MEI_Gates_QTY").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8064; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8064; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Gates_QTY").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Gates_QTY_Cost_per_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Gates_QTY_Cost_per_Hours"
          Me.Properties("MEI_Gates_QTY_Cost_per_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8066; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8066; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_Cost_per_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Gates_QTY_Cost_per_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Gates_QTY_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Gates_QTY_Total"
          Me.Properties("MEI_Gates_QTY_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8068; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8068; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Gates_QTY_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Current_Rate_IG_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Current_Rate_IG_Installer"
          Me.Properties("MEI_Labor_Rate_Current_Rate_IG_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8152; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8152; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_IG_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Current_Rate_IG_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Current_Rate_Lead_Person_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Current_Rate_Lead_Person"
          Me.Properties("MEI_Labor_Rate_Current_Rate_Lead_Person").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8151; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8151; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_Lead_Person_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Current_Rate_Lead_Person").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Current_Rate_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Current_Rate_Superintendent"
          Me.Properties("MEI_Labor_Rate_Current_Rate_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8150; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8150; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Current_Rate_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_New_Rate_IG_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_New_Rate_IG_Installer"
          Me.Properties("MEI_Labor_Rate_New_Rate_IG_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8155; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8155; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_IG_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_New_Rate_IG_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_New_Rate_Lead_Person_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_New_Rate_Lead_Person"
          Me.Properties("MEI_Labor_Rate_New_Rate_Lead_Person").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8154; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8154; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_Lead_Person_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_New_Rate_Lead_Person").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_New_Rate_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_New_Rate_Superintendent"
          Me.Properties("MEI_Labor_Rate_New_Rate_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8153; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8153; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_New_Rate_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Percent_Adjustment"
          Me.Properties("MEI_Labor_Rate_Percent_Adjustment").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8146; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8146; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Percent_Adjustment").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Percent_Adjustment_IG_Installer"
          Me.Properties("MEI_Labor_Rate_Percent_Adjustment_IG_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8149; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8149; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Percent_Adjustment_IG_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Percent_Adjustment_Lead_Person"
          Me.Properties("MEI_Labor_Rate_Percent_Adjustment_Lead_Person").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8148; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8148; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Percent_Adjustment_Lead_Person").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Percent_Adjustment_Superintendent"
          Me.Properties("MEI_Labor_Rate_Percent_Adjustment_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8147; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8147; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Percent_Adjustment_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Tot_Cost_Adj_Installer"
          Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8158; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8158; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person"
          Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8157; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8157; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Tot_Cost_Adj_Superintendent"
          Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8156; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8156; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Tot_Cost_Adj_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Labor_Rate_Total_Cost_Adjustment_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Labor_Rate_Total_Cost_Adjustment"
          Me.Properties("MEI_Labor_Rate_Total_Cost_Adjustment").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8159; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8159; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Total_Cost_Adjustment_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Labor_Rate_Total_Cost_Adjustment").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Mech_Conveyor_Installation_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Mech_Conveyor_Installation_Cost"
          Me.Properties("MEI_Mech_Conveyor_Installation_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7943; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7943; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Mech_Conveyor_Installation_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Mech_Conveyor_Installation_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Mech_Conveyor_Installation_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Mech_Conveyor_Installation_Hours"
          Me.Properties("MEI_Mech_Conveyor_Installation_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7944; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7944; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Mech_Conveyor_Installation_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Mech_Conveyor_Installation_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Miscellaneous_Administrative_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Miscellaneous_Administrative_Cost"
          Me.Properties("MEI_Miscellaneous_Administrative_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7989; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7989; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Miscellaneous_Administrative_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Miscellaneous_Administrative_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Miscellaneous_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Miscellaneous_Cost"
          Me.Properties("MEI_Miscellaneous_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7988; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7988; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Miscellaneous_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Miscellaneous_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Other_Cost_Onsite_Admin_Duration_Wks"
          Me.Properties("MEI_Other_Cost_Onsite_Admin_Duration_Wks").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8128; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8128; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Other_Cost_Onsite_Admin_Duration_Wks").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week"
          Me.Properties("MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8129; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8129; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Permit_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Other_Cost_Permit_Hours"
          Me.Properties("MEI_Other_Cost_Permit_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8127; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8127; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Permit_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Other_Cost_Permit_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Qty_Gang_Boxes_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Other_Cost_Qty_Gang_Boxes"
          Me.Properties("MEI_Other_Cost_Qty_Gang_Boxes").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8126; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8126; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Qty_Gang_Boxes_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Other_Cost_Qty_Gang_Boxes").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Other_Cost_Qty_Trucks_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Other_Cost_Qty_Trucks"
          Me.Properties("MEI_Other_Cost_Qty_Trucks").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8125; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8125; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Qty_Trucks_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Other_Cost_Qty_Trucks").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Comm_No_of_Installers_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Comm_No_of_Installers"
          Me.Properties("MEI_People_Needs_Comm_No_of_Installers").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8028; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8028; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Installers_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Comm_No_of_Installers").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Comm_No_of_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Comm_No_of_Lead_Men"
          Me.Properties("MEI_People_Needs_Comm_No_of_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8027; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8027; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Comm_No_of_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Comm_No_of_Superintendents_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Comm_No_of_Superintendents"
          Me.Properties("MEI_People_Needs_Comm_No_of_Superintendents").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8026; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8026; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Superintendents_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Comm_No_of_Superintendents").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Install_No_of_Installers_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Install_No_of_Installers"
          Me.Properties("MEI_People_Needs_Install_No_of_Installers").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8025; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8025; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Installers_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Install_No_of_Installers").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Install_No_of_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Install_No_of_Lead_Men"
          Me.Properties("MEI_People_Needs_Install_No_of_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8024; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8024; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Install_No_of_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Install_No_of_Superintendents_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Install_No_of_Superintendents"
          Me.Properties("MEI_People_Needs_Install_No_of_Superintendents").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8023; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8023; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Superintendents_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Install_No_of_Superintendents").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Work_Percent_No_of_Lead_Men"
          Me.Properties("MEI_People_Needs_Work_Percent_No_of_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8030; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8030; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Work_Percent_No_of_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_People_Needs_Work_Percent_No_of_Superintendent"
          Me.Properties("MEI_People_Needs_Work_Percent_No_of_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8029; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8029; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_People_Needs_Work_Percent_No_of_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Permits_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Permits_Cost"
          Me.Properties("MEI_Permits_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7987; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7987; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Permits_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Permits_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Customer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Info_Customer"
          Me.Properties("MEI_Project_Info_Customer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8002; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8002; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Customer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Info_Customer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Description_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Info_Description"
          Me.Properties("MEI_Project_Info_Description").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8005; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8005; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Description_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Info_Description").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Location_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Info_Location"
          Me.Properties("MEI_Project_Info_Location").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8003; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8003; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Location_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Info_Location").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Number_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Info_Number"
          Me.Properties("MEI_Project_Info_Number").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8004; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8004; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Number_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Info_Number").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Project_Tier_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Info_Project_Tier"
          Me.Properties("MEI_Project_Info_Project_Tier").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8007; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8007; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Project_Tier_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Info_Project_Tier").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Info_Quote_Date_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Info_Quote_Date"
          Me.Properties("MEI_Project_Info_Quote_Date").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8006; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8006; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Quote_Date_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Info_Quote_Date").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Project_Tier_Value_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Project_Tier_Value"
          Me.Properties("MEI_Project_Tier_Value").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8008; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8008; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Tier_Value_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Project_Tier_Value").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_End_Mechanical_Installation_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Schedule_End_Mechanical_Installation"
          Me.Properties("MEI_Schedule_End_Mechanical_Installation").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8014; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8014; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_End_Mechanical_Installation_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Schedule_End_Mechanical_Installation").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_End_Run_In_Level_5_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Schedule_End_Run_In_Level_5"
          Me.Properties("MEI_Schedule_End_Run_In_Level_5").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8015; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8015; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_End_Run_In_Level_5_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Schedule_End_Run_In_Level_5").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_Start_Mechanical_Installation_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Schedule_Start_Mechanical_Installation"
          Me.Properties("MEI_Schedule_Start_Mechanical_Installation").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8013; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8013; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Start_Mechanical_Installation_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Schedule_Start_Mechanical_Installation").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_Weeks_Comm_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Schedule_Weeks_Comm"
          Me.Properties("MEI_Schedule_Weeks_Comm").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8017; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8017; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Weeks_Comm_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Schedule_Weeks_Comm").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Schedule_Weeks_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Schedule_Weeks_Install"
          Me.Properties("MEI_Schedule_Weeks_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8016; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8016; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Weeks_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Schedule_Weeks_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Catwalk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Feet_Catwalk"
          Me.Properties("MEI_Structures_Platforms_Feet_Catwalk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8164; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8164; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Catwalk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Feet_Catwalk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Demo_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Feet_Demo"
          Me.Properties("MEI_Structures_Platforms_Feet_Demo").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8160; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8160; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Demo_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Feet_Demo").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_GRID_Structure_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Feet_GRID_Structure"
          Me.Properties("MEI_Structures_Platforms_Feet_GRID_Structure").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8161; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8161; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_GRID_Structure_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Feet_GRID_Structure").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Feet_Platform_Bar_Grating"
          Me.Properties("MEI_Structures_Platforms_Feet_Platform_Bar_Grating").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8162; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8162; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Feet_Platform_Bar_Grating").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Feet_Platform_Resin_Deck"
          Me.Properties("MEI_Structures_Platforms_Feet_Platform_Resin_Deck").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8163; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8163; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Feet_Platform_Resin_Deck").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Feet_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Feet_Total"
          Me.Properties("MEI_Structures_Platforms_Feet_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8165; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8165; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Feet_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Catwalk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Hour_Catwalk"
          Me.Properties("MEI_Structures_Platforms_Hour_Catwalk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8170; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8170; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Catwalk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Hour_Catwalk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Demo_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Hour_Demo"
          Me.Properties("MEI_Structures_Platforms_Hour_Demo").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8166; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8166; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Demo_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Hour_Demo").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_GRID_Structure_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Hour_GRID_Structure"
          Me.Properties("MEI_Structures_Platforms_Hour_GRID_Structure").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8167; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8167; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_GRID_Structure_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Hour_GRID_Structure").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Hour_Platform_Bar_Grating"
          Me.Properties("MEI_Structures_Platforms_Hour_Platform_Bar_Grating").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8168; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8168; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Hour_Platform_Bar_Grating").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Hour_Platform_Resin_Deck"
          Me.Properties("MEI_Structures_Platforms_Hour_Platform_Resin_Deck").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8169; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8169; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Hour_Platform_Resin_Deck").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Hour_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Hour_Total"
          Me.Properties("MEI_Structures_Platforms_Hour_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8171; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8171; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Hour_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Catwalk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Per_Ft_Catwalk"
          Me.Properties("MEI_Structures_Platforms_Per_Ft_Catwalk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8173; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8173; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Catwalk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Per_Ft_Catwalk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Demo_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Per_Ft_Demo"
          Me.Properties("MEI_Structures_Platforms_Per_Ft_Demo").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8172; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8172; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Demo_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Per_Ft_Demo").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Total_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Structures_Platforms_Per_Ft_Total"
          Me.Properties("MEI_Structures_Platforms_Per_Ft_Total").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8174; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8174; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Total_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Structures_Platforms_Per_Ft_Total").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent__Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent__Hours"
          Me.Properties("MEI_Superintendent__Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7949; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7949; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent__Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent__Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Commissioning_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Commissioning_Cost"
          Me.Properties("MEI_Superintendent_Commissioning_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7948; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7948; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Commissioning_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Commissioning_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Commissioning_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Commissioning_Hours"
          Me.Properties("MEI_Superintendent_Commissioning_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7952; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7952; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Commissioning_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Commissioning_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Cost"
          Me.Properties("MEI_Superintendent_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7945; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7945; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Install_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Install_Cost"
          Me.Properties("MEI_Superintendent_Install_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7946; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7946; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Install_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Install_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Install_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Install_Hours"
          Me.Properties("MEI_Superintendent_Install_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7950; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7950; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Install_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Install_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Rate"
          Me.Properties("MEI_Superintendent_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7953; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7953; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Stagnant_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Stagnant_Hours_Cost"
          Me.Properties("MEI_Superintendent_Stagnant_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7947; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7947; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Stagnant_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Stagnant_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Superintendent_Stagnant_Hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Superintendent_Stagnant_Hours_Hours"
          Me.Properties("MEI_Superintendent_Stagnant_Hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7951; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7951; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Stagnant_Hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Superintendent_Stagnant_Hours_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Supplies_Consumables_All_Other_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Supplies_Consumables_All_Other_Cost"
          Me.Properties("MEI_Supplies_Consumables_All_Other_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7985; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7985; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_All_Other_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Supplies_Consumables_All_Other_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Supplies_Consumables_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Supplies_Consumables_Cost"
          Me.Properties("MEI_Supplies_Consumables_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7983; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7983; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Supplies_Consumables_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Supplies_Consumables_HW_Air_Piping_Cost"
          Me.Properties("MEI_Supplies_Consumables_HW_Air_Piping_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7984; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7984; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Supplies_Consumables_HW_Air_Piping_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer"
          Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8134; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8134; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men"
          Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8133; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8133; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent"
          Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8132; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8132; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8140; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8140; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8139; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8139; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8138; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8138; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8137; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8137; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8136; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8136; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8135; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8135; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8144; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8144; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8143; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8143; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI"
          Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8142; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8142; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Total_Mobilization_Cost"
          Me.Properties("MEI_Travel_Cost_Crew_Total_Mobilization_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8141; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8141; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Total_Mobilization_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Crew_Total_Travel_Cost"
          Me.Properties("MEI_Travel_Cost_Crew_Total_Travel_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8145; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8145; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Crew_Total_Travel_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Per_Diem_Range"
          Me.Properties("MEI_Travel_Cost_Per_Diem_Range").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8130; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8130; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Per_Diem_Range").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_Link_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Cost_Per_Diem_Range_Link"
          Me.Properties("MEI_Travel_Cost_Per_Diem_Range_Link").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8131; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8131; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range_Link_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Cost_Per_Diem_Range_Link").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_Travel_Expense_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_Travel_Expense_Cost"
          Me.Properties("MEI_Travel_Expense_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7986; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7986; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Expense_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_Travel_Expense_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Commissioning_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Commissioning_Cost"
          Me.Properties("MEI_TTCB_Installer_Commissioning_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7969; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7969; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Commissioning_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Commissioning_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Commissioning_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Commissioning_Hours"
          Me.Properties("MEI_TTCB_Installer_Commissioning_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7978; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7978; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Commissioning_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Commissioning_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Cost"
          Me.Properties("MEI_TTCB_Installer_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7963; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7963; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Demo_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Demo_Cost"
          Me.Properties("MEI_TTCB_Installer_Demo_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7966; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7966; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Demo_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Demo_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Demo_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Demo_Hours"
          Me.Properties("MEI_TTCB_Installer_Demo_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7975; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7975; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Demo_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Demo_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Hours"
          Me.Properties("MEI_TTCB_Installer_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7972; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7972; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Install_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Install_Cost"
          Me.Properties("MEI_TTCB_Installer_Install_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7964; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7964; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Install_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Install_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Install_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Install_Hours"
          Me.Properties("MEI_TTCB_Installer_Install_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7973; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7973; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Install_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Install_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Miscellaneous_Cost"
          Me.Properties("MEI_TTCB_Installer_Miscellaneous_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7967; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7967; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Miscellaneous_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Miscellaneous_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Miscellaneous_Hours"
          Me.Properties("MEI_TTCB_Installer_Miscellaneous_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7976; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7976; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Miscellaneous_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Miscellaneous_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost"
          Me.Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7965; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7965; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours"
          Me.Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7974; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7974; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Rate"
          Me.Properties("MEI_TTCB_Installer_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7971; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7971; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Stagnant_Hours_Cost"
          Me.Properties("MEI_TTCB_Installer_Stagnant_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7968; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7968; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Stagnant_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_Stagnant_Hours_Hours"
          Me.Properties("MEI_TTCB_Installer_Stagnant_Hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7977; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7977; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_Stagnant_Hours_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost"
          Me.Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7970; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7970; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours"
          Me.Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7979; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7979; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Commissioning_Cost"
          Me.Properties("MEI_TTCB_Lead_Person_Commissioning_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7957; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7957; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Commissioning_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Commissioning_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Commissioning_Hours"
          Me.Properties("MEI_TTCB_Lead_Person_Commissioning_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7961; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7961; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Commissioning_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Commissioning_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Cost"
          Me.Properties("MEI_TTCB_Lead_Person_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7954; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7954; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Hours"
          Me.Properties("MEI_TTCB_Lead_Person_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7958; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7958; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Install_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Install_Cost"
          Me.Properties("MEI_TTCB_Lead_Person_Install_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7955; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7955; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Install_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Install_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Install_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Install_Hours"
          Me.Properties("MEI_TTCB_Lead_Person_Install_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7959; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7959; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Install_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Install_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Rate"
          Me.Properties("MEI_TTCB_Lead_Person_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7962; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7962; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Stagnant_Hours_Cost"
          Me.Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7956; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7956; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "MEI_TTCB_Lead_Person_Stagnant_Hours_Hours"
          Me.Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:7960; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:7960; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("MEI_TTCB_Lead_Person_Stagnant_Hours_Hours").ErrorReporting
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Clean_Up_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Clean_Up_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Fencing_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Fencing_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Gates_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Gates_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_1_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_1_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_2_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_2_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_3_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Miscellaneous_3_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_System_Efficiency_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_System_Efficiency_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Dollar_TTCB_Sorter_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Dollar_TTCB_Sorter_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Clean_Up_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Clean_Up_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Fencing_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Fencing_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Gates_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Gates_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_1_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_1_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_2_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_2_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Miscellaneous_3_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Miscellaneous_3_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_System_Efficiency_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_System_Efficiency_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_Hours_TTCB_Sorter_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_Hours_TTCB_Sorter_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_1_2_Inch_pipeCost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_1_2_Inch_pipeCost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_3_Inch_pipe_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_3_Inch_pipe_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_A_C_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_A_C_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_Dryer_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Dryer_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_FILTER_REG_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_FILTER_REG_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_Mat_Cost_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Mat_Cost_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Air_Pipe_Tubing_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Air_Pipe_Tubing_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Ajust_Total_Percentage_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Ajust_Total_Percentage_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Average_Hrs_per_Wk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Average_Hrs_per_Wk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Avg_Crew_Size_Installers_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Avg_Crew_Size_Installers_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Head_Count_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Head_Count_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Head_Count_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Head_Count_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Head_Count_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Mobilization_Cost_Per_Person_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Cost_Per_Person_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Mobilization_Count_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Mobilization_Count_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Mobilization_Count_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Mobilization_Count_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Peak_Crew_Installers_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Peak_Crew_Installers_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Crew_Total_Mobilization_Cost_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Equipment_Rental_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Equipment_Rental_Dumpsters_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Dumpsters_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Equipment_Rental_Porta_Johns_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Equipment_Rental_Porta_Johns_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Dumpsters_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Dumpsters_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Fork_Truck_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Fork_Truck_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Large_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Large_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Porta_Johns_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Porta_Johns_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Site_Trailer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Site_Trailer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Small_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Small_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Install_Duration_Welders_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Install_Duration_Welders_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Dumpsters_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Dumpsters_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Fork_Truck_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Fork_Truck_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Large_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Large_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Large_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Porta_Johns_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Porta_Johns_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Single_Person_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Single_Person_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Site_Trailer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Site_Trailer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Small_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Small_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Small_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Quantity_Welders_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Quantity_Welders_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Dumpsters_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Dumpsters_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Fork_Truck_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Fork_Truck_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Large_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Large_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Porta_Johns_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Porta_Johns_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Site_Trailer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Site_Trailer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Small_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Small_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Total_Cost_Welders_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Total_Cost_Welders_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Dumpsters_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Dumpsters_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_EquipRent_Weekly_Rate_Welders_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_EquipRent_Weekly_Rate_Welders_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Factors_Air_Piping_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Air_Piping_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Factors_Risk_Rating_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Risk_Rating_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Factors_Seismic_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Seismic_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Factors_Value_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Factors_Value_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Fencing_Footage_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Fencing_Footage_Cost_per_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_Cost_per_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Fencing_Footage_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Fencing_Footage_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Gates_QTY_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Gates_QTY_Cost_per_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_Cost_per_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Gates_QTY_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Gates_QTY_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Current_Rate_IG_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_IG_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Current_Rate_Lead_Person_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_Lead_Person_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Current_Rate_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Current_Rate_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_New_Rate_IG_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_IG_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_New_Rate_Lead_Person_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_Lead_Person_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_New_Rate_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_New_Rate_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Labor_Rate_Total_Cost_Adjustment_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Labor_Rate_Total_Cost_Adjustment_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Mech_Conveyor_Installation_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Mech_Conveyor_Installation_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Mech_Conveyor_Installation_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Mech_Conveyor_Installation_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Miscellaneous_Administrative_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Miscellaneous_Administrative_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Miscellaneous_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Miscellaneous_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Other_Cost_Permit_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Permit_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Other_Cost_Qty_Gang_Boxes_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Qty_Gang_Boxes_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Other_Cost_Qty_Trucks_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Other_Cost_Qty_Trucks_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Comm_No_of_Installers_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Installers_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Comm_No_of_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Comm_No_of_Superintendents_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Comm_No_of_Superintendents_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Install_No_of_Installers_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Installers_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Install_No_of_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Install_No_of_Superintendents_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Install_No_of_Superintendents_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Permits_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Permits_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Info_Customer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Customer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Info_Description_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Description_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Info_Location_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Location_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Info_Number_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Number_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Info_Project_Tier_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Project_Tier_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Info_Quote_Date_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Info_Quote_Date_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Project_Tier_Value_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Project_Tier_Value_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Schedule_End_Mechanical_Installation_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_End_Mechanical_Installation_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Schedule_End_Run_In_Level_5_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_End_Run_In_Level_5_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Schedule_Start_Mechanical_Installation_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Start_Mechanical_Installation_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Schedule_Weeks_Comm_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Weeks_Comm_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Schedule_Weeks_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Schedule_Weeks_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Feet_Catwalk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Catwalk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Feet_Demo_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Demo_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Feet_GRID_Structure_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_GRID_Structure_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Feet_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Feet_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Hour_Catwalk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Catwalk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Hour_Demo_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Demo_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Hour_GRID_Structure_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_GRID_Structure_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Hour_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Hour_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Catwalk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Catwalk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Demo_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Demo_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Structures_Platforms_Per_Ft_Total_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Structures_Platforms_Per_Ft_Total_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent__Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent__Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Commissioning_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Commissioning_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Commissioning_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Commissioning_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Install_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Install_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Install_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Install_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Stagnant_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Stagnant_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Superintendent_Stagnant_Hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Superintendent_Stagnant_Hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Supplies_Consumables_All_Other_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_All_Other_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Supplies_Consumables_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_Link_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range_Link_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_Travel_Expense_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Expense_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Commissioning_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Commissioning_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Commissioning_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Commissioning_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Demo_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Demo_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Demo_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Demo_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Install_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Install_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Install_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Install_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Miscellaneous_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Miscellaneous_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Commissioning_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Commissioning_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Install_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Install_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Install_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Install_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Clean_Up_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Fencing_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Gates_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_1_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_2_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_3_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_System_Efficiency_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_TTCB_Sorter_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Clean_Up_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Fencing_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Gates_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Miscellaneous_1_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Miscellaneous_2_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Miscellaneous_3_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_System_Efficiency_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_TTCB_Sorter_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Length_TTCB_Sorter_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_1_2_Inch_pipeCost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_3_Inch_pipe_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_A_C_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Dryer_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_FILTER_REG_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Mat_Cost_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Red_A_C_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Tubing_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Ajust_Total_Percentage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Average_Hrs_per_Wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Avg_Crew_Size_Installers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Cost_Per_Person_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Count_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Count_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Count_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Peak_Crew_Installers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Equipment_Rental_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Equipment_Rental_Dumpsters_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Equipment_Rental_Porta_Johns_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Dumpsters_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Fork_Truck_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Large_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Porta_Johns_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Site_Trailer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Small_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Welders_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Dumpsters_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Fork_Truck_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Large_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Large_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Porta_Johns_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Single_Person_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Site_Trailer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Small_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Small_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Welders_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Dumpsters_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Fork_Truck_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Large_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Porta_Johns_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Site_Trailer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Small_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Welders_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Dumpsters_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Welders_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Air_Piping_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Risk_Rating_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Seismic_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Fencing_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Fencing_Footage_Cost_per_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Fencing_Footage_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Gates_QTY_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Gates_QTY_Cost_per_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Gates_QTY_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Current_Rate_IG_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Current_Rate_Lead_Person_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Current_Rate_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_New_Rate_IG_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_New_Rate_Lead_Person_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_New_Rate_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Total_Cost_Adjustment_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Mech_Conveyor_Installation_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Mech_Conveyor_Installation_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Miscellaneous_Administrative_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Miscellaneous_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Permit_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Qty_Gang_Boxes_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Qty_Trucks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Comm_No_of_Installers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Comm_No_of_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Comm_No_of_Superintendents_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Install_No_of_Installers_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Install_No_of_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Install_No_of_Superintendents_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Permits_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Customer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Description_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Location_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Number_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Project_Tier_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Quote_Date_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Tier_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_End_Mechanical_Installation_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_End_Run_In_Level_5_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_Start_Mechanical_Installation_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_Weeks_Comm_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_Weeks_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Catwalk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Demo_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_GRID_Structure_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Catwalk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Demo_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_GRID_Structure_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Per_Ft_Catwalk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Per_Ft_Demo_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Per_Ft_Total_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent__Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Commissioning_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Install_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Stagnant_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Stagnant_Hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Supplies_Consumables_All_Other_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Supplies_Consumables_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_Link_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Expense_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Costing_D9_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Commissioning_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Demo_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Demo_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Install_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Install_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Clean_Up_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Fencing_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Gates_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_1_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_2_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Miscellaneous_3_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_System_Efficiency_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Dollar_TTCB_Sorter_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Clean_Up_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Fencing_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Gates_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Miscellaneous_1_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Miscellaneous_2_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Miscellaneous_3_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_System_Efficiency_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Hours_TTCB_Sorter_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_Length_TTCB_Sorter_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Adjust_TTCB_Sorter_Length_in_Meters_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_1_2_Inch_pipeCost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_1_And_1_2_Inch_pipe_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_2_and_1_2_Inch_pipe_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_3_Inch_pipe_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_7_8_Inch_pipe_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_A_C_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Dryer_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_FILTER_REG_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Mat_Cost_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Red_A_C_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Air_Pipe_Tubing_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Ajust_Total_Percentage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Average_Hrs_per_Wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Avg_Crew_Size_Installers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Comm_Sppt_Hrs_per_Wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Head_Count_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Cost_Per_Person_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Count_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Count_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Mobilization_Count_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Peak_Crew_Hrs_per_Wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Peak_Crew_Installers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Crew_Total_Mobilization_Cost_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Equipment_Rental_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Equipment_Rental_Dumpsters_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Equipment_Rental_Porta_Johns_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_LargeOutdoor_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Cranes_SmallIndoor_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Dumpsters_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Fork_Truck_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Large_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Large_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Large_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Porta_Johns_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Single_Person_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Site_Trailer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Small_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Small_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Small_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Install_Duration_Welders_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Cranes_Large_Outdoors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Cranes_Small_Indoors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Dumpsters_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Fork_Truck_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Large_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Large_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Large_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Porta_Johns_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Single_Person_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Site_Trailer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Small_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Small_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Small_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Quantity_Welders_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Large_Outdoors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Cranes_Small_Indoors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Dumpsters_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Fork_Truck_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Large_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Large_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Large_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Porta_Johns_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Single_Person_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Site_Trailer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Small_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Small_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Small_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Total_Cost_Welders_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Large_Outdoors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Cranes_Small_Indoors_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Dumpsters_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Fork_Truck_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Large_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Porta_Johns_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Single_Person_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Site_Trailer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Boom_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Scissors_Lift_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Small_Telehandler_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_EquipRent_Weekly_Rate_Welders_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Air_Piping_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Risk_Rating_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Seismic_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Factors_Value_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Fencing_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Fencing_Footage_Cost_per_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Fencing_Footage_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Gates_QTY_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Gates_QTY_Cost_per_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Gates_QTY_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Current_Rate_IG_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Current_Rate_Lead_Person_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Current_Rate_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_New_Rate_IG_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_New_Rate_Lead_Person_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_New_Rate_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_IG_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Lead_Person_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Percent_Adjustment_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Lead_Person_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Tot_Cost_Adj_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Labor_Rate_Total_Cost_Adjustment_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Mech_Conveyor_Installation_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Mech_Conveyor_Installation_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Miscellaneous_Administrative_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Miscellaneous_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Onsite_Admin_Duration_Wks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Onsite_Admin_Hrs_Per_Week_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Permit_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Qty_Gang_Boxes_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Other_Cost_Qty_Trucks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Comm_No_of_Installers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Comm_No_of_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Comm_No_of_Superintendents_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Install_No_of_Installers_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Install_No_of_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Install_No_of_Superintendents_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_People_Needs_Work_Percent_No_of_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Permits_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Customer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Description_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Location_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Number_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Project_Tier_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Info_Quote_Date_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Project_Tier_Value_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_End_Mechanical_Installation_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_End_Run_In_Level_5_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_Start_Mechanical_Installation_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_Weeks_Comm_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Schedule_Weeks_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Catwalk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Demo_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_GRID_Structure_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Bar_Grating_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Platform_Resin_Deck_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Feet_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Catwalk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Demo_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_GRID_Structure_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Bar_Grating_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Platform_Resin_Deck_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Hour_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Per_Ft_Catwalk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Per_Ft_Demo_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Structures_Platforms_Per_Ft_Total_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent__Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Commissioning_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Install_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Stagnant_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Superintendent_Stagnant_Hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Supplies_Consumables_All_Other_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Supplies_Consumables_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Supplies_Consumables_HW_Air_Piping_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Per_Diem_Rates_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Mobile_Cost_SI_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Proj_Diem_Superintendent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Installer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_Lead_Men_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Tot_Travel_Cost_SI_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Total_Mobilization_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Crew_Total_Travel_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_Link_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Expense_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Costing_D9_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Commissioning_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Demo_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Demo_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Install_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Miscellaneous_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Platforms_Grid_Catwalk_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_Stagnant_Hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Installer_WorkingSuper_LeadDeduct_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Commissioning_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Install_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_TTCB_Lead_Person_Stagnant_Hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_MEI_Travel_Cost_Per_Diem_Range_ValidValues() as Rulestream.Kernel.ValidValues
      
      Dim Result as Rulestream.Kernel.ValidValues = Nothing 'HashTable
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("MEI_Travel_Cost_Per_Diem_Range").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALIDVALUES_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8130; TYPE:VV
      Result = MakeValidValues(Array("1 - $170 & Below", "2 - $171 to $210", "3 - $211 to $250", "4 - $251 to $290", "5 - $291 to $330"))
      '   END FORMULA; PROP ID:8130; TYPE:VV
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_TTCB_Costing_Mech.Formula_MEI_Travel_Cost_Per_Diem_Range_ValidValues", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Function GetRecordsetSQL(ByVal lngDBConID as Long) as String Implements RuleStream.IRsPartFormulas.GetRecordsetSQL
    Dim strSelectStmt As String = ""
    Return strSelectStmt
    End Function
    #End Region

    #Region "Event Handling "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub AddRsEventHandlerMappings()
    
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub RemoveRsEventHandlerMappings()
    
    End Sub
    #End Region

    End Class

  