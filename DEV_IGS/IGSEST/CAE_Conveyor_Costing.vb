Option Strict Off
Option Explicit On 
Option Infer On

'$ Application: IGSEST
'$ PartFamily: CAE_Conveyor_Costing
'$ GenerateDate: 07/15/2025 13:30:18

    Imports Microsoft.VisualBasic
    Imports System
    Imports System.IO
    Imports System.Data
    Imports System.Windows.Forms
    Imports System.Collections
    Imports System.Diagnostics
    Imports System.Math
    Imports System.Xml
    Imports System.Xml.Linq
    Imports RuleStream
    Imports RuleStream.Kernel
    Imports System.Collections.Generic
    Imports RulestreamTCUtilities
    Imports IGSEST.swMateType_e
    Imports IGSEST.swMateAlign_e
    Imports IGSEST.severity

    Public Class [CAE_Conveyor_Costing]
    
    Inherits RuleStream.Kernel.Part
    Implements RuleStream.IRsPartFormulas

    '*************************************************************************
    '*                                                                       *
    '*   This source code, together with any object or execution files       *
    '*   generated herefrom (whether by compiling, translating, or linking   *
    '*   this source file to any header files, resource files, library       *
    '*   files, other source files or object files) are confidential and     *
    '*   proprietary to Siemens Product Lifecycle Management Software Inc.   *
    '*   No person may sell, offer for sale, copy, use, compile, translate   *
    '*   or link this source                                                 *
    '*   file without the written prior approval of Siemens Product          *
    '*   Lifecycle Management Software Inc.                                  *
    '*                                                                       *
    '*   Copyright (C) 2024 Siemens. All rights reserved.                    *
    '*                                                                       *
    '*************************************************************************

    Private this as CAE_Conveyor_Costing = me

    #Region " IRsPartFormulas Implementation "

    Public Function GetNormalValue(ByVal Value as Object, ByVal propertyName As String, ByVal context As String) As Double Implements RuleStream.IRsPartFormulas.GetNormalValue
    Dim MethodName as String = string.format("Formula_{0}_NORMALVALUE{1}", propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method, Value)
    End Function

    Public Function GetOptimalPartFamily(ByVal subpartSpecName As String, ByVal context As String) As String Implements RuleStream.IRsPartFormulas.GetOptimalPartFamily
    Dim MethodName as String = string.format("Formula_{0}_OPTIMALPARTFAMILY{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetPartNames(ByVal subpartSpecName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetPartNames
    Dim MethodName as String = string.format("Formula_{0}_PARTNAMES{1}", subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetParts(ByVal specName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetParts
    Dim MethodName as String = string.format("Formula_{0}_PARTS{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetProcessStepComment(ByVal processId As String, ByVal processStep As String) As String Implements RuleStream.IRsPartFormulas.GetProcessStepComment
    Dim Result as String = ""
    
    Return Result
    End Function

    Public Function GetProcessStepStatus(ByVal processId As String, ByVal processStep As String) As Integer Implements RuleStream.IRsPartFormulas.GetProcessStepStatus
    Dim Result as Integer 'Long
    
    Return Result
    End Function

    Public Function GetQuantity(ByVal subpartSpecName As String, ByVal context As String) As Integer Implements RuleStream.IRsPartFormulas.GetQuantity
    Dim MethodName as String = string.format("Formula_{0}_QUANTITY{1}",subpartSpecName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResult(ByVal propertyName As String, ByVal context As String) As Object Implements RuleStream.IRsPartFormulas.GetResult
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetResultCustomCheckDependancy(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetResultCustomCheckDependancy
    Dim MethodName as String = string.format("Formula_{0}{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetUserChange(ByVal specName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetUserChange
    Dim MethodName as String = string.format("Formula_{0}_USERCHANGE{1}", specName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Function GetHideCalculatedValue(ByVal propertyName As String, ByVal context As String) As Boolean Implements RuleStream.IRsPartFormulas.GetHideCalculatedValue
    Dim MethodName as String = string.format("Formula_{0}_HIDE_CALCULATED_VALUE{1}",propertyName, context)
    Return CallByName(Me, MethodName, CallType.Method)
    End Function

    Public Sub NewContextInit() Implements RuleStream.IRsPartFormulas.NewContextInit
    NewContextInit_Properties()
    NewContextInit_ValidValues()
    NewContextInit_Subparts()
    NewContextInit_Connections()
    NewContextInit_DB()
    End Sub

    Public Sub OnChanged(ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method)
    Select Case specName & "_" & context
    End Select
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Sub OnChanged(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String) Implements RuleStream.IRsPartFormulas.OnChanged
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Select Case specName & "_" & context
    
    End Select
    End Sub

    Public Function OnChangedStatus(ByRef Value as Object, ByVal OldValue as Object, ByVal specName As String, ByVal context As String)As Boolean Implements RuleStream.IRsPartFormulas.OnChangedStatus
    'Dim MethodName as String = string.format("Formula_{0}_WHENCHANGED{1}", specName, context)
    'CallByName(Me, MethodName, CallType.Method, Value)
    Dim Status as Boolean = False
    Select Case specName & "_" & context
    Case Else
    Status = False
    End Select
    Return Status
    End Function

    #End Region

    #Region " Properties, Subparts, Connections "
    
          Public Property [Additional_Subcontractor_Services_Cost]() As Double
      Get
      Return Properties("Additional_Subcontractor_Services_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Additional_Subcontractor_Services_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Administrative_Cost]() As Double
      Get
      Return Properties("Administrative_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Administrative_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Avg_Crew_Size]() As Double
      Get
      Return Properties("Avg_Crew_Size").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Avg_Crew_Size").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conveyor_above_8_ft]() As Double
      Get
      Return Properties("Conveyor_above_8_ft").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conveyor_above_8_ft").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conveyor_between_5_ft_to_8_ft_Footage]() As Double
      Get
      Return Properties("Conveyor_between_5_ft_to_8_ft_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conveyor_between_5_ft_to_8_ft_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Conveyor_Hours_Added]() As Double
      Get
      Return Properties("Conveyor_Hours_Added").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Conveyor_Hours_Added").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Average_Hours_per_wk]() As Double
      Get
      Return Properties("Crew_Average_Hours_per_wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Average_Hours_per_wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Comm_Sppt_Hours_per_wk]() As Double
      Get
      Return Properties("Crew_Comm_Sppt_Hours_per_wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Comm_Sppt_Hours_per_wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Installer_Headcount]() As Double
      Get
      Return Properties("Crew_Installer_Headcount").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Installer_Headcount").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Installer_Mobilization_Count]() As Double
      Get
      Return Properties("Crew_Installer_Mobilization_Count").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Installer_Mobilization_Count").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Installer_Total_Mobilization_Cost]() As Double
      Get
      Return Properties("Crew_Installer_Total_Mobilization_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Installer_Total_Mobilization_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Lead_Man_Headcount]() As Double
      Get
      Return Properties("Crew_Lead_Man_Headcount").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Lead_Man_Headcount").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Lead_Man_Mobilization_Count]() As Double
      Get
      Return Properties("Crew_Lead_Man_Mobilization_Count").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Lead_Man_Mobilization_Count").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Lead_Man_Total_Mobilization_Cost]() As Double
      Get
      Return Properties("Crew_Lead_Man_Total_Mobilization_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Lead_Man_Total_Mobilization_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Mobilization_Cost_per_person]() As Double
      Get
      Return Properties("Crew_Mobilization_Cost_per_person").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Mobilization_Cost_per_person").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Peak_Crew_Multiplier]() As Double
      Get
      Return Properties("Crew_Peak_Crew_Multiplier").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Peak_Crew_Multiplier").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Superintendent_Headcount]() As Double
      Get
      Return Properties("Crew_Superintendent_Headcount").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Superintendent_Headcount").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Superintendent_Mobilization_Count]() As Double
      Get
      Return Properties("Crew_Superintendent_Mobilization_Count").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Superintendent_Mobilization_Count").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Superintendent_Total_Mobilization_Cost]() As Double
      Get
      Return Properties("Crew_Superintendent_Total_Mobilization_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Superintendent_Total_Mobilization_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Total_Headcount]() As Double
      Get
      Return Properties("Crew_Total_Headcount").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Total_Headcount").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Crew_Total_Mobilization_Cost]() As Double
      Get
      Return Properties("Crew_Total_Mobilization_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Crew_Total_Mobilization_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Crane_Large_Outdoor_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Crane_Large_Outdoor_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Crane_Large_Outdoor_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Crane_Large_Outdoor_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Crane_Large_Outdoor_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Crane_Large_Outdoor_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Crane_Large_Outdoor_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Crane_Large_Outdoor_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Crane_Large_Outdoor_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Crane_Large_Outdoor_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Crane_Large_Outdoor_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Crane_Large_Outdoor_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Cranes_Small_indoors_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Cranes_Small_indoors_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Cranes_Small_indoors_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Cranes_Small_indoors_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Cranes_Small_indoors_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Cranes_Small_indoors_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Cranes_Small_indoors_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Cranes_Small_indoors_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Cranes_Small_indoors_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Cranes_Small_indoors_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Cranes_Small_indoors_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Cranes_Small_indoors_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Dumpsters_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Dumpsters_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Dumpsters_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Dumpsters_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Dumpsters_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Dumpsters_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Dumpsters_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Dumpsters_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Dumpsters_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Dumpsters_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Dumpsters_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Dumpsters_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Fork_Truck_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Fork_Truck_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Fork_Truck_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Fork_Truck_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Fork_Truck_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Fork_Truck_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Fork_Truck_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Fork_Truck_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Fork_Truck_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Fork_Truck_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Fork_Truck_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Fork_Truck_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Boom_Lift_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Large_Boom_Lift_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Boom_Lift_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Boom_Lift_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Large_Boom_Lift_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Boom_Lift_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Boom_Lift_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Large_Boom_Lift_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Boom_Lift_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Boom_Lift_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Large_Boom_Lift_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Boom_Lift_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Scissor_Lift_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Large_Scissor_Lift_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Scissor_Lift_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Scissor_Lift_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Large_Scissor_Lift_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Scissor_Lift_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Scissor_Lift_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Large_Scissor_Lift_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Scissor_Lift_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Scissor_Lift_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Large_Scissor_Lift_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Scissor_Lift_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Telehandler_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Large_Telehandler_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Telehandler_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Telehandler_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Large_Telehandler_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Telehandler_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Telehandler_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Large_Telehandler_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Telehandler_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Large_Telehandler_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Large_Telehandler_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Large_Telehandler_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Porta_Johns_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Porta_Johns_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Porta_Johns_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Porta_Johns_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Porta_Johns_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Porta_Johns_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Porta_Johns_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Porta_Johns_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Porta_Johns_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Porta_Johns_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Porta_Johns_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Porta_Johns_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Site_Trailer_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Site_Trailer_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Site_Trailer_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Site_Trailer_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Site_Trailer_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Site_Trailer_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Site_Trailer_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Site_Trailer_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Site_Trailer_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Site_Trailer_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Site_Trailer_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Site_Trailer_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Boom_Lift_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Small_Boom_Lift_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Boom_Lift_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Boom_Lift_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Small_Boom_Lift_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Boom_Lift_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Boom_Lift_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Small_Boom_Lift_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Boom_Lift_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Boom_Lift_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Small_Boom_Lift_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Boom_Lift_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Scissors_Lift_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Small_Scissors_Lift_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Scissors_Lift_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Scissors_Lift_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Small_Scissors_Lift_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Scissors_Lift_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Scissors_Lift_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Small_Scissors_Lift_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Scissors_Lift_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Scissors_Lift_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Small_Scissors_Lift_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Scissors_Lift_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Telehandler_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Small_Telehandler_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Telehandler_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Telehandler_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Small_Telehandler_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Telehandler_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_Telehandler_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Small_Telehandler_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_Telehandler_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Small_TelehandlerQuantity]() As Double
      Get
      Return Properties("EQ_Rental_Small_TelehandlerQuantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Small_TelehandlerQuantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Welders_Duration]() As Double
      Get
      Return Properties("EQ_Rental_Welders_Duration").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Welders_Duration").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Welders_Quantity]() As Double
      Get
      Return Properties("EQ_Rental_Welders_Quantity").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Welders_Quantity").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Welders_Total_Cost]() As Double
      Get
      Return Properties("EQ_Rental_Welders_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Welders_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [EQ_Rental_Welders_Wkly_Rate]() As Double
      Get
      Return Properties("EQ_Rental_Welders_Wkly_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("EQ_Rental_Welders_Wkly_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Equipment_Rental_Cost]() As Double
      Get
      Return Properties("Equipment_Rental_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Equipment_Rental_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Equipment_Rental_Dumpsters_Cost]() As Double
      Get
      Return Properties("Equipment_Rental_Dumpsters_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Equipment_Rental_Dumpsters_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Equipment_Rental_Porta_Johns_Cost]() As Double
      Get
      Return Properties("Equipment_Rental_Porta_Johns_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Equipment_Rental_Porta_Johns_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Equipment_Rental_Porta_Johns_Total_Cost]() As Double
      Get
      Return Properties("Equipment_Rental_Porta_Johns_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Equipment_Rental_Porta_Johns_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Factors_Air_Piping]() As Double
      Get
      Return Properties("Factors_Air_Piping").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Factors_Air_Piping").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Factors_Customer_Spec_Difficulty]() As Double
      Get
      Return Properties("Factors_Customer_Spec_Difficulty").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Factors_Customer_Spec_Difficulty").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Factors_Risk_Rating]() As Double
      Get
      Return Properties("Factors_Risk_Rating").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Factors_Risk_Rating").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Factors_Seismic]() As Double
      Get
      Return Properties("Factors_Seismic").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Factors_Seismic").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Commissioning_Support_Cost]() As Double
      Get
      Return Properties("Installer_Commissioning_Support_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Commissioning_Support_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Commissioning_Support_Hours]() As Double
      Get
      Return Properties("Installer_Commissioning_Support_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Commissioning_Support_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Demo_Cost]() As Double
      Get
      Return Properties("Installer_Demo_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Demo_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Demo_Hours]() As Double
      Get
      Return Properties("Installer_Demo_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Demo_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Install_Cost]() As Double
      Get
      Return Properties("Installer_Install_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Install_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Install_Hours]() As Double
      Get
      Return Properties("Installer_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Misc_Install_Cost]() As Double
      Get
      Return Properties("Installer_Misc_Install_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Misc_Install_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Misc_Install_Hours]() As Double
      Get
      Return Properties("Installer_Misc_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Misc_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Platforms_Grid_Catwalk_Cost]() As Double
      Get
      Return Properties("Installer_Platforms_Grid_Catwalk_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Platforms_Grid_Catwalk_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Platforms_Grid_Catwalk_Hours]() As Double
      Get
      Return Properties("Installer_Platforms_Grid_Catwalk_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Platforms_Grid_Catwalk_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Rate]() As Double
      Get
      Return Properties("Installer_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Stagnant_Hours_Cost]() As Double
      Get
      Return Properties("Installer_Stagnant_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Stagnant_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Stagnant_Hours_Hours]() As Double
      Get
      Return Properties("Installer_Stagnant_Hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Stagnant_Hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Total_Cost]() As Double
      Get
      Return Properties("Installer_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Total_Hours]() As Double
      Get
      Return Properties("Installer_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Working_Super_or_Lead_Deduct_Cost]() As Double
      Get
      Return Properties("Installer_Working_Super_or_Lead_Deduct_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Working_Super_or_Lead_Deduct_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Installer_Working_Super_or_Lead_Deduct_Hours]() As Double
      Get
      Return Properties("Installer_Working_Super_or_Lead_Deduct_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Installer_Working_Super_or_Lead_Deduct_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Intelligrated_Installer_Current_Rate]() As Double
      Get
      Return Properties("Labor_Rate_Intelligrated_Installer_Current_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Intelligrated_Installer_Current_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Intelligrated_Installer_New_Rate]() As Double
      Get
      Return Properties("Labor_Rate_Intelligrated_Installer_New_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Intelligrated_Installer_New_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Intelligrated_Installer_Percent_Adj]() As Double
      Get
      Return Properties("Labor_Rate_Intelligrated_Installer_Percent_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Intelligrated_Installer_Percent_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj]() As Double
      Get
      Return Properties("Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Lead_Person_Current_Rate]() As Double
      Get
      Return Properties("Labor_Rate_Lead_Person_Current_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Lead_Person_Current_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Lead_Person_New_Rate]() As Double
      Get
      Return Properties("Labor_Rate_Lead_Person_New_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Lead_Person_New_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Lead_Person_Percent_Adj]() As Double
      Get
      Return Properties("Labor_Rate_Lead_Person_Percent_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Lead_Person_Percent_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Lead_Person_Tot_Cost_Adj]() As Double
      Get
      Return Properties("Labor_Rate_Lead_Person_Tot_Cost_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Lead_Person_Tot_Cost_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Percent_Adjustment]() As String
      Get
      Return Properties("Labor_Rate_Percent_Adjustment").Value
      End Get
      Set(ByVal Value As String)
      Properties("Labor_Rate_Percent_Adjustment").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Superintendent_Current_Rate]() As Double
      Get
      Return Properties("Labor_Rate_Superintendent_Current_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Superintendent_Current_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Superintendent_New_Rate]() As Double
      Get
      Return Properties("Labor_Rate_Superintendent_New_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Superintendent_New_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Superintendent_Percent_Adj]() As Double
      Get
      Return Properties("Labor_Rate_Superintendent_Percent_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Superintendent_Percent_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Superintendent_Tot_Cost_Adj]() As Double
      Get
      Return Properties("Labor_Rate_Superintendent_Tot_Cost_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Superintendent_Tot_Cost_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Labor_Rate_Tot_Cost_Adjustment]() As Double
      Get
      Return Properties("Labor_Rate_Tot_Cost_Adjustment").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Labor_Rate_Tot_Cost_Adjustment").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Commissioning_Cost]() As Double
      Get
      Return Properties("Lead_Men_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Commissioning_Hours]() As Double
      Get
      Return Properties("Lead_Men_Commissioning_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Commissioning_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Install_Cost]() As Double
      Get
      Return Properties("Lead_Men_Install_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Install_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Install_Hours]() As Double
      Get
      Return Properties("Lead_Men_Install_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Install_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Rate]() As Double
      Get
      Return Properties("Lead_Men_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Total_Cost]() As Double
      Get
      Return Properties("Lead_Men_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Men_Total_Hours]() As Double
      Get
      Return Properties("Lead_Men_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Men_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Commissioning_Cost]() As Double
      Get
      Return Properties("Lead_Person_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Commissioning_Hours]() As Double
      Get
      Return Properties("Lead_Person_Commissioning_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Commissioning_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Install_Support_Cost]() As Double
      Get
      Return Properties("Lead_Person_Install_Support_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Install_Support_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Install_Support_Hours]() As Double
      Get
      Return Properties("Lead_Person_Install_Support_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Install_Support_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Rate]() As Double
      Get
      Return Properties("Lead_Person_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Stagnant_Hours_Cost]() As Double
      Get
      Return Properties("Lead_Person_Stagnant_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Stagnant_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Stagnant_Hours_Hours]() As Double
      Get
      Return Properties("Lead_Person_Stagnant_Hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Stagnant_Hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Total_Cost]() As Double
      Get
      Return Properties("Lead_Person_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Lead_Person_Total_Hours]() As Double
      Get
      Return Properties("Lead_Person_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Lead_Person_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Mech_Convyr_Inst_Total_Hours]() As Double
      Get
      Return Properties("Mech_Convyr_Inst_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Mech_Convyr_Inst_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Mech_Convyr_Installation_Total_Cost]() As Double
      Get
      Return Properties("Mech_Convyr_Installation_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Mech_Convyr_Installation_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Air_Piping_Hours]() As Double
      Get
      Return Properties("Metrics_Air_Piping_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Air_Piping_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Air_Piping_Hours_per_Foot]() As Double
      Get
      Return Properties("Metrics_Air_Piping_Hours_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Air_Piping_Hours_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Catwalk_Hours_per_Foot]() As Double
      Get
      Return Properties("Metrics_Catwalk_Hours_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Catwalk_Hours_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Cost_per_Foot]() As Double
      Get
      Return Properties("Metrics_Cost_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Cost_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Demo_Hours_per_Foot]() As Double
      Get
      Return Properties("Metrics_Demo_Hours_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Demo_Hours_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Pallet_Conveyor_Footage_ft]() As Double
      Get
      Return Properties("Metrics_Pallet_Conveyor_Footage_ft").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Pallet_Conveyor_Footage_ft").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Pallet_Hours_per_Foot]() As Double
      Get
      Return Properties("Metrics_Pallet_Hours_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Pallet_Hours_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Platform_Hours_per_Foot]() As Double
      Get
      Return Properties("Metrics_Platform_Hours_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Platform_Hours_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Rental_Cost_per_Week]() As Double
      Get
      Return Properties("Metrics_Rental_Cost_per_Week").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Rental_Cost_per_Week").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Total_Commissioning_Cost]() As Double
      Get
      Return Properties("Metrics_Total_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Total_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Total_Cost]() As Double
      Get
      Return Properties("Metrics_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Total_Footage]() As Double
      Get
      Return Properties("Metrics_Total_Footage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Total_Footage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Metrics_Total_Hours_per_Foot]() As Double
      Get
      Return Properties("Metrics_Total_Hours_per_Foot").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Metrics_Total_Hours_per_Foot").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Customer_Spec_Adder]() As Double
      Get
      Return Properties("Miscellaneous_Customer_Spec_Adder").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Customer_Spec_Adder").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Customer_Spec_Adder_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Customer_Spec_Adder_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Customer_Spec_Adder_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Elevation_Adder]() As Double
      Get
      Return Properties("Miscellaneous_Elevation_Adder").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Elevation_Adder").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Elevation_Adder_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Elevation_Adder_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Elevation_Adder_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Misc_Item_1_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Misc_Item_1_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Misc_Item_1_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Misc_Item_1_Hours]() As Double
      Get
      Return Properties("Miscellaneous_Misc_Item_1_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Misc_Item_1_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Misc_Item_2_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Misc_Item_2_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Misc_Item_2_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Misc_Item_2_Hours]() As Double
      Get
      Return Properties("Miscellaneous_Misc_Item_2_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Misc_Item_2_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Miscellaneous_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Miscellaneous_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Miscellaneous_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Miscellaneous_Hours]() As Double
      Get
      Return Properties("Miscellaneous_Miscellaneous_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Miscellaneous_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Shuttle_Cost]() As Double
      Get
      Return Properties("Miscellaneous_Shuttle_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Shuttle_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_Shuttle_Hours]() As Double
      Get
      Return Properties("Miscellaneous_Shuttle_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_Shuttle_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_System_Efficiency]() As Boolean
      Get
      Return Properties("Miscellaneous_System_Efficiency").Value
      End Get
      Set(ByVal Value As Boolean)
      Properties("Miscellaneous_System_Efficiency").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_System_Efficiency_Cost]() As Double
      Get
      Return Properties("Miscellaneous_System_Efficiency_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_System_Efficiency_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_System_Efficiency_Hours]() As Double
      Get
      Return Properties("Miscellaneous_System_Efficiency_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_System_Efficiency_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Miscellaneous_System_Efficiency_Percentage]() As Double
      Get
      Return Properties("Miscellaneous_System_Efficiency_Percentage").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Miscellaneous_System_Efficiency_Percentage").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Other_Cost_Duration_Wks]() As Double
      Get
      Return Properties("Other_Cost_Duration_Wks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Other_Cost_Duration_Wks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Other_Cost_Hrs_Per_Week]() As Double
      Get
      Return Properties("Other_Cost_Hrs_Per_Week").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Other_Cost_Hrs_Per_Week").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Other_Cost_Onsite_Admin]() As Double
      Get
      Return Properties("Other_Cost_Onsite_Admin").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Other_Cost_Onsite_Admin").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Other_Cost_Permit_Hours]() As Double
      Get
      Return Properties("Other_Cost_Permit_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Other_Cost_Permit_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Other_Cost_Qty_Gang_Boxes]() As Double
      Get
      Return Properties("Other_Cost_Qty_Gang_Boxes").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Other_Cost_Qty_Gang_Boxes").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Other_Cost_Qty_Trucks]() As Double
      Get
      Return Properties("Other_Cost_Qty_Trucks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Other_Cost_Qty_Trucks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Peak_Crew]() As Double
      Get
      Return Properties("Peak_Crew").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Peak_Crew").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Lead_Men_Working_Percent]() As Double
      Get
      Return Properties("People_Needs_Lead_Men_Working_Percent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Lead_Men_Working_Percent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Num_of_Installers_Comm]() As Double
      Get
      Return Properties("People_Needs_Num_of_Installers_Comm").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Num_of_Installers_Comm").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Num_of_Installers_Install]() As Double
      Get
      Return Properties("People_Needs_Num_of_Installers_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Num_of_Installers_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Num_of_Lead_Men_Comm]() As Double
      Get
      Return Properties("People_Needs_Num_of_Lead_Men_Comm").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Num_of_Lead_Men_Comm").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Num_of_Lead_Men_Install]() As Double
      Get
      Return Properties("People_Needs_Num_of_Lead_Men_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Num_of_Lead_Men_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Num_of_Superintendents_Comm]() As Double
      Get
      Return Properties("People_Needs_Num_of_Superintendents_Comm").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Num_of_Superintendents_Comm").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Num_of_Superintendents_Install]() As Double
      Get
      Return Properties("People_Needs_Num_of_Superintendents_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Num_of_Superintendents_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [People_Needs_Superintendents_Working_Percent]() As Double
      Get
      Return Properties("People_Needs_Superintendents_Working_Percent").Value
      End Get
      Set(ByVal Value As Double)
      Properties("People_Needs_Superintendents_Working_Percent").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Permits_Cost]() As Double
      Get
      Return Properties("Permits_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Permits_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Info_Customer]() As Double
      Get
      Return Properties("Project_Info_Customer").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Info_Customer").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Info_Description]() As Double
      Get
      Return Properties("Project_Info_Description").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Info_Description").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Info_Location]() As Double
      Get
      Return Properties("Project_Info_Location").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Info_Location").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Info_Number]() As Double
      Get
      Return Properties("Project_Info_Number").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Info_Number").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Info_QuoteDate]() As Double
      Get
      Return Properties("Project_Info_QuoteDate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Info_QuoteDate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Support_Rate]() As Double
      Get
      Return Properties("Project_Support_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Support_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Support_Total_Cost]() As Double
      Get
      Return Properties("Project_Support_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Support_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Support_Total_Hours]() As Double
      Get
      Return Properties("Project_Support_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Support_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Tier]() As Double
      Get
      Return Properties("Project_Tier").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Tier").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Project_Tier_Value]() As Double
      Get
      Return Properties("Project_Tier_Value").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Project_Tier_Value").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Commissioning_Duration_Weeks]() As Double
      Get
      Return Properties("Schedule_Commissioning_Duration_Weeks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Commissioning_Duration_Weeks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_End_Mechanical_Install]() As Double
      Get
      Return Properties("Schedule_End_Mechanical_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_End_Mechanical_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_End_Run_to_In_Level_5]() As Double
      Get
      Return Properties("Schedule_End_Run_to_In_Level_5").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_End_Run_to_In_Level_5").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Install_Duration_Weeks]() As Double
      Get
      Return Properties("Schedule_Install_Duration_Weeks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Install_Duration_Weeks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Pre_Install_Duration_Weeks]() As Double
      Get
      Return Properties("Schedule_Pre_Install_Duration_Weeks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Pre_Install_Duration_Weeks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Revision_End_Mechanical_Install]() As Double
      Get
      Return Properties("Schedule_Revision_End_Mechanical_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Revision_End_Mechanical_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Revision_End_Run_to_In_Level_5]() As Double
      Get
      Return Properties("Schedule_Revision_End_Run_to_In_Level_5").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Revision_End_Run_to_In_Level_5").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Revision_Start_Mechanical_Install]() As Double
      Get
      Return Properties("Schedule_Revision_Start_Mechanical_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Revision_Start_Mechanical_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Start_In_house_Engineering]() As Double
      Get
      Return Properties("Schedule_Start_In_house_Engineering").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Start_In_house_Engineering").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Start_Mechanical_Install]() As Double
      Get
      Return Properties("Schedule_Start_Mechanical_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Start_Mechanical_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Total_Project_Duration_Weeks]() As Double
      Get
      Return Properties("Schedule_Total_Project_Duration_Weeks").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Total_Project_Duration_Weeks").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Schedule_Turnover_to_Customer_Go_Live]() As Double
      Get
      Return Properties("Schedule_Turnover_to_Customer_Go_Live").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Schedule_Turnover_to_Customer_Go_Live").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Site_Needs_Lead_Men_Commissioning]() As Double
      Get
      Return Properties("Site_Needs_Lead_Men_Commissioning").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Site_Needs_Lead_Men_Commissioning").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Site_Needs_Lead_Men_Install]() As Double
      Get
      Return Properties("Site_Needs_Lead_Men_Install").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Site_Needs_Lead_Men_Install").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Structures_CATWALK_Feet]() As Double
      Get
      Return Properties("Structures_CATWALK_Feet").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Structures_CATWALK_Feet").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Structures_CATWALK_Hours]() As Double
      Get
      Return Properties("Structures_CATWALK_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Structures_CATWALK_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Structures_DEMO_Feet]() As Double
      Get
      Return Properties("Structures_DEMO_Feet").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Structures_DEMO_Feet").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Structures_DEMO_Hours]() As Double
      Get
      Return Properties("Structures_DEMO_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Structures_DEMO_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Structures_PLATFORM_Feet]() As Double
      Get
      Return Properties("Structures_PLATFORM_Feet").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Structures_PLATFORM_Feet").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Structures_PLATFORM_Hours]() As Double
      Get
      Return Properties("Structures_PLATFORM_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Structures_PLATFORM_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Commissioning_Cost]() As Double
      Get
      Return Properties("Superintendent_Commissioning_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Commissioning_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Commissioning_Hours]() As Double
      Get
      Return Properties("Superintendent_Commissioning_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Commissioning_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Install_Support_Cost]() As Double
      Get
      Return Properties("Superintendent_Install_Support_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Install_Support_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Install_Support_Hours]() As Double
      Get
      Return Properties("Superintendent_Install_Support_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Install_Support_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Rate]() As Double
      Get
      Return Properties("Superintendent_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Stagnant_Hours_Cost]() As Double
      Get
      Return Properties("Superintendent_Stagnant_Hours_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Stagnant_Hours_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Stagnant_Hours_Hours]() As Double
      Get
      Return Properties("Superintendent_Stagnant_Hours_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Stagnant_Hours_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Total_Cost]() As Double
      Get
      Return Properties("Superintendent_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Superintendent_Total_Hours]() As Double
      Get
      Return Properties("Superintendent_Total_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Superintendent_Total_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Supplies_Consumables_All_Other_Cost]() As Double
      Get
      Return Properties("Supplies_Consumables_All_Other_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Supplies_Consumables_All_Other_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Supplies_Consumables_Anchors_1USD_per_Cost]() As Double
      Get
      Return Properties("Supplies_Consumables_Anchors_1USD_per_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Supplies_Consumables_Anchors_1USD_per_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Supplies_Consumables_Cost]() As Double
      Get
      Return Properties("Supplies_Consumables_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Supplies_Consumables_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Supplies_Consumables_Hardware_Air_Piping_Cost]() As Double
      Get
      Return Properties("Supplies_Consumables_Hardware_Air_Piping_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Supplies_Consumables_Hardware_Air_Piping_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Supplies_Consumables_Total_Cost]() As Double
      Get
      Return Properties("Supplies_Consumables_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Supplies_Consumables_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Support_Lead_Men_Hrs_per_Wk]() As Double
      Get
      Return Properties("Support_Lead_Men_Hrs_per_Wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Support_Lead_Men_Hrs_per_Wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Support_Project_Administrative_Hrs_per_Wk]() As Double
      Get
      Return Properties("Support_Project_Administrative_Hrs_per_Wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Support_Project_Administrative_Hrs_per_Wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Support_Superintendent_Hrs_per_Wk]() As Double
      Get
      Return Properties("Support_Superintendent_Hrs_per_Wk").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Support_Superintendent_Hrs_per_Wk").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Total_Miscellaneous_Cost]() As Double
      Get
      Return Properties("Total_Miscellaneous_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Total_Miscellaneous_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Total_Miscellaneous_Hours]() As Double
      Get
      Return Properties("Total_Miscellaneous_Hours").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Total_Miscellaneous_Hours").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Installer_Per_Diem_Rates_Wkly]() As Double
      Get
      Return Properties("Travel_Cost_Installer_Per_Diem_Rates_Wkly").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Installer_Per_Diem_Rates_Wkly").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Installer_Total_Mobilization]() As Double
      Get
      Return Properties("Travel_Cost_Installer_Total_Mobilization").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Installer_Total_Mobilization").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Installer_Total_Project_Per_Diem]() As Double
      Get
      Return Properties("Travel_Cost_Installer_Total_Project_Per_Diem").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Installer_Total_Project_Per_Diem").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Installer_Total_Travel_Cost]() As Double
      Get
      Return Properties("Travel_Cost_Installer_Total_Travel_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Installer_Total_Travel_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly]() As Double
      Get
      Return Properties("Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Lead_Men_Total_Mobilization]() As Double
      Get
      Return Properties("Travel_Cost_Lead_Men_Total_Mobilization").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Lead_Men_Total_Mobilization").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Lead_Men_Total_Project_Per_Diem]() As Double
      Get
      Return Properties("Travel_Cost_Lead_Men_Total_Project_Per_Diem").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Lead_Men_Total_Project_Per_Diem").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Lead_Men_Total_Travel_Cost]() As Double
      Get
      Return Properties("Travel_Cost_Lead_Men_Total_Travel_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Lead_Men_Total_Travel_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Per_Diem_Range]() As Double
      Get
      Return Properties("Travel_Cost_Per_Diem_Range").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Per_Diem_Range").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Superintendent_Per_Diem_Rates_Wkly]() As Double
      Get
      Return Properties("Travel_Cost_Superintendent_Per_Diem_Rates_Wkly").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Superintendent_Per_Diem_Rates_Wkly").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Superintendent_Total_Mobilization]() As Double
      Get
      Return Properties("Travel_Cost_Superintendent_Total_Mobilization").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Superintendent_Total_Mobilization").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Superintendent_Total_Prj_Per_Diem]() As Double
      Get
      Return Properties("Travel_Cost_Superintendent_Total_Prj_Per_Diem").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Superintendent_Total_Prj_Per_Diem").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Cost_Superintendent_Total_Travel_Cost]() As Double
      Get
      Return Properties("Travel_Cost_Superintendent_Total_Travel_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Cost_Superintendent_Total_Travel_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Expense_Cost]() As Double
      Get
      Return Properties("Travel_Expense_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Expense_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Expense_Mobilization_Cost]() As Double
      Get
      Return Properties("Travel_Expense_Mobilization_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Expense_Mobilization_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Expense_Per_Diem_Cost]() As Double
      Get
      Return Properties("Travel_Expense_Per_Diem_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Expense_Per_Diem_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Travel_Expense_Total_Cost]() As Double
      Get
      Return Properties("Travel_Expense_Total_Cost").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Travel_Expense_Total_Cost").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Intelligrated_Installer_Current_Rate]() As Double
      Get
      Return Properties("Union_Rate_Intelligrated_Installer_Current_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Intelligrated_Installer_Current_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Intelligrated_Installer_New_Rate]() As Double
      Get
      Return Properties("Union_Rate_Intelligrated_Installer_New_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Intelligrated_Installer_New_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Intelligrated_Installer_Percent_Adj]() As Double
      Get
      Return Properties("Union_Rate_Intelligrated_Installer_Percent_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Intelligrated_Installer_Percent_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Intelligrated_Installer_Tot_Cost_Adj]() As Double
      Get
      Return Properties("Union_Rate_Intelligrated_Installer_Tot_Cost_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Intelligrated_Installer_Tot_Cost_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Lead_Person_Current_Rate]() As Double
      Get
      Return Properties("Union_Rate_Lead_Person_Current_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Lead_Person_Current_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Lead_Person_New_Rate]() As Double
      Get
      Return Properties("Union_Rate_Lead_Person_New_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Lead_Person_New_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Lead_Person_Percent_Adj]() As Double
      Get
      Return Properties("Union_Rate_Lead_Person_Percent_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Lead_Person_Percent_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Lead_Person_Tot_Cost_Adj]() As Double
      Get
      Return Properties("Union_Rate_Lead_Person_Tot_Cost_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Lead_Person_Tot_Cost_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Percent_Adjustment]() As String
      Get
      Return Properties("Union_Rate_Percent_Adjustment").Value
      End Get
      Set(ByVal Value As String)
      Properties("Union_Rate_Percent_Adjustment").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Superintendent_Current_Rate]() As Double
      Get
      Return Properties("Union_Rate_Superintendent_Current_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Superintendent_Current_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Superintendent_New_Rate]() As Double
      Get
      Return Properties("Union_Rate_Superintendent_New_Rate").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Superintendent_New_Rate").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Superintendent_Percent_Adj]() As Double
      Get
      Return Properties("Union_Rate_Superintendent_Percent_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Superintendent_Percent_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Superintendent_Tot_Cost_Adj]() As Double
      Get
      Return Properties("Union_Rate_Superintendent_Tot_Cost_Adj").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Superintendent_Tot_Cost_Adj").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [Union_Rate_Tot_Cost_Adjustment]() As Double
      Get
      Return Properties("Union_Rate_Tot_Cost_Adjustment").Value
      End Get
      Set(ByVal Value As Double)
      Properties("Union_Rate_Tot_Cost_Adjustment").CalculatedValue = Value
      End Set
      End Property
    
          Public Shadows Property [DisplayName]() As String
      Get
      Return Properties("DisplayName").Value
      End Get
      Set(ByVal Value As String)
      Properties("DisplayName").CalculatedValue = Value
      End Set
      End Property
    
          Public Property [PartNumber]() As String
      Get
      Return Properties("PartNumber").Value
      End Get
      Set(ByVal Value As String)
      Properties("PartNumber").CalculatedValue = Value
      End Set
      End Property
    
      Public ReadOnly Property [My_Subsystem]() As Rulestream.Kernel.Connection
      Get
      Return Connections("My_Subsystem")
      End Get
      End Property
    
    #End Region

    #Region " Initialization "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize() Implements RuleStream.IRsPartFormulas.Initialize
    Dim oSpec As Rulestream.Kernel.Spec = Nothing
    Dim oConnection as Rulestream.Kernel.Connection = Nothing
    Dim oSubpart as Rulestream.Kernel.Subpart = Nothing
    dim oMasterDoc as Rulestream.Kernel.MasterDoc = Nothing
    InitPart("CAE_Conveyor_Costing", <a><![CDATA[CAE_Conveyor_Costing]]></a>.Value, 389, "IGSEST",  "N", "N", False, False, "In Development", "", "", "", "", "",  "GLOBAL\H615411", "07/15/2025 12:26:57")
    AddProperty("8827", "Additional_Subcontractor_Services_Cost", <a><![CDATA[Additional_Subcontractor_Services_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E36", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:21 PM")
    AddProperty("8829", "Administrative_Cost", <a><![CDATA[Administrative_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E38", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H617242", "7/10/2025 9:42:02 AM")
    AddProperty("8762", "Avg_Crew_Size", <a><![CDATA[Avg_Crew_Size]]></a>.Value, "Mech Install^'Conveyor Costing'!K29", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:55 PM")
    AddProperty("8698", "Conveyor_above_8_ft", <a><![CDATA[Conveyor_above_8_ft]]></a>.Value, "Mech Install^'Conveyor Costing'!Q25", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:21 PM")
    AddProperty("8697", "Conveyor_between_5_ft_to_8_ft_Footage", <a><![CDATA[Conveyor_between_5_ft_to_8_ft_Footage]]></a>.Value, "Mech Install^'Conveyor Costing'!Q24", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:17 PM")
    AddProperty("8699", "Conveyor_Hours_Added", <a><![CDATA[Conveyor_Hours_Added]]></a>.Value, "Mech Install^'Conveyor Costing'!Q26", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:24 PM")
    AddProperty("8758", "Crew_Average_Hours_per_wk", <a><![CDATA[Crew_Average_Hours_per_wk]]></a>.Value, "Mech Install^'Conveyor Costing'!I26", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:42 PM")
    AddProperty("8759", "Crew_Comm_Sppt_Hours_per_wk", <a><![CDATA[Crew_Comm_Sppt_Hours_per_wk]]></a>.Value, "Mech Install^'Conveyor Costing'!I27", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:45 PM")
    AddProperty("8777", "Crew_Installer_Headcount", <a><![CDATA[Crew_Installer_Headcount]]></a>.Value, "Mech Install^'Conveyor Costing'!J41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:43 PM")
    AddProperty("8774", "Crew_Installer_Mobilization_Count", <a><![CDATA[Crew_Installer_Mobilization_Count]]></a>.Value, "Mech Install^'Conveyor Costing'!I41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:33 PM")
    AddProperty("8780", "Crew_Installer_Total_Mobilization_Cost", <a><![CDATA[Crew_Installer_Total_Mobilization_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!K41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:52 PM")
    AddProperty("8776", "Crew_Lead_Man_Headcount", <a><![CDATA[Crew_Lead_Man_Headcount]]></a>.Value, "Mech Install^'Conveyor Costing'!J40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:39 PM")
    AddProperty("8773", "Crew_Lead_Man_Mobilization_Count", <a><![CDATA[Crew_Lead_Man_Mobilization_Count]]></a>.Value, "Mech Install^'Conveyor Costing'!I40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:30 PM")
    AddProperty("8779", "Crew_Lead_Man_Total_Mobilization_Cost", <a><![CDATA[Crew_Lead_Man_Total_Mobilization_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!K40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:49 PM")
    AddProperty("8771", "Crew_Mobilization_Cost_per_person", <a><![CDATA[Crew_Mobilization_Cost_per_person]]></a>.Value, "Mech Install^'Conveyor Costing'!I37", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:24 PM")
    AddProperty("8760", "Crew_Peak_Crew_Multiplier", <a><![CDATA[Crew_Peak_Crew_Multiplier]]></a>.Value, "Mech Install^'Conveyor Costing'!I28", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:48 PM")
    AddProperty("8775", "Crew_Superintendent_Headcount", <a><![CDATA[Crew_Superintendent_Headcount]]></a>.Value, "Mech Install^'Conveyor Costing'!J39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:36 PM")
    AddProperty("8772", "Crew_Superintendent_Mobilization_Count", <a><![CDATA[Crew_Superintendent_Mobilization_Count]]></a>.Value, "Mech Install^'Conveyor Costing'!I39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:27 PM")
    AddProperty("8778", "Crew_Superintendent_Total_Mobilization_Cost", <a><![CDATA[Crew_Superintendent_Total_Mobilization_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!K39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:46 PM")
    AddProperty("8781", "Crew_Total_Headcount", <a><![CDATA[Crew_Total_Headcount]]></a>.Value, "Mech Install^'Conveyor Costing'!J42", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:55 PM")
    AddProperty("8782", "Crew_Total_Mobilization_Cost", <a><![CDATA[Crew_Total_Mobilization_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!K42", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:58 PM")
    AddProperty("8660", "EQ_Rental_Crane_Large_Outdoor_Duration", <a><![CDATA[EQ_Rental_Crane_Large_Outdoor_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:21 PM")
    AddProperty("8647", "EQ_Rental_Crane_Large_Outdoor_Quantity", <a><![CDATA[EQ_Rental_Crane_Large_Outdoor_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:40 PM")
    AddProperty("8686", "EQ_Rental_Crane_Large_Outdoor_Total_Cost", <a><![CDATA[EQ_Rental_Crane_Large_Outdoor_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:42 PM")
    AddProperty("8673", "EQ_Rental_Crane_Large_Outdoor_Wkly_Rate", <a><![CDATA[EQ_Rental_Crane_Large_Outdoor_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:02 PM")
    AddProperty("8659", "EQ_Rental_Cranes_Small_indoors_Duration", <a><![CDATA[EQ_Rental_Cranes_Small_indoors_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:18 PM")
    AddProperty("8646", "EQ_Rental_Cranes_Small_indoors_Quantity", <a><![CDATA[EQ_Rental_Cranes_Small_indoors_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:37 PM")
    AddProperty("8685", "EQ_Rental_Cranes_Small_indoors_Total_Cost", <a><![CDATA[EQ_Rental_Cranes_Small_indoors_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:39 PM")
    AddProperty("8672", "EQ_Rental_Cranes_Small_indoors_Wkly_Rate", <a><![CDATA[EQ_Rental_Cranes_Small_indoors_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:58 PM")
    AddProperty("8663", "EQ_Rental_Dumpsters_Duration", <a><![CDATA[EQ_Rental_Dumpsters_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O20", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:30 PM")
    AddProperty("8650", "EQ_Rental_Dumpsters_Quantity", <a><![CDATA[EQ_Rental_Dumpsters_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N20", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:49 PM")
    AddProperty("8689", "EQ_Rental_Dumpsters_Total_Cost", <a><![CDATA[EQ_Rental_Dumpsters_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q20", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:52 PM")
    AddProperty("8676", "EQ_Rental_Dumpsters_Wkly_Rate", <a><![CDATA[EQ_Rental_Dumpsters_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P20", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:11 PM")
    AddProperty("8658", "EQ_Rental_Fork_Truck_Duration", <a><![CDATA[EQ_Rental_Fork_Truck_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:15 PM")
    AddProperty("8645", "EQ_Rental_Fork_Truck_Quantity", <a><![CDATA[EQ_Rental_Fork_Truck_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:34 PM")
    AddProperty("8684", "EQ_Rental_Fork_Truck_Total_Cost", <a><![CDATA[EQ_Rental_Fork_Truck_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:36 PM")
    AddProperty("8671", "EQ_Rental_Fork_Truck_Wkly_Rate", <a><![CDATA[EQ_Rental_Fork_Truck_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:55 PM")
    AddProperty("8655", "EQ_Rental_Large_Boom_Lift_Duration", <a><![CDATA[EQ_Rental_Large_Boom_Lift_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:06 PM")
    AddProperty("8642", "EQ_Rental_Large_Boom_Lift_Quantity", <a><![CDATA[EQ_Rental_Large_Boom_Lift_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:24 PM")
    AddProperty("8681", "EQ_Rental_Large_Boom_Lift_Total_Cost", <a><![CDATA[EQ_Rental_Large_Boom_Lift_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:26 PM")
    AddProperty("8668", "EQ_Rental_Large_Boom_Lift_Wkly_Rate", <a><![CDATA[EQ_Rental_Large_Boom_Lift_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:46 PM")
    AddProperty("8653", "EQ_Rental_Large_Scissor_Lift_Duration", <a><![CDATA[EQ_Rental_Large_Scissor_Lift_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:59 PM")
    AddProperty("8640", "EQ_Rental_Large_Scissor_Lift_Quantity", <a><![CDATA[EQ_Rental_Large_Scissor_Lift_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:18 PM")
    AddProperty("8679", "EQ_Rental_Large_Scissor_Lift_Total_Cost", <a><![CDATA[EQ_Rental_Large_Scissor_Lift_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:20 PM")
    AddProperty("8666", "EQ_Rental_Large_Scissor_Lift_Wkly_Rate", <a><![CDATA[EQ_Rental_Large_Scissor_Lift_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:39 PM")
    AddProperty("8657", "EQ_Rental_Large_Telehandler_Duration", <a><![CDATA[EQ_Rental_Large_Telehandler_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O14", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:12 PM")
    AddProperty("8644", "EQ_Rental_Large_Telehandler_Quantity", <a><![CDATA[EQ_Rental_Large_Telehandler_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N14", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:31 PM")
    AddProperty("8683", "EQ_Rental_Large_Telehandler_Total_Cost", <a><![CDATA[EQ_Rental_Large_Telehandler_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q14", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:33 PM")
    AddProperty("8670", "EQ_Rental_Large_Telehandler_Wkly_Rate", <a><![CDATA[EQ_Rental_Large_Telehandler_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P14", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:52 PM")
    AddProperty("8664", "EQ_Rental_Porta_Johns_Duration", <a><![CDATA[EQ_Rental_Porta_Johns_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:33 PM")
    AddProperty("8651", "EQ_Rental_Porta_Johns_Quantity", <a><![CDATA[EQ_Rental_Porta_Johns_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:53 PM")
    AddProperty("8690", "EQ_Rental_Porta_Johns_Total_Cost", <a><![CDATA[EQ_Rental_Porta_Johns_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:55 PM")
    AddProperty("8677", "EQ_Rental_Porta_Johns_Wkly_Rate", <a><![CDATA[EQ_Rental_Porta_Johns_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:14 PM")
    AddProperty("8662", "EQ_Rental_Site_Trailer_Duration", <a><![CDATA[EQ_Rental_Site_Trailer_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O19", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:27 PM")
    AddProperty("8649", "EQ_Rental_Site_Trailer_Quantity", <a><![CDATA[EQ_Rental_Site_Trailer_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N19", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:46 PM")
    AddProperty("8688", "EQ_Rental_Site_Trailer_Total_Cost", <a><![CDATA[EQ_Rental_Site_Trailer_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q19", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:48 PM")
    AddProperty("8675", "EQ_Rental_Site_Trailer_Wkly_Rate", <a><![CDATA[EQ_Rental_Site_Trailer_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P19", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:08 PM")
    AddProperty("8654", "EQ_Rental_Small_Boom_Lift_Duration", <a><![CDATA[EQ_Rental_Small_Boom_Lift_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:02 PM")
    AddProperty("8641", "EQ_Rental_Small_Boom_Lift_Quantity", <a><![CDATA[EQ_Rental_Small_Boom_Lift_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:21 PM")
    AddProperty("8680", "EQ_Rental_Small_Boom_Lift_Total_Cost", <a><![CDATA[EQ_Rental_Small_Boom_Lift_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:23 PM")
    AddProperty("8667", "EQ_Rental_Small_Boom_Lift_Wkly_Rate", <a><![CDATA[EQ_Rental_Small_Boom_Lift_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:43 PM")
    AddProperty("8652", "EQ_Rental_Small_Scissors_Lift_Duration", <a><![CDATA[EQ_Rental_Small_Scissors_Lift_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:56 PM")
    AddProperty("8639", "EQ_Rental_Small_Scissors_Lift_Quantity", <a><![CDATA[EQ_Rental_Small_Scissors_Lift_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:15 PM")
    AddProperty("8678", "EQ_Rental_Small_Scissors_Lift_Total_Cost", <a><![CDATA[EQ_Rental_Small_Scissors_Lift_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:17 PM")
    AddProperty("8665", "EQ_Rental_Small_Scissors_Lift_Wkly_Rate", <a><![CDATA[EQ_Rental_Small_Scissors_Lift_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:36 PM")
    AddProperty("8656", "EQ_Rental_Small_Telehandler_Duration", <a><![CDATA[EQ_Rental_Small_Telehandler_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:09 PM")
    AddProperty("8682", "EQ_Rental_Small_Telehandler_Total_Cost", <a><![CDATA[EQ_Rental_Small_Telehandler_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:30 PM")
    AddProperty("8669", "EQ_Rental_Small_Telehandler_Wkly_Rate", <a><![CDATA[EQ_Rental_Small_Telehandler_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:49 PM")
    AddProperty("8643", "EQ_Rental_Small_TelehandlerQuantity", <a><![CDATA[EQ_Rental_Small_TelehandlerQuantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:27 PM")
    AddProperty("8661", "EQ_Rental_Welders_Duration", <a><![CDATA[EQ_Rental_Welders_Duration]]></a>.Value, "Mech Install^'Conveyor Costing'!O18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:05:24 PM")
    AddProperty("8648", "EQ_Rental_Welders_Quantity", <a><![CDATA[EQ_Rental_Welders_Quantity]]></a>.Value, "Mech Install^'Conveyor Costing'!N18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:04:43 PM")
    AddProperty("8687", "EQ_Rental_Welders_Total_Cost", <a><![CDATA[EQ_Rental_Welders_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:45 PM")
    AddProperty("8674", "EQ_Rental_Welders_Wkly_Rate", <a><![CDATA[EQ_Rental_Welders_Wkly_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:05 PM")
    AddProperty("9790", "Equipment_Rental_Cost", <a><![CDATA[Equipment_Rental_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E25", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H617242", "7/10/2025 9:31:05 AM")
    AddProperty("8819", "Equipment_Rental_Dumpsters_Cost", <a><![CDATA[Equipment_Rental_Dumpsters_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E26", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:55 PM")
    AddProperty("8820", "Equipment_Rental_Porta_Johns_Cost", <a><![CDATA[Equipment_Rental_Porta_Johns_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E27", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:58 PM")
    AddProperty("10185", "Equipment_Rental_Porta_Johns_Total_Cost", <a><![CDATA[Equipment_Rental_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E25", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:00:39 AM")
    AddProperty("8749", "Factors_Air_Piping", <a><![CDATA[Factors_Air_Piping]]></a>.Value, "Mech Install^'Conveyor Costing'!I16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:13 PM")
    AddProperty("8751", "Factors_Customer_Spec_Difficulty", <a><![CDATA[Factors_Customer_Spec_Difficulty]]></a>.Value, "Mech Install^'Conveyor Costing'!I18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:20 PM")
    AddProperty("8748", "Factors_Risk_Rating", <a><![CDATA[Factors_Risk_Rating]]></a>.Value, "Mech Install^'Conveyor Costing'!I15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:10 PM")
    AddProperty("8750", "Factors_Seismic", <a><![CDATA[Factors_Seismic]]></a>.Value, "Mech Install^'Conveyor Costing'!I17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:17 PM")
    AddProperty("8816", "Installer_Commissioning_Support_Cost", <a><![CDATA[Installer_Commissioning_Support_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E23", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:46 PM")
    AddProperty("8809", "Installer_Commissioning_Support_Hours", <a><![CDATA[Installer_Commissioning_Support_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F23", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:24 PM")
    AddProperty("8813", "Installer_Demo_Cost", <a><![CDATA[Installer_Demo_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E20", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:36 PM")
    AddProperty("8806", "Installer_Demo_Hours", <a><![CDATA[Installer_Demo_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F20", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:14 PM")
    AddProperty("8811", "Installer_Install_Cost", <a><![CDATA[Installer_Install_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:30 PM")
    AddProperty("8804", "Installer_Install_Hours", <a><![CDATA[Installer_Install_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F18", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:08 PM")
    AddProperty("8814", "Installer_Misc_Install_Cost", <a><![CDATA[Installer_Misc_Install_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:40 PM")
    AddProperty("8807", "Installer_Misc_Install_Hours", <a><![CDATA[Installer_Misc_Install_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:18 PM")
    AddProperty("8812", "Installer_Platforms_Grid_Catwalk_Cost", <a><![CDATA[Installer_Platforms_Grid_Catwalk_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E19", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:33 PM")
    AddProperty("8805", "Installer_Platforms_Grid_Catwalk_Hours", <a><![CDATA[Installer_Platforms_Grid_Catwalk_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F19", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:11 PM")
    AddProperty("8818", "Installer_Rate", <a><![CDATA[Installer_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!D17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:52 PM")
    AddProperty("8815", "Installer_Stagnant_Hours_Cost", <a><![CDATA[Installer_Stagnant_Hours_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E22", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:43 PM")
    AddProperty("8808", "Installer_Stagnant_Hours_Hours", <a><![CDATA[Installer_Stagnant_Hours_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F22", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:21 PM")
    AddProperty("10183", "Installer_Total_Cost", <a><![CDATA[Installer_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:44:27 AM")
    AddProperty("10184", "Installer_Total_Hours", <a><![CDATA[Installer_Total_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F17", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:45:03 AM")
    AddProperty("8817", "Installer_Working_Super_or_Lead_Deduct_Cost", <a><![CDATA[Installer_Working_Super_or_Lead_Deduct_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E24", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:49 PM")
    AddProperty("8810", "Installer_Working_Super_or_Lead_Deduct_Hours", <a><![CDATA[Installer_Working_Super_or_Lead_Deduct_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F24", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:27 PM")
    AddProperty("8723", "Labor_Rate_Intelligrated_Installer_Current_Rate", <a><![CDATA[Labor_Rate_Intelligrated_Installer_Current_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!O48", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:41 PM")
    AddProperty("8726", "Labor_Rate_Intelligrated_Installer_New_Rate", <a><![CDATA[Labor_Rate_Intelligrated_Installer_New_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P48", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:51 PM")
    AddProperty("8720", "Labor_Rate_Intelligrated_Installer_Percent_Adj", <a><![CDATA[Labor_Rate_Intelligrated_Installer_Percent_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!N48", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:32 PM")
    AddProperty("8729", "Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj", <a><![CDATA[Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!Q48", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:00 PM")
    AddProperty("8722", "Labor_Rate_Lead_Person_Current_Rate", <a><![CDATA[Labor_Rate_Lead_Person_Current_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!O47", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:38 PM")
    AddProperty("8725", "Labor_Rate_Lead_Person_New_Rate", <a><![CDATA[Labor_Rate_Lead_Person_New_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P47", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:48 PM")
    AddProperty("8719", "Labor_Rate_Lead_Person_Percent_Adj", <a><![CDATA[Labor_Rate_Lead_Person_Percent_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!N47", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:28 PM")
    AddProperty("8728", "Labor_Rate_Lead_Person_Tot_Cost_Adj", <a><![CDATA[Labor_Rate_Lead_Person_Tot_Cost_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!Q47", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:57 PM")
    AddProperty("10165", "Labor_Rate_Percent_Adjustment", <a><![CDATA[Labor_Rate_Percent_Adjustment]]></a>.Value, "Mech Install^'Conveyor Costing'!N45", "String","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:16:33 AM")
    AddProperty("8721", "Labor_Rate_Superintendent_Current_Rate", <a><![CDATA[Labor_Rate_Superintendent_Current_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!O46", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:35 PM")
    AddProperty("8724", "Labor_Rate_Superintendent_New_Rate", <a><![CDATA[Labor_Rate_Superintendent_New_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P46", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:45 PM")
    AddProperty("8718", "Labor_Rate_Superintendent_Percent_Adj", <a><![CDATA[Labor_Rate_Superintendent_Percent_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!N46", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:25 PM")
    AddProperty("8727", "Labor_Rate_Superintendent_Tot_Cost_Adj", <a><![CDATA[Labor_Rate_Superintendent_Tot_Cost_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!Q46", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:54 PM")
    AddProperty("10166", "Labor_Rate_Tot_Cost_Adjustment", <a><![CDATA[Labor_Rate_Tot_Cost_Adjustment]]></a>.Value, "Mech Install^'Conveyor Costing'!Q49", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:17:49 AM")
    AddProperty("10195", "Lead_Men_Commissioning_Cost", <a><![CDATA[Lead_Men_Commissioning_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E70", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:24:09 AM")
    AddProperty("10196", "Lead_Men_Commissioning_Hours", <a><![CDATA[Lead_Men_Commissioning_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F70", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:24:52 AM")
    AddProperty("10193", "Lead_Men_Install_Cost", <a><![CDATA[Lead_Men_Install_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E69", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:18:51 AM")
    AddProperty("10194", "Lead_Men_Install_Hours", <a><![CDATA[Lead_Men_Install_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F69", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:23:23 AM")
    AddProperty("10199", "Lead_Men_Rate", <a><![CDATA[Lead_Men_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!D68", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:27:13 AM")
    AddProperty("10191", "Lead_Men_Total_Cost", <a><![CDATA[Lead_Men_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E68", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:14:00 AM")
    AddProperty("10192", "Lead_Men_Total_Hours", <a><![CDATA[Lead_Men_Total_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F68", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:14:49 AM")
    AddProperty("8802", "Lead_Person_Commissioning_Cost", <a><![CDATA[Lead_Person_Commissioning_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:01 PM")
    AddProperty("8799", "Lead_Person_Commissioning_Hours", <a><![CDATA[Lead_Person_Commissioning_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F16", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:52 PM")
    AddProperty("8800", "Lead_Person_Install_Support_Cost", <a><![CDATA[Lead_Person_Install_Support_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E14", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:55 PM")
    AddProperty("8797", "Lead_Person_Install_Support_Hours", <a><![CDATA[Lead_Person_Install_Support_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F14", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:46 PM")
    AddProperty("8803", "Lead_Person_Rate", <a><![CDATA[Lead_Person_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!D13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:13:05 PM")
    AddProperty("8801", "Lead_Person_Stagnant_Hours_Cost", <a><![CDATA[Lead_Person_Stagnant_Hours_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:59 PM")
    AddProperty("8798", "Lead_Person_Stagnant_Hours_Hours", <a><![CDATA[Lead_Person_Stagnant_Hours_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F15", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:49 PM")
    AddProperty("10181", "Lead_Person_Total_Cost", <a><![CDATA[Lead_Person_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:42:51 AM")
    AddProperty("10182", "Lead_Person_Total_Hours", <a><![CDATA[Lead_Person_Total_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F13", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:43:38 AM")
    AddProperty("9786", "Mech_Convyr_Inst_Total_Hours", <a><![CDATA[Mech_Convyr_Inst_Total_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F8", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 12:26:57 PM")
    AddProperty("9793", "Mech_Convyr_Installation_Total_Cost", <a><![CDATA[Mech_Convyr_Installation_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E8", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 12:25:06 PM")
    AddProperty("8835", "Metrics_Air_Piping_Hours", <a><![CDATA[Metrics_Air_Piping_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!C48", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:45 PM")
    AddProperty("8836", "Metrics_Air_Piping_Hours_per_Foot", <a><![CDATA[Metrics_Air_Piping_Hours_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!C49", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:49 PM")
    AddProperty("8833", "Metrics_Catwalk_Hours_per_Foot", <a><![CDATA[Metrics_Catwalk_Hours_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!C46", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:39 PM")
    AddProperty("8840", "Metrics_Cost_per_Foot", <a><![CDATA[Metrics_Cost_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!F44", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:15:01 PM")
    AddProperty("8834", "Metrics_Demo_Hours_per_Foot", <a><![CDATA[Metrics_Demo_Hours_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!C47", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:42 PM")
    AddProperty("8837", "Metrics_Pallet_Conveyor_Footage_ft", <a><![CDATA[Metrics_Pallet_Conveyor_Footage_ft]]></a>.Value, "Mech Install^'Conveyor Costing'!C50", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:52 PM")
    AddProperty("8838", "Metrics_Pallet_Hours_per_Foot", <a><![CDATA[Metrics_Pallet_Hours_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!C51", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:55 PM")
    AddProperty("8832", "Metrics_Platform_Hours_per_Foot", <a><![CDATA[Metrics_Platform_Hours_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!C45", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:36 PM")
    AddProperty("8842", "Metrics_Rental_Cost_per_Week", <a><![CDATA[Metrics_Rental_Cost_per_Week]]></a>.Value, "Mech Install^'Conveyor Costing'!F46", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:15:07 PM")
    AddProperty("8841", "Metrics_Total_Commissioning_Cost", <a><![CDATA[Metrics_Total_Commissioning_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!F45", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:15:04 PM")
    AddProperty("8839", "Metrics_Total_Cost", <a><![CDATA[Metrics_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!F43", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:58 PM")
    AddProperty("8830", "Metrics_Total_Footage", <a><![CDATA[Metrics_Total_Footage]]></a>.Value, "Mech Install^'Conveyor Costing'!C43", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:30 PM")
    AddProperty("8831", "Metrics_Total_Hours_per_Foot", <a><![CDATA[Metrics_Total_Hours_per_Foot]]></a>.Value, "Mech Install^'Conveyor Costing'!C44", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:33 PM")
    AddProperty("8828", "Miscellaneous_Cost", <a><![CDATA[Miscellaneous_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E37", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H617242", "7/10/2025 9:35:33 AM")
    AddProperty("8786", "Miscellaneous_Customer_Spec_Adder", <a><![CDATA[Miscellaneous_Customer_Spec_Adder]]></a>.Value, "Mech Install^'Conveyor Costing'!J53", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:11 PM")
    AddProperty("10172", "Miscellaneous_Customer_Spec_Adder_Cost", <a><![CDATA[Miscellaneous_Customer_Spec_Adder_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I53", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:23:56 AM")
    AddProperty("8787", "Miscellaneous_Elevation_Adder", <a><![CDATA[Miscellaneous_Elevation_Adder]]></a>.Value, "Mech Install^'Conveyor Costing'!J54", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:14 PM")
    AddProperty("10173", "Miscellaneous_Elevation_Adder_Cost", <a><![CDATA[Miscellaneous_Elevation_Adder_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I54", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:24:34 AM")
    AddProperty("10174", "Miscellaneous_Misc_Item_1_Cost", <a><![CDATA[Miscellaneous_Misc_Item_1_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I55", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:25:25 AM")
    AddProperty("10176", "Miscellaneous_Misc_Item_1_Hours", <a><![CDATA[Miscellaneous_Misc_Item_1_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!J55", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:27:16 AM")
    AddProperty("10175", "Miscellaneous_Misc_Item_2_Cost", <a><![CDATA[Miscellaneous_Misc_Item_2_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I56", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:26:18 AM")
    AddProperty("10177", "Miscellaneous_Misc_Item_2_Hours", <a><![CDATA[Miscellaneous_Misc_Item_2_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!J56", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:28:18 AM")
    AddProperty("10171", "Miscellaneous_Miscellaneous_Cost", <a><![CDATA[Miscellaneous_Miscellaneous_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I52", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:23:09 AM")
    AddProperty("8785", "Miscellaneous_Miscellaneous_Hours", <a><![CDATA[Miscellaneous_Miscellaneous_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!J52", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:08 PM")
    AddProperty("10170", "Miscellaneous_Shuttle_Cost", <a><![CDATA[Miscellaneous_Shuttle_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I51", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:22:26 AM")
    AddProperty("8784", "Miscellaneous_Shuttle_Hours", <a><![CDATA[Miscellaneous_Shuttle_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!J51", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:05 PM")
    AddProperty("10178", "Miscellaneous_System_Efficiency", <a><![CDATA[Miscellaneous_System_Efficiency]]></a>.Value, "Mech Install^'Conveyor Costing'!K50  This is a percentage value", "Boolean","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:40:30 AM")
    AddProperty("10169", "Miscellaneous_System_Efficiency_Cost", <a><![CDATA[Miscellaneous_System_Efficiency_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I50", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:21:26 AM")
    AddProperty("8783", "Miscellaneous_System_Efficiency_Hours", <a><![CDATA[Miscellaneous_System_Efficiency_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!J50", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:01 PM")
    AddProperty("10022", "Miscellaneous_System_Efficiency_Percentage", <a><![CDATA[Miscellaneous_System_Efficiency_Percentage]]></a>.Value, "Mech Install^'Conveyor Costing'!K50", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 8:59:28 AM")
    AddProperty("8695", "Other_Cost_Duration_Wks", <a><![CDATA[Other_Cost_Duration_Wks]]></a>.Value, "Mech Install^'Conveyor Costing'!N28", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:11 PM")
    AddProperty("8696", "Other_Cost_Hrs_Per_Week", <a><![CDATA[Other_Cost_Hrs_Per_Week]]></a>.Value, "Mech Install^'Conveyor Costing'!N29", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:14 PM")
    AddProperty("8694", "Other_Cost_Onsite_Admin", <a><![CDATA[Other_Cost_Onsite_Admin]]></a>.Value, "Mech Install^'Conveyor Costing'!N27", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:08 PM")
    AddProperty("8693", "Other_Cost_Permit_Hours", <a><![CDATA[Other_Cost_Permit_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!N26", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:05 PM")
    AddProperty("8692", "Other_Cost_Qty_Gang_Boxes", <a><![CDATA[Other_Cost_Qty_Gang_Boxes]]></a>.Value, "Mech Install^'Conveyor Costing'!N25", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:01 PM")
    AddProperty("8691", "Other_Cost_Qty_Trucks", <a><![CDATA[Other_Cost_Qty_Trucks]]></a>.Value, "Mech Install^'Conveyor Costing'!N24", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:06:58 PM")
    AddProperty("8761", "Peak_Crew", <a><![CDATA[Peak_Crew]]></a>.Value, "Mech Install^'Conveyor Costing'!K27", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:51 PM")
    AddProperty("8770", "People_Needs_Lead_Men_Working_Percent", <a><![CDATA[People_Needs_Lead_Men_Working_Percent]]></a>.Value, "Mech Install^'Conveyor Costing'!K33", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:21 PM")
    AddProperty("8768", "People_Needs_Num_of_Installers_Comm", <a><![CDATA[People_Needs_Num_of_Installers_Comm]]></a>.Value, "Mech Install^'Conveyor Costing'!J34", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:14 PM")
    AddProperty("8765", "People_Needs_Num_of_Installers_Install", <a><![CDATA[People_Needs_Num_of_Installers_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!I34", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:04 PM")
    AddProperty("8767", "People_Needs_Num_of_Lead_Men_Comm", <a><![CDATA[People_Needs_Num_of_Lead_Men_Comm]]></a>.Value, "Mech Install^'Conveyor Costing'!J33", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:11 PM")
    AddProperty("8764", "People_Needs_Num_of_Lead_Men_Install", <a><![CDATA[People_Needs_Num_of_Lead_Men_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!I33", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:01 PM")
    AddProperty("8766", "People_Needs_Num_of_Superintendents_Comm", <a><![CDATA[People_Needs_Num_of_Superintendents_Comm]]></a>.Value, "Mech Install^'Conveyor Costing'!J32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:07 PM")
    AddProperty("8763", "People_Needs_Num_of_Superintendents_Install", <a><![CDATA[People_Needs_Num_of_Superintendents_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!I32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:58 PM")
    AddProperty("8769", "People_Needs_Superintendents_Working_Percent", <a><![CDATA[People_Needs_Superintendents_Working_Percent]]></a>.Value, "Mech Install^'Conveyor Costing'!K32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:11:17 PM")
    AddProperty("8826", "Permits_Cost", <a><![CDATA[Permits_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E35", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:17 PM")
    AddProperty("8742", "Project_Info_Customer", <a><![CDATA[Project_Info_Customer]]></a>.Value, "Mech Install^'Conveyor Costing'!I8", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:51 PM")
    AddProperty("8745", "Project_Info_Description", <a><![CDATA[Project_Info_Description]]></a>.Value, "Mech Install^'Conveyor Costing'!I11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:01 PM")
    AddProperty("8743", "Project_Info_Location", <a><![CDATA[Project_Info_Location]]></a>.Value, "Mech Install^'Conveyor Costing'!I9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:54 PM")
    AddProperty("8744", "Project_Info_Number", <a><![CDATA[Project_Info_Number]]></a>.Value, "Mech Install^'Conveyor Costing'!I10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:57 PM")
    AddProperty("8746", "Project_Info_QuoteDate", <a><![CDATA[Project_Info_QuoteDate]]></a>.Value, "Mech Install^'Conveyor Costing'!I12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:04 PM")
    AddProperty("10200", "Project_Support_Rate", <a><![CDATA[Project_Support_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!D71", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:27:49 AM")
    AddProperty("10197", "Project_Support_Total_Cost", <a><![CDATA[Project_Support_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E71", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:25:35 AM")
    AddProperty("10198", "Project_Support_Total_Hours", <a><![CDATA[Project_Support_Total_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F71", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:26:22 AM")
    AddProperty("8747", "Project_Tier", <a><![CDATA[Project_Tier]]></a>.Value, "Mech Install^'Conveyor Costing'!K8", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:07 PM")
    AddProperty("10201", "Project_Tier_Value", <a><![CDATA[Project_Tier_Value]]></a>.Value, "Mech Install^'Conveyor Costing'!L8", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:28:26 AM")
    AddProperty("10157", "Schedule_Commissioning_Duration_Weeks", <a><![CDATA[Schedule_Commissioning_Duration_Weeks]]></a>.Value, "Mech Install^'Conveyor Costing'!J76", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 8:59:49 AM")
    AddProperty("8753", "Schedule_End_Mechanical_Install", <a><![CDATA[Schedule_End_Mechanical_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!I22", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:26 PM")
    AddProperty("8754", "Schedule_End_Run_to_In_Level_5", <a><![CDATA[Schedule_End_Run_to_In_Level_5]]></a>.Value, "Mech Install^'Conveyor Costing'!I23", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:29 PM")
    AddProperty("10156", "Schedule_Install_Duration_Weeks", <a><![CDATA[Schedule_Install_Duration_Weeks]]></a>.Value, "Mech Install^'Conveyor Costing'!J75", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:00:07 AM")
    AddProperty("10155", "Schedule_Pre_Install_Duration_Weeks", <a><![CDATA[Schedule_Pre_Install_Duration_Weeks]]></a>.Value, "Mech Install^'Conveyor Costing'!J74", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:00:25 AM")
    AddProperty("8756", "Schedule_Revision_End_Mechanical_Install", <a><![CDATA[Schedule_Revision_End_Mechanical_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!K22", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:36 PM")
    AddProperty("8757", "Schedule_Revision_End_Run_to_In_Level_5", <a><![CDATA[Schedule_Revision_End_Run_to_In_Level_5]]></a>.Value, "Mech Install^'Conveyor Costing'!K23", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:39 PM")
    AddProperty("8755", "Schedule_Revision_Start_Mechanical_Install", <a><![CDATA[Schedule_Revision_Start_Mechanical_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!K21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:33 PM")
    AddProperty("10153", "Schedule_Start_In_house_Engineering", <a><![CDATA[Schedule_Start_In_house_Engineering]]></a>.Value, "Mech Install^'Conveyor Costing'!I73", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:00:42 AM")
    AddProperty("8752", "Schedule_Start_Mechanical_Install", <a><![CDATA[Schedule_Start_Mechanical_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!I21", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:10:23 PM")
    AddProperty("10158", "Schedule_Total_Project_Duration_Weeks", <a><![CDATA[Schedule_Total_Project_Duration_Weeks]]></a>.Value, "Mech Install^'Conveyor Costing'!J77", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:00:59 AM")
    AddProperty("10154", "Schedule_Turnover_to_Customer_Go_Live", <a><![CDATA[Schedule_Turnover_to_Customer_Go_Live]]></a>.Value, "Mech Install^'Conveyor Costing'!I76", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:01:17 AM")
    AddProperty("10163", "Site_Needs_Lead_Men_Commissioning", <a><![CDATA[Site_Needs_Lead_Men_Commissioning]]></a>.Value, "Mech Install^'Conveyor Costing'!J85", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:01:32 AM")
    AddProperty("10162", "Site_Needs_Lead_Men_Install", <a><![CDATA[Site_Needs_Lead_Men_Install]]></a>.Value, "Mech Install^'Conveyor Costing'!I85", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:01:51 AM")
    AddProperty("8702", "Structures_CATWALK_Feet", <a><![CDATA[Structures_CATWALK_Feet]]></a>.Value, "Mech Install^'Conveyor Costing'!N34", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:34 PM")
    AddProperty("8705", "Structures_CATWALK_Hours", <a><![CDATA[Structures_CATWALK_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!O34", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:43 PM")
    AddProperty("8700", "Structures_DEMO_Feet", <a><![CDATA[Structures_DEMO_Feet]]></a>.Value, "Mech Install^'Conveyor Costing'!N32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:27 PM")
    AddProperty("8703", "Structures_DEMO_Hours", <a><![CDATA[Structures_DEMO_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!O32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:37 PM")
    AddProperty("8701", "Structures_PLATFORM_Feet", <a><![CDATA[Structures_PLATFORM_Feet]]></a>.Value, "Mech Install^'Conveyor Costing'!N33", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:31 PM")
    AddProperty("8704", "Structures_PLATFORM_Hours", <a><![CDATA[Structures_PLATFORM_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!O33", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:40 PM")
    AddProperty("8795", "Superintendent_Commissioning_Cost", <a><![CDATA[Superintendent_Commissioning_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:40 PM")
    AddProperty("8792", "Superintendent_Commissioning_Hours", <a><![CDATA[Superintendent_Commissioning_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F12", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:30 PM")
    AddProperty("8793", "Superintendent_Install_Support_Cost", <a><![CDATA[Superintendent_Install_Support_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:33 PM")
    AddProperty("8790", "Superintendent_Install_Support_Hours", <a><![CDATA[Superintendent_Install_Support_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F10", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:24 PM")
    AddProperty("8796", "Superintendent_Rate", <a><![CDATA[Superintendent_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!D9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:43 PM")
    AddProperty("8794", "Superintendent_Stagnant_Hours_Cost", <a><![CDATA[Superintendent_Stagnant_Hours_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:37 PM")
    AddProperty("8791", "Superintendent_Stagnant_Hours_Hours", <a><![CDATA[Superintendent_Stagnant_Hours_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F11", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:27 PM")
    AddProperty("10179", "Superintendent_Total_Cost", <a><![CDATA[Superintendent_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:41:29 AM")
    AddProperty("10180", "Superintendent_Total_Hours", <a><![CDATA[Superintendent_Total_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!F9", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:42:05 AM")
    AddProperty("8823", "Supplies_Consumables_All_Other_Cost", <a><![CDATA[Supplies_Consumables_All_Other_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E31", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:08 PM")
    AddProperty("8822", "Supplies_Consumables_Anchors_1USD_per_Cost", <a><![CDATA[Supplies_Consumables_Anchors_1USD_per_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E30", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:05 PM")
    AddProperty("9791", "Supplies_Consumables_Cost", <a><![CDATA[Supplies_Consumables_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E28", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H617242", "7/10/2025 9:31:42 AM")
    AddProperty("8821", "Supplies_Consumables_Hardware_Air_Piping_Cost", <a><![CDATA[Supplies_Consumables_Hardware_Air_Piping_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E29", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:01 PM")
    AddProperty("10186", "Supplies_Consumables_Total_Cost", <a><![CDATA[Supplies_Consumables_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E28", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:01:27 AM")
    AddProperty("10160", "Support_Lead_Men_Hrs_per_Wk", <a><![CDATA[Support_Lead_Men_Hrs_per_Wk]]></a>.Value, "Mech Install^'Conveyor Costing'!I81", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:02:10 AM")
    AddProperty("10161", "Support_Project_Administrative_Hrs_per_Wk", <a><![CDATA[Support_Project_Administrative_Hrs_per_Wk]]></a>.Value, "Mech Install^'Conveyor Costing'!I82", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:02:28 AM")
    AddProperty("10159", "Support_Superintendent_Hrs_per_Wk", <a><![CDATA[Support_Superintendent_Hrs_per_Wk]]></a>.Value, "Mech Install^'Conveyor Costing'!I80", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:02:45 AM")
    AddProperty("8789", "Total_Miscellaneous_Cost", <a><![CDATA[Total_Miscellaneous_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!I57", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:21 PM")
    AddProperty("8788", "Total_Miscellaneous_Hours", <a><![CDATA[Total_Miscellaneous_Hours]]></a>.Value, "Mech Install^'Conveyor Costing'!J57", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:12:18 PM")
    AddProperty("8708", "Travel_Cost_Installer_Per_Diem_Rates_Wkly", <a><![CDATA[Travel_Cost_Installer_Per_Diem_Rates_Wkly]]></a>.Value, "Mech Install^'Conveyor Costing'!N41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:53 PM")
    AddProperty("8714", "Travel_Cost_Installer_Total_Mobilization", <a><![CDATA[Travel_Cost_Installer_Total_Mobilization]]></a>.Value, "Mech Install^'Conveyor Costing'!P41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:12 PM")
    AddProperty("8711", "Travel_Cost_Installer_Total_Project_Per_Diem", <a><![CDATA[Travel_Cost_Installer_Total_Project_Per_Diem]]></a>.Value, "Mech Install^'Conveyor Costing'!O41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:02 PM")
    AddProperty("8717", "Travel_Cost_Installer_Total_Travel_Cost", <a><![CDATA[Travel_Cost_Installer_Total_Travel_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q41", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:21 PM")
    AddProperty("8707", "Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly", <a><![CDATA[Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly]]></a>.Value, "Mech Install^'Conveyor Costing'!N40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:49 PM")
    AddProperty("8713", "Travel_Cost_Lead_Men_Total_Mobilization", <a><![CDATA[Travel_Cost_Lead_Men_Total_Mobilization]]></a>.Value, "Mech Install^'Conveyor Costing'!P40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:09 PM")
    AddProperty("8710", "Travel_Cost_Lead_Men_Total_Project_Per_Diem", <a><![CDATA[Travel_Cost_Lead_Men_Total_Project_Per_Diem]]></a>.Value, "Mech Install^'Conveyor Costing'!O40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:59 PM")
    AddProperty("8716", "Travel_Cost_Lead_Men_Total_Travel_Cost", <a><![CDATA[Travel_Cost_Lead_Men_Total_Travel_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q40", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:18 PM")
    AddProperty("10164", "Travel_Cost_Per_Diem_Range", <a><![CDATA[Travel_Cost_Per_Diem_Range]]></a>.Value, "Mech Install^'Conveyor Costing'!N37", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:03:10 AM")
    AddProperty("8706", "Travel_Cost_Superintendent_Per_Diem_Rates_Wkly", <a><![CDATA[Travel_Cost_Superintendent_Per_Diem_Rates_Wkly]]></a>.Value, "Mech Install^'Conveyor Costing'!N39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:46 PM")
    AddProperty("8712", "Travel_Cost_Superintendent_Total_Mobilization", <a><![CDATA[Travel_Cost_Superintendent_Total_Mobilization]]></a>.Value, "Mech Install^'Conveyor Costing'!P39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:06 PM")
    AddProperty("8709", "Travel_Cost_Superintendent_Total_Prj_Per_Diem", <a><![CDATA[Travel_Cost_Superintendent_Total_Prj_Per_Diem]]></a>.Value, "Mech Install^'Conveyor Costing'!O39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:07:56 PM")
    AddProperty("8715", "Travel_Cost_Superintendent_Total_Travel_Cost", <a><![CDATA[Travel_Cost_Superintendent_Total_Travel_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!Q39", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:08:15 PM")
    AddProperty("9792", "Travel_Expense_Cost", <a><![CDATA[Travel_Expense_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H617242", "7/10/2025 9:32:23 AM")
    AddProperty("8825", "Travel_Expense_Mobilization_Cost", <a><![CDATA[Travel_Expense_Mobilization_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E34", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:14 PM")
    AddProperty("8824", "Travel_Expense_Per_Diem_Cost", <a><![CDATA[Travel_Expense_Per_Diem_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E33", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:14:11 PM")
    AddProperty("10187", "Travel_Expense_Total_Cost", <a><![CDATA[Travel_Expense_Total_Cost]]></a>.Value, "Mech Install^'Conveyor Costing'!E32", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 10:02:09 AM")
    AddProperty("8735", "Union_Rate_Intelligrated_Installer_Current_Rate", <a><![CDATA[Union_Rate_Intelligrated_Installer_Current_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!O55", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:28 PM")
    AddProperty("8738", "Union_Rate_Intelligrated_Installer_New_Rate", <a><![CDATA[Union_Rate_Intelligrated_Installer_New_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P55", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:38 PM")
    AddProperty("8732", "Union_Rate_Intelligrated_Installer_Percent_Adj", <a><![CDATA[Union_Rate_Intelligrated_Installer_Percent_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!N55", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:10 PM")
    AddProperty("8741", "Union_Rate_Intelligrated_Installer_Tot_Cost_Adj", <a><![CDATA[Union_Rate_Intelligrated_Installer_Tot_Cost_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!Q55", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:48 PM")
    AddProperty("8734", "Union_Rate_Lead_Person_Current_Rate", <a><![CDATA[Union_Rate_Lead_Person_Current_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!O54", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:25 PM")
    AddProperty("8737", "Union_Rate_Lead_Person_New_Rate", <a><![CDATA[Union_Rate_Lead_Person_New_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P54", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:35 PM")
    AddProperty("8731", "Union_Rate_Lead_Person_Percent_Adj", <a><![CDATA[Union_Rate_Lead_Person_Percent_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!N54", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:07 PM")
    AddProperty("8740", "Union_Rate_Lead_Person_Tot_Cost_Adj", <a><![CDATA[Union_Rate_Lead_Person_Tot_Cost_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!Q54", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:44 PM")
    AddProperty("10167", "Union_Rate_Percent_Adjustment", <a><![CDATA[Union_Rate_Percent_Adjustment]]></a>.Value, "Mech Install^'Conveyor Costing'!N52", "String","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:19:02 AM")
    AddProperty("8733", "Union_Rate_Superintendent_Current_Rate", <a><![CDATA[Union_Rate_Superintendent_Current_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!O53", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:22 PM")
    AddProperty("8736", "Union_Rate_Superintendent_New_Rate", <a><![CDATA[Union_Rate_Superintendent_New_Rate]]></a>.Value, "Mech Install^'Conveyor Costing'!P53", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:32 PM")
    AddProperty("8730", "Union_Rate_Superintendent_Percent_Adj", <a><![CDATA[Union_Rate_Superintendent_Percent_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!N53", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:03 PM")
    AddProperty("8739", "Union_Rate_Superintendent_Tot_Cost_Adj", <a><![CDATA[Union_Rate_Superintendent_Tot_Cost_Adj]]></a>.Value, "Mech Install^'Conveyor Costing'!Q53", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H581955", "7/7/2025 12:09:41 PM")
    AddProperty("10168", "Union_Rate_Tot_Cost_Adjustment", <a><![CDATA[Union_Rate_Tot_Cost_Adjustment]]></a>.Value, "Mech Install^'Conveyor Costing'!Q56", "Double","","Conveyor Costing","FD", 9999, "", 0,0, "", "", "GLOBAL\H615411", "7/15/2025 9:19:57 AM")
    AddProperty("9494", "DisplayName", <a><![CDATA[Display Name]]></a>.Value, "", "String","","General","FD", 9999, "", 0,0, "", "", "GLOBAL\H602502", "7/8/2025 4:38:54 PM")
    AddProperty("6021", "PartNumber", <a><![CDATA[Part Number]]></a>.Value, "", "String","N","System","MN", 9999, "", 0,0, "", "", "GLOBAL\H602502", "6/30/2025 3:22:07 PM")
    
      oConnection = AddConnection("My_Subsystem", <a><![CDATA[My_Subsystem]]></a>.Value, "", "128", "OO", 0, "","General", 9999, "", "GLOBAL\H602502", "7/8/2025 4:22:21 PM")
      
        oConnection.AddVPF(399, "CAE_Mech_Install_CP_Comp")
      
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Sub Initialize_Process(ByVal lngProcessID as Integer) Implements RuleStream.IRsPartFormulas.InitializeProcess
    Select Case lngProcessID
    
    Case Else
    Process = "DefaultProcess"
    End Select
    End Sub

    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Properties()
    Dim ctx as String
    ctx = ContextId
    
            If Incontext("-1", ctx) Then
          InitProperty("Additional_Subcontractor_Services_Cost", "8412", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:21 PM", "", "In Development",  0,13637)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Administrative_Cost", "8414", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H617242", "7/10/2025 9:42:02 AM", "", "In Development",  0,15946)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Avg_Crew_Size", "8347", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:55 PM", "", "In Development",  0,13507)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conveyor_above_8_ft", "8283", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:21 PM", "", "In Development",  0,13379)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conveyor_between_5_ft_to_8_ft_Footage", "8282", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:17 PM", "", "In Development",  0,13377)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Conveyor_Hours_Added", "8284", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:24 PM", "", "In Development",  0,13381)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Average_Hours_per_wk", "8343", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:42 PM", "", "In Development",  0,13499)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Comm_Sppt_Hours_per_wk", "8344", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:45 PM", "", "In Development",  0,13501)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Installer_Headcount", "8362", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:43 PM", "", "In Development",  0,13537)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Installer_Mobilization_Count", "8359", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:33 PM", "", "In Development",  0,13531)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Installer_Total_Mobilization_Cost", "8365", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:52 PM", "", "In Development",  0,13543)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Lead_Man_Headcount", "8361", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:39 PM", "", "In Development",  0,13535)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Lead_Man_Mobilization_Count", "8358", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:30 PM", "", "In Development",  0,13529)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Lead_Man_Total_Mobilization_Cost", "8364", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:49 PM", "", "In Development",  0,13541)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Mobilization_Cost_per_person", "8356", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:24 PM", "", "In Development",  0,13525)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Peak_Crew_Multiplier", "8345", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:48 PM", "", "In Development",  0,13503)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Superintendent_Headcount", "8360", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:36 PM", "", "In Development",  0,13533)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Superintendent_Mobilization_Count", "8357", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:27 PM", "", "In Development",  0,13527)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Superintendent_Total_Mobilization_Cost", "8363", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:46 PM", "", "In Development",  0,13539)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Total_Headcount", "8366", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:55 PM", "", "In Development",  0,13545)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Crew_Total_Mobilization_Cost", "8367", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:58 PM", "", "In Development",  0,13547)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Crane_Large_Outdoor_Duration", "8245", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:21 PM", "", "In Development",  0,13303)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Crane_Large_Outdoor_Quantity", "8232", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:40 PM", "", "In Development",  0,13277)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Crane_Large_Outdoor_Total_Cost", "8271", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:42 PM", "", "In Development",  0,13355)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Crane_Large_Outdoor_Wkly_Rate", "8258", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:02 PM", "", "In Development",  0,13329)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Cranes_Small_indoors_Duration", "8244", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:18 PM", "", "In Development",  0,13301)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Cranes_Small_indoors_Quantity", "8231", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:37 PM", "", "In Development",  0,13275)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Cranes_Small_indoors_Total_Cost", "8270", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:39 PM", "", "In Development",  0,13353)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Cranes_Small_indoors_Wkly_Rate", "8257", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:58 PM", "", "In Development",  0,13327)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Dumpsters_Duration", "8248", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:30 PM", "", "In Development",  0,13309)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Dumpsters_Quantity", "8235", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:49 PM", "", "In Development",  0,13283)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Dumpsters_Total_Cost", "8274", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:52 PM", "", "In Development",  0,13361)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Dumpsters_Wkly_Rate", "8261", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:11 PM", "", "In Development",  0,13335)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Fork_Truck_Duration", "8243", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:15 PM", "", "In Development",  0,13299)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Fork_Truck_Quantity", "8230", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:34 PM", "", "In Development",  0,13273)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Fork_Truck_Total_Cost", "8269", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:36 PM", "", "In Development",  0,13351)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Fork_Truck_Wkly_Rate", "8256", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:55 PM", "", "In Development",  0,13325)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Boom_Lift_Duration", "8240", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:06 PM", "", "In Development",  0,13293)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Boom_Lift_Quantity", "8227", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:24 PM", "", "In Development",  0,13267)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Boom_Lift_Total_Cost", "8266", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:26 PM", "", "In Development",  0,13345)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Boom_Lift_Wkly_Rate", "8253", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:46 PM", "", "In Development",  0,13319)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Scissor_Lift_Duration", "8238", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:59 PM", "", "In Development",  0,13289)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Scissor_Lift_Quantity", "8225", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:18 PM", "", "In Development",  0,13263)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Scissor_Lift_Total_Cost", "8264", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:20 PM", "", "In Development",  0,13341)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Scissor_Lift_Wkly_Rate", "8251", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:39 PM", "", "In Development",  0,13315)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Telehandler_Duration", "8242", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:12 PM", "", "In Development",  0,13297)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Telehandler_Quantity", "8229", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:31 PM", "", "In Development",  0,13271)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Telehandler_Total_Cost", "8268", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:33 PM", "", "In Development",  0,13349)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Large_Telehandler_Wkly_Rate", "8255", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:52 PM", "", "In Development",  0,13323)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Porta_Johns_Duration", "8249", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:33 PM", "", "In Development",  0,13311)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Porta_Johns_Quantity", "8236", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:53 PM", "", "In Development",  0,13285)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Porta_Johns_Total_Cost", "8275", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:55 PM", "", "In Development",  0,13363)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Porta_Johns_Wkly_Rate", "8262", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:14 PM", "", "In Development",  0,13337)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Site_Trailer_Duration", "8247", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:27 PM", "", "In Development",  0,13307)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Site_Trailer_Quantity", "8234", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:46 PM", "", "In Development",  0,13281)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Site_Trailer_Total_Cost", "8273", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:48 PM", "", "In Development",  0,13359)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Site_Trailer_Wkly_Rate", "8260", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:08 PM", "", "In Development",  0,13333)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Boom_Lift_Duration", "8239", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:02 PM", "", "In Development",  0,13291)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Boom_Lift_Quantity", "8226", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:21 PM", "", "In Development",  0,13265)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Boom_Lift_Total_Cost", "8265", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:23 PM", "", "In Development",  0,13343)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Boom_Lift_Wkly_Rate", "8252", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:43 PM", "", "In Development",  0,13317)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Scissors_Lift_Duration", "8237", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:56 PM", "", "In Development",  0,13287)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Scissors_Lift_Quantity", "8224", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:15 PM", "", "In Development",  0,13261)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Scissors_Lift_Total_Cost", "8263", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:17 PM", "", "In Development",  0,13339)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Scissors_Lift_Wkly_Rate", "8250", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:36 PM", "", "In Development",  0,13313)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Telehandler_Duration", "8241", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:09 PM", "", "In Development",  0,13295)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Telehandler_Total_Cost", "8267", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:30 PM", "", "In Development",  0,13347)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_Telehandler_Wkly_Rate", "8254", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:49 PM", "", "In Development",  0,13321)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Small_TelehandlerQuantity", "8228", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:27 PM", "", "In Development",  0,13269)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Welders_Duration", "8246", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:05:24 PM", "", "In Development",  0,13305)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Welders_Quantity", "8233", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:04:43 PM", "", "In Development",  0,13279)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Welders_Total_Cost", "8272", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:45 PM", "", "In Development",  0,13357)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("EQ_Rental_Welders_Wkly_Rate", "8259", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:05 PM", "", "In Development",  0,13331)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Equipment_Rental_Cost", "9365", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H617242", "7/10/2025 9:31:05 AM", "", "In Development",  0,15939)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Equipment_Rental_Dumpsters_Cost", "8404", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:55 PM", "", "In Development",  0,13621)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Equipment_Rental_Porta_Johns_Cost", "8405", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:58 PM", "", "In Development",  0,13623)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Equipment_Rental_Porta_Johns_Total_Cost", "9766", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:55:05 AM", "", "In Development",  0,17227)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Factors_Air_Piping", "8334", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:13 PM", "", "In Development",  0,13481)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Factors_Customer_Spec_Difficulty", "8336", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:20 PM", "", "In Development",  0,13485)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Factors_Risk_Rating", "8333", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:10 PM", "", "In Development",  0,13479)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Factors_Seismic", "8335", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:17 PM", "", "In Development",  0,13483)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Commissioning_Support_Cost", "8401", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:46 PM", "", "In Development",  0,13615)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Commissioning_Support_Hours", "8394", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:24 PM", "", "In Development",  0,13601)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Demo_Cost", "8398", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:36 PM", "", "In Development",  0,13609)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Demo_Hours", "8391", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:14 PM", "", "In Development",  0,13595)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Install_Cost", "8396", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:30 PM", "", "In Development",  0,13605)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Install_Hours", "8389", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:08 PM", "", "In Development",  0,13591)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Misc_Install_Cost", "8399", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:40 PM", "", "In Development",  0,13611)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Misc_Install_Hours", "8392", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:18 PM", "", "In Development",  0,13597)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Platforms_Grid_Catwalk_Cost", "8397", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:33 PM", "", "In Development",  0,13607)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Platforms_Grid_Catwalk_Hours", "8390", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:11 PM", "", "In Development",  0,13593)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Rate", "8403", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:52 PM", "", "In Development",  0,13619)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Stagnant_Hours_Cost", "8400", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:43 PM", "", "In Development",  0,13613)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Stagnant_Hours_Hours", "8393", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:21 PM", "", "In Development",  0,13599)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Total_Cost", "9764", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:44:27 AM", "", "In Development",  0,17225)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Total_Hours", "9765", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:45:03 AM", "", "In Development",  0,17226)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Working_Super_or_Lead_Deduct_Cost", "8402", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:49 PM", "", "In Development",  0,13617)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Installer_Working_Super_or_Lead_Deduct_Hours", "8395", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:27 PM", "", "In Development",  0,13603)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Intelligrated_Installer_Current_Rate", "8308", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:41 PM", "", "In Development",  0,13429)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Intelligrated_Installer_New_Rate", "8311", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:51 PM", "", "In Development",  0,13435)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Intelligrated_Installer_Percent_Adj", "8305", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:32 PM", "", "In Development",  0,13423)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj", "8314", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:00 PM", "", "In Development",  0,13441)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Lead_Person_Current_Rate", "8307", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:38 PM", "", "In Development",  0,13427)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Lead_Person_New_Rate", "8310", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:48 PM", "", "In Development",  0,13433)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Lead_Person_Percent_Adj", "8304", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:28 PM", "", "In Development",  0,13421)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Lead_Person_Tot_Cost_Adj", "8313", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:57 PM", "", "In Development",  0,13439)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Percent_Adjustment", "9746", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:16:33 AM", "", "In Development",  0,17207)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Superintendent_Current_Rate", "8306", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:35 PM", "", "In Development",  0,13425)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Superintendent_New_Rate", "8309", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:45 PM", "", "In Development",  0,13431)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Superintendent_Percent_Adj", "8303", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:25 PM", "", "In Development",  0,13419)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Superintendent_Tot_Cost_Adj", "8312", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:54 PM", "", "In Development",  0,13437)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Labor_Rate_Tot_Cost_Adjustment", "9747", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:17:49 AM", "", "In Development",  0,17208)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Commissioning_Cost", "9776", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:24:09 AM", "", "In Development",  0,17237)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Commissioning_Hours", "9777", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:24:52 AM", "", "In Development",  0,17238)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Install_Cost", "9774", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:18:51 AM", "", "In Development",  0,17235)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Install_Hours", "9775", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:23:23 AM", "", "In Development",  0,17236)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Rate", "9780", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:27:13 AM", "", "In Development",  0,17241)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Total_Cost", "9772", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:14:00 AM", "", "In Development",  0,17233)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Men_Total_Hours", "9773", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:14:49 AM", "", "In Development",  0,17234)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Commissioning_Cost", "8387", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:01 PM", "", "In Development",  0,13587)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Commissioning_Hours", "8384", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:52 PM", "", "In Development",  0,13581)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Install_Support_Cost", "8385", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:55 PM", "", "In Development",  0,13583)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Install_Support_Hours", "8382", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:46 PM", "", "In Development",  0,13577)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Rate", "8388", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:13:05 PM", "", "In Development",  0,13589)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Stagnant_Hours_Cost", "8386", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:59 PM", "", "In Development",  0,13585)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Stagnant_Hours_Hours", "8383", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:49 PM", "", "In Development",  0,13579)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Total_Cost", "9762", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:42:51 AM", "", "In Development",  0,17223)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Lead_Person_Total_Hours", "9763", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:43:38 AM", "", "In Development",  0,17224)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Mech_Convyr_Inst_Total_Hours", "9361", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 12:26:57 PM", "", "In Development",  0,17274)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Mech_Convyr_Installation_Total_Cost", "9368", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 12:25:06 PM", "", "In Development",  0,17269)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Air_Piping_Hours", "8420", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:45 PM", "", "In Development",  0,13653)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Air_Piping_Hours_per_Foot", "8421", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:49 PM", "", "In Development",  0,13655)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Catwalk_Hours_per_Foot", "8418", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:39 PM", "", "In Development",  0,13649)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Cost_per_Foot", "8425", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:15:01 PM", "", "In Development",  0,13663)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Demo_Hours_per_Foot", "8419", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:42 PM", "", "In Development",  0,13651)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Pallet_Conveyor_Footage_ft", "8422", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:52 PM", "", "In Development",  0,13657)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Pallet_Hours_per_Foot", "8423", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:55 PM", "", "In Development",  0,13659)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Platform_Hours_per_Foot", "8417", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:36 PM", "", "In Development",  0,13647)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Rental_Cost_per_Week", "8427", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:15:07 PM", "", "In Development",  0,13667)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Total_Commissioning_Cost", "8426", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:15:04 PM", "", "In Development",  0,13665)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Total_Cost", "8424", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:58 PM", "", "In Development",  0,13661)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Total_Footage", "8415", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:30 PM", "", "In Development",  0,13643)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Metrics_Total_Hours_per_Foot", "8416", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:33 PM", "", "In Development",  0,13645)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Cost", "8413", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:24 PM", "", "In Development",  0,13639)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Customer_Spec_Adder", "8371", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:11 PM", "", "In Development",  0,13555)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Customer_Spec_Adder_Cost", "9753", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:23:56 AM", "", "In Development",  0,17214)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Elevation_Adder", "8372", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:14 PM", "", "In Development",  0,13557)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Elevation_Adder_Cost", "9754", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:24:34 AM", "", "In Development",  0,17215)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Misc_Item_1_Cost", "9755", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:25:25 AM", "", "In Development",  0,17216)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Misc_Item_1_Hours", "9757", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:27:16 AM", "", "In Development",  0,17218)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Misc_Item_2_Cost", "9756", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:26:18 AM", "", "In Development",  0,17217)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Misc_Item_2_Hours", "9758", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:28:18 AM", "", "In Development",  0,17219)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Miscellaneous_Cost", "9752", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:23:09 AM", "", "In Development",  0,17213)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Miscellaneous_Hours", "8370", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:08 PM", "", "In Development",  0,13553)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Shuttle_Cost", "9751", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:22:26 AM", "", "In Development",  0,17212)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_Shuttle_Hours", "8369", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:05 PM", "", "In Development",  0,13551)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_System_Efficiency", "9759", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:40:30 AM", "", "In Development",  0,17220)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_System_Efficiency_Cost", "9750", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:21:26 AM", "", "In Development",  0,17211)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_System_Efficiency_Hours", "8368", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:01 PM", "", "In Development",  0,13549)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Miscellaneous_System_Efficiency_Percentage", "9604", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H617242", "7/14/2025 5:13:40 AM", "", "In Development",  0,16852)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Other_Cost_Duration_Wks", "8280", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:11 PM", "", "In Development",  0,13373)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Other_Cost_Hrs_Per_Week", "8281", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:14 PM", "", "In Development",  0,13375)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Other_Cost_Onsite_Admin", "8279", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:08 PM", "", "In Development",  0,13371)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Other_Cost_Permit_Hours", "8278", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:05 PM", "", "In Development",  0,13369)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Other_Cost_Qty_Gang_Boxes", "8277", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:01 PM", "", "In Development",  0,13367)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Other_Cost_Qty_Trucks", "8276", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:06:58 PM", "", "In Development",  0,13365)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Peak_Crew", "8346", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:51 PM", "", "In Development",  0,13505)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Lead_Men_Working_Percent", "8355", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:21 PM", "", "In Development",  0,13523)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Num_of_Installers_Comm", "8353", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:14 PM", "", "In Development",  0,13519)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Num_of_Installers_Install", "8350", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:04 PM", "", "In Development",  0,13513)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Num_of_Lead_Men_Comm", "8352", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:10 PM", "", "In Development",  0,13517)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Num_of_Lead_Men_Install", "8349", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:01 PM", "", "In Development",  0,13511)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Num_of_Superintendents_Comm", "8351", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:07 PM", "", "In Development",  0,13515)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Num_of_Superintendents_Install", "8348", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:58 PM", "", "In Development",  0,13509)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("People_Needs_Superintendents_Working_Percent", "8354", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:11:17 PM", "", "In Development",  0,13521)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Permits_Cost", "8411", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:17 PM", "", "In Development",  0,13635)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Info_Customer", "8327", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:51 PM", "", "In Development",  0,13467)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Info_Description", "8330", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:01 PM", "", "In Development",  0,13473)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Info_Location", "8328", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:54 PM", "", "In Development",  0,13469)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Info_Number", "8329", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:57 PM", "", "In Development",  0,13471)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Info_QuoteDate", "8331", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:04 PM", "", "In Development",  0,13475)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Support_Rate", "9781", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:27:49 AM", "", "In Development",  0,17242)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Support_Total_Cost", "9778", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:25:35 AM", "", "In Development",  0,17239)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Support_Total_Hours", "9779", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:26:22 AM", "", "In Development",  0,17240)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Tier", "8332", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:07 PM", "", "In Development",  0,13477)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Project_Tier_Value", "9782", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:28:26 AM", "", "In Development",  0,17243)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Commissioning_Duration_Weeks", "9738", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:41:49 AM", "", "In Development",  0,17198)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_End_Mechanical_Install", "8338", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:26 PM", "", "In Development",  0,13489)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_End_Run_to_In_Level_5", "8339", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:29 PM", "", "In Development",  0,13491)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Install_Duration_Weeks", "9737", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:40:40 AM", "", "In Development",  0,17197)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Pre_Install_Duration_Weeks", "9736", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:39:41 AM", "", "In Development",  0,17196)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Revision_End_Mechanical_Install", "8341", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:36 PM", "", "In Development",  0,13495)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Revision_End_Run_to_In_Level_5", "8342", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:39 PM", "", "In Development",  0,13497)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Revision_Start_Mechanical_Install", "8340", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:33 PM", "", "In Development",  0,13493)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Start_In_house_Engineering", "9734", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:37:37 AM", "", "In Development",  0,17194)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Start_Mechanical_Install", "8337", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:10:23 PM", "", "In Development",  0,13487)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Total_Project_Duration_Weeks", "9739", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:43:31 AM", "", "In Development",  0,17199)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Schedule_Turnover_to_Customer_Go_Live", "9735", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:38:46 AM", "", "In Development",  0,17195)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Site_Needs_Lead_Men_Commissioning", "9744", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:50:24 AM", "", "In Development",  0,17204)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Site_Needs_Lead_Men_Install", "9743", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:49:29 AM", "", "In Development",  0,17203)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Structures_CATWALK_Feet", "8287", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:34 PM", "", "In Development",  0,13387)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Structures_CATWALK_Hours", "8290", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:43 PM", "", "In Development",  0,13393)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Structures_DEMO_Feet", "8285", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:27 PM", "", "In Development",  0,13383)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Structures_DEMO_Hours", "8288", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:37 PM", "", "In Development",  0,13389)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Structures_PLATFORM_Feet", "8286", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:31 PM", "", "In Development",  0,13385)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Structures_PLATFORM_Hours", "8289", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:40 PM", "", "In Development",  0,13391)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Commissioning_Cost", "8380", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:40 PM", "", "In Development",  0,13573)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Commissioning_Hours", "8377", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:30 PM", "", "In Development",  0,13567)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Install_Support_Cost", "8378", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:33 PM", "", "In Development",  0,13569)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Install_Support_Hours", "8375", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:24 PM", "", "In Development",  0,13563)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Rate", "8381", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:43 PM", "", "In Development",  0,13575)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Stagnant_Hours_Cost", "8379", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:37 PM", "", "In Development",  0,13571)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Stagnant_Hours_Hours", "8376", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:27 PM", "", "In Development",  0,13565)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Total_Cost", "9760", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:41:29 AM", "", "In Development",  0,17221)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Superintendent_Total_Hours", "9761", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:42:05 AM", "", "In Development",  0,17222)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Supplies_Consumables_All_Other_Cost", "8408", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:08 PM", "", "In Development",  0,13629)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Supplies_Consumables_Anchors_1USD_per_Cost", "8407", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:05 PM", "", "In Development",  0,13627)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Supplies_Consumables_Cost", "9366", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H617242", "7/10/2025 9:31:42 AM", "", "In Development",  0,15940)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Supplies_Consumables_Hardware_Air_Piping_Cost", "8406", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:01 PM", "", "In Development",  0,13625)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Supplies_Consumables_Total_Cost", "9767", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:01:27 AM", "", "In Development",  0,17228)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Support_Lead_Men_Hrs_per_Wk", "9741", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:46:19 AM", "", "In Development",  0,17201)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Support_Project_Administrative_Hrs_per_Wk", "9742", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:48:40 AM", "", "In Development",  0,17202)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Support_Superintendent_Hrs_per_Wk", "9740", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 8:44:31 AM", "", "In Development",  0,17200)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Total_Miscellaneous_Cost", "8374", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:21 PM", "", "In Development",  0,13561)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Total_Miscellaneous_Hours", "8373", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:12:18 PM", "", "In Development",  0,13559)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Installer_Per_Diem_Rates_Wkly", "8293", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:53 PM", "", "In Development",  0,13399)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Installer_Total_Mobilization", "8299", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:12 PM", "", "In Development",  0,13411)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Installer_Total_Project_Per_Diem", "8296", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:02 PM", "", "In Development",  0,13405)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Installer_Total_Travel_Cost", "8302", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:21 PM", "", "In Development",  0,13417)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly", "8292", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:49 PM", "", "In Development",  0,13397)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Lead_Men_Total_Mobilization", "8298", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:09 PM", "", "In Development",  0,13409)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Lead_Men_Total_Project_Per_Diem", "8295", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:59 PM", "", "In Development",  0,13403)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Lead_Men_Total_Travel_Cost", "8301", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:18 PM", "", "In Development",  0,13415)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Per_Diem_Range", "9745", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:03:10 AM", "", "In Development",  0,17206)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Superintendent_Per_Diem_Rates_Wkly", "8291", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:46 PM", "", "In Development",  0,13395)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Superintendent_Total_Mobilization", "8297", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:06 PM", "", "In Development",  0,13407)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Superintendent_Total_Prj_Per_Diem", "8294", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:07:56 PM", "", "In Development",  0,13401)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Cost_Superintendent_Total_Travel_Cost", "8300", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:08:15 PM", "", "In Development",  0,13413)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Expense_Cost", "9367", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H617242", "7/10/2025 9:32:23 AM", "", "In Development",  0,15941)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Expense_Mobilization_Cost", "8410", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:14 PM", "", "In Development",  0,13633)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Expense_Per_Diem_Cost", "8409", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:14:11 PM", "", "In Development",  0,13631)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Travel_Expense_Total_Cost", "9768", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 10:02:09 AM", "", "In Development",  0,17229)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Intelligrated_Installer_Current_Rate", "8320", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:28 PM", "", "In Development",  0,13453)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Intelligrated_Installer_New_Rate", "8323", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:38 PM", "", "In Development",  0,13459)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Intelligrated_Installer_Percent_Adj", "8317", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:10 PM", "", "In Development",  0,13447)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Intelligrated_Installer_Tot_Cost_Adj", "8326", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:48 PM", "", "In Development",  0,13465)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Lead_Person_Current_Rate", "8319", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:25 PM", "", "In Development",  0,13451)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Lead_Person_New_Rate", "8322", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:35 PM", "", "In Development",  0,13457)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Lead_Person_Percent_Adj", "8316", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:07 PM", "", "In Development",  0,13445)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Lead_Person_Tot_Cost_Adj", "8325", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:44 PM", "", "In Development",  0,13463)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Percent_Adjustment", "9748", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:19:02 AM", "", "In Development",  0,17209)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Superintendent_Current_Rate", "8318", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:22 PM", "", "In Development",  0,13449)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Superintendent_New_Rate", "8321", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:32 PM", "", "In Development",  0,13455)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Superintendent_Percent_Adj", "8315", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:03 PM", "", "In Development",  0,13443)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Superintendent_Tot_Cost_Adj", "8324", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H581955", "7/7/2025 12:09:41 PM", "", "In Development",  0,13461)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("Union_Rate_Tot_Cost_Adjustment", "9749", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H615411", "7/15/2025 9:19:57 AM", "", "In Development",  0,17210)
        End If
            If Incontext("-1", ctx) Then
          InitProperty("DisplayName", "9074", "", "", "Y", "","", 0, "-1", 0, "", "N","0",  "GLOBAL\H602502", "7/8/2025 4:38:54 PM", "", "In Development",  0,15157)
        End If
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_ValidValues()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Subparts()
    Dim ctx as String
    ctx = ContextId
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_Connections()
    Dim ctx as String
    ctx = ContextId
            If Incontext("-1", ctx) Then
          
        InitConnection("My_Subsystem", "108", "","", "Y", 0, "-1", "", "GLOBAL\H602502", "7/8/2025 4:22:21 PM", "", "In Development", "N",202)
        
          End If
        
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Private Sub NewContextInit_DB()
    Dim ctx as String
    ctx = ContextId
    End Sub

    #End Region

    #Region " Formulas "

    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_My_Subsystem_PARTS() as Rulestream.Kernel.rsCollection
      
      Dim Result as Object = Nothing
      Dim ctx as Object
      Try
      ctx = this
        '   BEGIN FORMULA; CON ID:108; TYPE:PF
        Result = Me.Parent.Base_Options_Alternates(Me.SubpartID)
        '   END FORMULA; CON ID:108; TYPE:PF
      
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_My_Subsystem_PARTS", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return ConvertToCollection(Result)
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Additional_Subcontractor_Services_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Additional_Subcontractor_Services_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8412; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8412; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Additional_Subcontractor_Services_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Administrative_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Administrative_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8414; TYPE:PF
      Result = Math.Ceiling((Me.Other_Cost_Duration_Wks*Me.Other_Cost_Hrs_Per_Week) + (If(Me.Other_Cost_Qty_Trucks=0,0,15)*Me.Installer_Rate*0.75))
      '   END FORMULA; PROP ID:8414; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Administrative_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Avg_Crew_Size() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Avg_Crew_Size").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8347; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8347; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Avg_Crew_Size", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conveyor_above_8_ft() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conveyor_above_8_ft").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8283; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8283; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_above_8_ft", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conveyor_between_5_ft_to_8_ft_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conveyor_between_5_ft_to_8_ft_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8282; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8282; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_between_5_ft_to_8_ft_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conveyor_Hours_Added() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Conveyor_Hours_Added").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8284; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8284; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_Hours_Added", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Average_Hours_per_wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Average_Hours_per_wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8343; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8343; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Average_Hours_per_wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Comm_Sppt_Hours_per_wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Comm_Sppt_Hours_per_wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8344; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8344; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Comm_Sppt_Hours_per_wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Installer_Headcount() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Installer_Headcount").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8362; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8362; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Headcount", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Installer_Mobilization_Count() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Installer_Mobilization_Count").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8359; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8359; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Mobilization_Count", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Installer_Total_Mobilization_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Installer_Total_Mobilization_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8365; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8365; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Total_Mobilization_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Lead_Man_Headcount() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Lead_Man_Headcount").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8361; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8361; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Headcount", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Lead_Man_Mobilization_Count() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Lead_Man_Mobilization_Count").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8358; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8358; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Mobilization_Count", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Lead_Man_Total_Mobilization_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Lead_Man_Total_Mobilization_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8364; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8364; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Total_Mobilization_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Mobilization_Cost_per_person() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Mobilization_Cost_per_person").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8356; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8356; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Mobilization_Cost_per_person", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Peak_Crew_Multiplier() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Peak_Crew_Multiplier").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8345; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8345; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Peak_Crew_Multiplier", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Superintendent_Headcount() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Superintendent_Headcount").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8360; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8360; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Headcount", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Superintendent_Mobilization_Count() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Superintendent_Mobilization_Count").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8357; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8357; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Mobilization_Count", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Superintendent_Total_Mobilization_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Superintendent_Total_Mobilization_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8363; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8363; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Total_Mobilization_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Total_Headcount() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Total_Headcount").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8366; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8366; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Total_Headcount", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Total_Mobilization_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Crew_Total_Mobilization_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8367; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8367; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Total_Mobilization_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Crane_Large_Outdoor_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8245; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8245; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Crane_Large_Outdoor_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8232; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8232; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Crane_Large_Outdoor_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8271; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8271; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Crane_Large_Outdoor_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8258; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8258; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Cranes_Small_indoors_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8244; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8244; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Cranes_Small_indoors_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8231; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8231; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Cranes_Small_indoors_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8270; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8270; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Cranes_Small_indoors_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8257; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8257; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Dumpsters_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8248; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8248; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Dumpsters_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8235; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8235; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Dumpsters_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8274; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8274; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Dumpsters_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8261; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8261; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Fork_Truck_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8243; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8243; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Fork_Truck_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8230; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8230; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Fork_Truck_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8269; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8269; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Fork_Truck_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8256; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8256; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Boom_Lift_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8240; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8240; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Boom_Lift_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8227; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8227; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Boom_Lift_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8266; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8266; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Boom_Lift_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8253; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8253; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Scissor_Lift_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8238; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8238; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Scissor_Lift_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8225; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8225; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Scissor_Lift_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8264; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8264; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Scissor_Lift_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8251; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8251; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Telehandler_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8242; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8242; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Telehandler_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8229; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8229; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Telehandler_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8268; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8268; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Large_Telehandler_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8255; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8255; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Porta_Johns_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8249; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8249; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Porta_Johns_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8236; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8236; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Porta_Johns_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8275; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8275; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Porta_Johns_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8262; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8262; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Site_Trailer_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8247; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8247; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Site_Trailer_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8234; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8234; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Site_Trailer_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8273; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8273; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Site_Trailer_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8260; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8260; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Boom_Lift_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8239; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8239; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Boom_Lift_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8226; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8226; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Boom_Lift_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8265; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8265; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Boom_Lift_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8252; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8252; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Scissors_Lift_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8237; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8237; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Scissors_Lift_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8224; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8224; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Scissors_Lift_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8263; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8263; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Scissors_Lift_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8250; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8250; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Telehandler_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Telehandler_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8241; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8241; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Telehandler_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Telehandler_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8267; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8267; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Telehandler_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_Telehandler_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8254; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8254; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_TelehandlerQuantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Small_TelehandlerQuantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8228; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8228; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_TelehandlerQuantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Duration() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Welders_Duration").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8246; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8246; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Duration", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Quantity() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Welders_Quantity").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8233; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8233; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Quantity", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Welders_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8272; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8272; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Wkly_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("EQ_Rental_Welders_Wkly_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8259; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8259; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Wkly_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Equipment_Rental_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Equipment_Rental_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9365; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9365; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Equipment_Rental_Dumpsters_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Equipment_Rental_Dumpsters_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8404; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8404; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Dumpsters_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Equipment_Rental_Porta_Johns_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Equipment_Rental_Porta_Johns_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8405; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8405; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Porta_Johns_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Equipment_Rental_Porta_Johns_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Equipment_Rental_Porta_Johns_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9766; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9766; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Porta_Johns_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Air_Piping() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Factors_Air_Piping").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8334; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8334; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Air_Piping", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Customer_Spec_Difficulty() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Factors_Customer_Spec_Difficulty").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8336; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8336; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Customer_Spec_Difficulty", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Risk_Rating() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Factors_Risk_Rating").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8333; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8333; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Risk_Rating", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Seismic() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Factors_Seismic").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8335; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8335; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Seismic", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Commissioning_Support_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Commissioning_Support_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8401; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8401; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Commissioning_Support_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Commissioning_Support_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Commissioning_Support_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8394; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8394; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Commissioning_Support_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Demo_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Demo_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8398; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8398; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Demo_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Demo_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Demo_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8391; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8391; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Demo_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Install_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Install_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8396; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8396; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Install_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8389; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8389; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Misc_Install_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Misc_Install_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8399; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8399; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Misc_Install_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Misc_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Misc_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8392; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8392; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Misc_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Platforms_Grid_Catwalk_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Platforms_Grid_Catwalk_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8397; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8397; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Platforms_Grid_Catwalk_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Platforms_Grid_Catwalk_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Platforms_Grid_Catwalk_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8390; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8390; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Platforms_Grid_Catwalk_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8403; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8403; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Stagnant_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Stagnant_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8400; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8400; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Stagnant_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Stagnant_Hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Stagnant_Hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8393; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8393; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Stagnant_Hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9764; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9764; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9765; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9765; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Working_Super_or_Lead_Deduct_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8402; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8402; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Working_Super_or_Lead_Deduct_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Installer_Working_Super_or_Lead_Deduct_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8395; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8395; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Working_Super_or_Lead_Deduct_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Current_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Intelligrated_Installer_Current_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8308; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8308; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Current_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_New_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Intelligrated_Installer_New_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8311; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8311; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_New_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Intelligrated_Installer_Percent_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8305; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8305; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8314; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8314; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_Current_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Lead_Person_Current_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8307; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8307; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Current_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_New_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Lead_Person_New_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8310; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8310; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_New_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_Percent_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Lead_Person_Percent_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8304; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8304; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Percent_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Lead_Person_Tot_Cost_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8313; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8313; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Percent_Adjustment() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Percent_Adjustment").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9746; TYPE:PF
      result = ""
      '   END FORMULA; PROP ID:9746; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Percent_Adjustment", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_Current_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Superintendent_Current_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8306; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8306; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Current_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_New_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Superintendent_New_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8309; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8309; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_New_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_Percent_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Superintendent_Percent_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8303; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8303; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Percent_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_Tot_Cost_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Superintendent_Tot_Cost_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8312; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8312; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Tot_Cost_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Tot_Cost_Adjustment() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Labor_Rate_Tot_Cost_Adjustment").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9747; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9747; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Tot_Cost_Adjustment", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9776; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9776; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Commissioning_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Commissioning_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9777; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9777; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Commissioning_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Install_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Install_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9774; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9774; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Install_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Install_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Install_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9775; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9775; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Install_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9780; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9780; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9772; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9772; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Men_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Men_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9773; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9773; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Men_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8387; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8387; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Commissioning_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Commissioning_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8384; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8384; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Commissioning_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Install_Support_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Install_Support_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8385; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8385; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Install_Support_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Install_Support_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Install_Support_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8382; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8382; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Install_Support_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8388; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8388; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Stagnant_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Stagnant_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8386; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8386; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Stagnant_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Stagnant_Hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Stagnant_Hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8383; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8383; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Stagnant_Hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9762; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9762; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Lead_Person_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9763; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9763; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Mech_Convyr_Inst_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Mech_Convyr_Inst_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9361; TYPE:PF
      Result = Me.Superintendent_Total_Hours+
Me.Lead_Person_Total_Hours+
Me.Installer_Total_Hours
      '   END FORMULA; PROP ID:9361; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Mech_Convyr_Inst_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Mech_Convyr_Installation_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Mech_Convyr_Installation_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9368; TYPE:PF
      Result = Me.Superintendent_Total_Cost+
Me.Lead_Person_Total_Cost+
Me.Installer_Total_Cost+
Me.Equipment_Rental_Cost+
Me.Supplies_Consumables_Cost+
Me.Travel_Expense_Cost+
Me.Permits_Cost+
Me.Additional_Subcontractor_Services_Cost+
Me.Miscellaneous_Cost
      '   END FORMULA; PROP ID:9368; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Mech_Convyr_Installation_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Air_Piping_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Air_Piping_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8420; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8420; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Air_Piping_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Air_Piping_Hours_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Air_Piping_Hours_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8421; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8421; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Air_Piping_Hours_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Catwalk_Hours_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Catwalk_Hours_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8418; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8418; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Catwalk_Hours_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Cost_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Cost_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8425; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8425; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Cost_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Demo_Hours_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Demo_Hours_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8419; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8419; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Demo_Hours_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Pallet_Conveyor_Footage_ft() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Pallet_Conveyor_Footage_ft").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8422; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8422; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Pallet_Conveyor_Footage_ft", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Pallet_Hours_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Pallet_Hours_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8423; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8423; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Pallet_Hours_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Platform_Hours_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Platform_Hours_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8417; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8417; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Platform_Hours_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Rental_Cost_per_Week() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Rental_Cost_per_Week").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8427; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8427; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Rental_Cost_per_Week", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Total_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8426; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8426; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8424; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8424; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Footage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Total_Footage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8415; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8415; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Footage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Hours_per_Foot() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Metrics_Total_Hours_per_Foot").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8416; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8416; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Hours_per_Foot", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8413; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8413; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Customer_Spec_Adder() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Customer_Spec_Adder").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8371; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8371; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Customer_Spec_Adder", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Customer_Spec_Adder_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Customer_Spec_Adder_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9753; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9753; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Customer_Spec_Adder_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Elevation_Adder() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Elevation_Adder").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8372; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8372; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Elevation_Adder", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Elevation_Adder_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Elevation_Adder_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9754; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9754; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Elevation_Adder_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Misc_Item_1_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Misc_Item_1_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9755; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9755; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Misc_Item_1_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Misc_Item_1_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Misc_Item_1_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9757; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9757; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Misc_Item_1_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Misc_Item_2_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Misc_Item_2_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9756; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9756; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Misc_Item_2_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Misc_Item_2_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Misc_Item_2_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9758; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9758; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Misc_Item_2_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Miscellaneous_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Miscellaneous_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9752; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9752; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Miscellaneous_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Miscellaneous_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Miscellaneous_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8370; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8370; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Miscellaneous_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Shuttle_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Shuttle_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9751; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9751; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Shuttle_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Shuttle_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_Shuttle_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8369; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8369; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Shuttle_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_System_Efficiency() As Boolean
          Dim Result as Boolean
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_System_Efficiency").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9759; TYPE:PF
      result = True
      '   END FORMULA; PROP ID:9759; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_System_Efficiency", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_System_Efficiency_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_System_Efficiency_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9750; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9750; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_System_Efficiency_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_System_Efficiency_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_System_Efficiency_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8368; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8368; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_System_Efficiency_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_System_Efficiency_Percentage() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Miscellaneous_System_Efficiency_Percentage").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9604; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9604; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_System_Efficiency_Percentage", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Duration_Wks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Other_Cost_Duration_Wks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8280; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8280; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Duration_Wks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Hrs_Per_Week() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Other_Cost_Hrs_Per_Week").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8281; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8281; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Hrs_Per_Week", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Onsite_Admin() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Other_Cost_Onsite_Admin").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8279; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8279; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Onsite_Admin", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Permit_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Other_Cost_Permit_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8278; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8278; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Permit_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Qty_Gang_Boxes() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Other_Cost_Qty_Gang_Boxes").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8277; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8277; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Qty_Gang_Boxes", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Qty_Trucks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Other_Cost_Qty_Trucks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8276; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8276; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Qty_Trucks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Peak_Crew() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Peak_Crew").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8346; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8346; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Peak_Crew", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Lead_Men_Working_Percent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Lead_Men_Working_Percent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8355; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8355; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Lead_Men_Working_Percent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Installers_Comm() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Num_of_Installers_Comm").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8353; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8353; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Installers_Comm", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Installers_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Num_of_Installers_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8350; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8350; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Installers_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Lead_Men_Comm() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Num_of_Lead_Men_Comm").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8352; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8352; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Lead_Men_Comm", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Lead_Men_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Num_of_Lead_Men_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8349; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8349; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Lead_Men_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Superintendents_Comm() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Num_of_Superintendents_Comm").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8351; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8351; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Superintendents_Comm", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Superintendents_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Num_of_Superintendents_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8348; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8348; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Superintendents_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Superintendents_Working_Percent() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("People_Needs_Superintendents_Working_Percent").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8354; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8354; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Superintendents_Working_Percent", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Permits_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Permits_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8411; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8411; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Permits_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Customer() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Info_Customer").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8327; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8327; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Customer", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Description() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Info_Description").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8330; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8330; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Description", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Location() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Info_Location").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8328; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8328; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Location", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Number() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Info_Number").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8329; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8329; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Number", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_QuoteDate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Info_QuoteDate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8331; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8331; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_QuoteDate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Support_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Support_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9781; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9781; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Support_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Support_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Support_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9778; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9778; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Support_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Support_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Support_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9779; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9779; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Support_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Tier() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Tier").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8332; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8332; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Tier", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Tier_Value() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Project_Tier_Value").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9782; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9782; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Tier_Value", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Commissioning_Duration_Weeks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Commissioning_Duration_Weeks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9738; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9738; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Commissioning_Duration_Weeks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_End_Mechanical_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_End_Mechanical_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8338; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8338; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_End_Mechanical_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_End_Run_to_In_Level_5() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_End_Run_to_In_Level_5").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8339; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8339; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_End_Run_to_In_Level_5", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Install_Duration_Weeks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Install_Duration_Weeks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9737; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9737; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Install_Duration_Weeks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Pre_Install_Duration_Weeks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Pre_Install_Duration_Weeks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9736; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9736; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Pre_Install_Duration_Weeks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Revision_End_Mechanical_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Revision_End_Mechanical_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8341; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8341; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_End_Mechanical_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Revision_End_Run_to_In_Level_5() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Revision_End_Run_to_In_Level_5").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8342; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8342; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_End_Run_to_In_Level_5", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Revision_Start_Mechanical_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Revision_Start_Mechanical_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8340; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8340; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_Start_Mechanical_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Start_In_house_Engineering() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Start_In_house_Engineering").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9734; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9734; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Start_In_house_Engineering", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Start_Mechanical_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Start_Mechanical_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8337; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8337; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Start_Mechanical_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Total_Project_Duration_Weeks() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Total_Project_Duration_Weeks").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9739; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9739; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Total_Project_Duration_Weeks", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Turnover_to_Customer_Go_Live() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Schedule_Turnover_to_Customer_Go_Live").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9735; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9735; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Turnover_to_Customer_Go_Live", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Site_Needs_Lead_Men_Commissioning() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Site_Needs_Lead_Men_Commissioning").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9744; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9744; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Site_Needs_Lead_Men_Commissioning", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Site_Needs_Lead_Men_Install() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Site_Needs_Lead_Men_Install").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9743; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9743; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Site_Needs_Lead_Men_Install", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_CATWALK_Feet() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Structures_CATWALK_Feet").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8287; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8287; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_CATWALK_Feet", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_CATWALK_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Structures_CATWALK_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8290; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8290; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_CATWALK_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_DEMO_Feet() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Structures_DEMO_Feet").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8285; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8285; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_DEMO_Feet", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_DEMO_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Structures_DEMO_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8288; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8288; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_DEMO_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_PLATFORM_Feet() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Structures_PLATFORM_Feet").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8286; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8286; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_PLATFORM_Feet", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_PLATFORM_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Structures_PLATFORM_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8289; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8289; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_PLATFORM_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Commissioning_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Commissioning_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8380; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8380; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Commissioning_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Commissioning_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Commissioning_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8377; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8377; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Commissioning_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Install_Support_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Install_Support_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8378; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8378; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Install_Support_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Install_Support_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Install_Support_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8375; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8375; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Install_Support_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8381; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8381; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Stagnant_Hours_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Stagnant_Hours_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8379; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8379; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Stagnant_Hours_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Stagnant_Hours_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Stagnant_Hours_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8376; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8376; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Stagnant_Hours_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9760; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9760; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Total_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Superintendent_Total_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9761; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9761; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Total_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_All_Other_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Supplies_Consumables_All_Other_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8408; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8408; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_All_Other_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_Anchors_1USD_per_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Supplies_Consumables_Anchors_1USD_per_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8407; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8407; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Anchors_1USD_per_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Supplies_Consumables_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9366; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9366; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_Hardware_Air_Piping_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Supplies_Consumables_Hardware_Air_Piping_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8406; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8406; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Hardware_Air_Piping_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Supplies_Consumables_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9767; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9767; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Support_Lead_Men_Hrs_per_Wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Support_Lead_Men_Hrs_per_Wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9741; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9741; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Support_Lead_Men_Hrs_per_Wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Support_Project_Administrative_Hrs_per_Wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Support_Project_Administrative_Hrs_per_Wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9742; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9742; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Support_Project_Administrative_Hrs_per_Wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Support_Superintendent_Hrs_per_Wk() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Support_Superintendent_Hrs_per_Wk").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9740; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9740; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Support_Superintendent_Hrs_per_Wk", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Total_Miscellaneous_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Total_Miscellaneous_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8374; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8374; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Total_Miscellaneous_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Total_Miscellaneous_Hours() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Total_Miscellaneous_Hours").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8373; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8373; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Total_Miscellaneous_Hours", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Installer_Per_Diem_Rates_Wkly").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8293; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8293; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Total_Mobilization() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Installer_Total_Mobilization").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8299; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8299; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Mobilization", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Total_Project_Per_Diem() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Installer_Total_Project_Per_Diem").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8296; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8296; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Project_Per_Diem", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Total_Travel_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Installer_Total_Travel_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8302; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8302; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Travel_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8292; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8292; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Total_Mobilization() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Lead_Men_Total_Mobilization").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8298; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8298; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Mobilization", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Lead_Men_Total_Project_Per_Diem").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8295; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8295; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Total_Travel_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Lead_Men_Total_Travel_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8301; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8301; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Travel_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Per_Diem_Range() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Per_Diem_Range").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9745; TYPE:PF
      Result = ""
      '   END FORMULA; PROP ID:9745; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Per_Diem_Range", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Superintendent_Per_Diem_Rates_Wkly").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8291; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8291; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Total_Mobilization() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Superintendent_Total_Mobilization").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8297; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8297; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Mobilization", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Superintendent_Total_Prj_Per_Diem").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8294; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8294; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Total_Travel_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Cost_Superintendent_Total_Travel_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8300; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8300; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Travel_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Expense_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Expense_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9367; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9367; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Expense_Mobilization_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Expense_Mobilization_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8410; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8410; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Mobilization_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Expense_Per_Diem_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Expense_Per_Diem_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8409; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8409; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Per_Diem_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Expense_Total_Cost() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Travel_Expense_Total_Cost").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9768; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9768; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Total_Cost", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_Current_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Intelligrated_Installer_Current_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8320; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8320; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Current_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_New_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Intelligrated_Installer_New_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8323; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8323; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_New_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_Percent_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Intelligrated_Installer_Percent_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8317; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8317; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Percent_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Intelligrated_Installer_Tot_Cost_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8326; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8326; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_Current_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Lead_Person_Current_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8319; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8319; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Current_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_New_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Lead_Person_New_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8322; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8322; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_New_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_Percent_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Lead_Person_Percent_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8316; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8316; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Percent_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_Tot_Cost_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Lead_Person_Tot_Cost_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8325; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8325; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Tot_Cost_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Percent_Adjustment() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Percent_Adjustment").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9748; TYPE:PF
      result = ""
      '   END FORMULA; PROP ID:9748; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Percent_Adjustment", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_Current_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Superintendent_Current_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8318; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8318; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Current_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_New_Rate() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Superintendent_New_Rate").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8321; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8321; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_New_Rate", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_Percent_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Superintendent_Percent_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8315; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8315; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Percent_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_Tot_Cost_Adj() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Superintendent_Tot_Cost_Adj").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:8324; TYPE:PF
      Result = 0.0
      '   END FORMULA; PROP ID:8324; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Tot_Cost_Adj", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Tot_Cost_Adjustment() As Double
          Dim Result as Double
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("Union_Rate_Tot_Cost_Adjustment").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9749; TYPE:PF
      result = 0.0
      '   END FORMULA; PROP ID:9749; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Tot_Cost_Adjustment", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_DisplayName() As String
          
          Dim Result as String = String.Empty
        
      Dim ctx as Object
      Try
      ctx = this
      If Me.Properties("DisplayName").GetDebugState(Rulestream.Kernel.PropertySF.FormulaDebugTypes.VALUE_FORMULA) Then
      Stop
      End If
      '   BEGIN FORMULA; PROP ID:9074; TYPE:PF
      Result = me.My_Subsystem(1).DisplayName
      '   END FORMULA; PROP ID:9074; TYPE:PF
      Catch ex As Exception
      ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_DisplayName", ex.Message)
      If ObjectManager.StopOnErrors Then Stop
      End Try
      Return Result
      End Function
    
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Additional_Subcontractor_Services_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Additional_Subcontractor_Services_Cost"
          Me.Properties("Additional_Subcontractor_Services_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8412; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8412; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Additional_Subcontractor_Services_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Additional_Subcontractor_Services_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Administrative_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Administrative_Cost"
          Me.Properties("Administrative_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8414; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8414; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Administrative_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Administrative_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Avg_Crew_Size_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Avg_Crew_Size"
          Me.Properties("Avg_Crew_Size").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8347; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8347; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Avg_Crew_Size_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Avg_Crew_Size").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conveyor_above_8_ft_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Conveyor_above_8_ft"
          Me.Properties("Conveyor_above_8_ft").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8283; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8283; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_above_8_ft_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Conveyor_above_8_ft").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conveyor_between_5_ft_to_8_ft_Footage_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Conveyor_between_5_ft_to_8_ft_Footage"
          Me.Properties("Conveyor_between_5_ft_to_8_ft_Footage").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8282; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8282; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_between_5_ft_to_8_ft_Footage_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Conveyor_between_5_ft_to_8_ft_Footage").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Conveyor_Hours_Added_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Conveyor_Hours_Added"
          Me.Properties("Conveyor_Hours_Added").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8284; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8284; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_Hours_Added_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Conveyor_Hours_Added").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Average_Hours_per_wk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Average_Hours_per_wk"
          Me.Properties("Crew_Average_Hours_per_wk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8343; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8343; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Average_Hours_per_wk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Average_Hours_per_wk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Comm_Sppt_Hours_per_wk_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Comm_Sppt_Hours_per_wk"
          Me.Properties("Crew_Comm_Sppt_Hours_per_wk").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8344; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8344; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Comm_Sppt_Hours_per_wk_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Comm_Sppt_Hours_per_wk").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Installer_Headcount_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Installer_Headcount"
          Me.Properties("Crew_Installer_Headcount").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8362; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8362; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Headcount_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Installer_Headcount").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Installer_Mobilization_Count_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Installer_Mobilization_Count"
          Me.Properties("Crew_Installer_Mobilization_Count").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8359; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8359; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Mobilization_Count_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Installer_Mobilization_Count").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Installer_Total_Mobilization_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Installer_Total_Mobilization_Cost"
          Me.Properties("Crew_Installer_Total_Mobilization_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8365; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8365; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Total_Mobilization_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Installer_Total_Mobilization_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Lead_Man_Headcount_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Lead_Man_Headcount"
          Me.Properties("Crew_Lead_Man_Headcount").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8361; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8361; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Headcount_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Lead_Man_Headcount").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Lead_Man_Mobilization_Count_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Lead_Man_Mobilization_Count"
          Me.Properties("Crew_Lead_Man_Mobilization_Count").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8358; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8358; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Mobilization_Count_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Lead_Man_Mobilization_Count").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Lead_Man_Total_Mobilization_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Lead_Man_Total_Mobilization_Cost"
          Me.Properties("Crew_Lead_Man_Total_Mobilization_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8364; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8364; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Total_Mobilization_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Lead_Man_Total_Mobilization_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Mobilization_Cost_per_person_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Mobilization_Cost_per_person"
          Me.Properties("Crew_Mobilization_Cost_per_person").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8356; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8356; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Mobilization_Cost_per_person_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Mobilization_Cost_per_person").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Peak_Crew_Multiplier_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Peak_Crew_Multiplier"
          Me.Properties("Crew_Peak_Crew_Multiplier").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8345; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8345; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Peak_Crew_Multiplier_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Peak_Crew_Multiplier").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Superintendent_Headcount_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Superintendent_Headcount"
          Me.Properties("Crew_Superintendent_Headcount").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8360; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8360; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Headcount_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Superintendent_Headcount").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Superintendent_Mobilization_Count_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Superintendent_Mobilization_Count"
          Me.Properties("Crew_Superintendent_Mobilization_Count").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8357; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8357; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Mobilization_Count_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Superintendent_Mobilization_Count").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Superintendent_Total_Mobilization_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Superintendent_Total_Mobilization_Cost"
          Me.Properties("Crew_Superintendent_Total_Mobilization_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8363; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8363; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Total_Mobilization_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Superintendent_Total_Mobilization_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Total_Headcount_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Total_Headcount"
          Me.Properties("Crew_Total_Headcount").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8366; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8366; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Total_Headcount_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Total_Headcount").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Crew_Total_Mobilization_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Crew_Total_Mobilization_Cost"
          Me.Properties("Crew_Total_Mobilization_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8367; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8367; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Total_Mobilization_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Crew_Total_Mobilization_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Crane_Large_Outdoor_Duration"
          Me.Properties("EQ_Rental_Crane_Large_Outdoor_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8245; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8245; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Crane_Large_Outdoor_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Crane_Large_Outdoor_Quantity"
          Me.Properties("EQ_Rental_Crane_Large_Outdoor_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8232; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8232; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Crane_Large_Outdoor_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Crane_Large_Outdoor_Total_Cost"
          Me.Properties("EQ_Rental_Crane_Large_Outdoor_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8271; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8271; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Crane_Large_Outdoor_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Crane_Large_Outdoor_Wkly_Rate"
          Me.Properties("EQ_Rental_Crane_Large_Outdoor_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8258; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8258; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Crane_Large_Outdoor_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Cranes_Small_indoors_Duration"
          Me.Properties("EQ_Rental_Cranes_Small_indoors_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8244; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8244; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Cranes_Small_indoors_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Cranes_Small_indoors_Quantity"
          Me.Properties("EQ_Rental_Cranes_Small_indoors_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8231; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8231; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Cranes_Small_indoors_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Cranes_Small_indoors_Total_Cost"
          Me.Properties("EQ_Rental_Cranes_Small_indoors_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8270; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8270; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Cranes_Small_indoors_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Cranes_Small_indoors_Wkly_Rate"
          Me.Properties("EQ_Rental_Cranes_Small_indoors_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8257; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8257; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Cranes_Small_indoors_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Dumpsters_Duration"
          Me.Properties("EQ_Rental_Dumpsters_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8248; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8248; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Dumpsters_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Dumpsters_Quantity"
          Me.Properties("EQ_Rental_Dumpsters_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8235; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8235; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Dumpsters_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Dumpsters_Total_Cost"
          Me.Properties("EQ_Rental_Dumpsters_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8274; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8274; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Dumpsters_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Dumpsters_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Dumpsters_Wkly_Rate"
          Me.Properties("EQ_Rental_Dumpsters_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8261; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8261; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Dumpsters_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Fork_Truck_Duration"
          Me.Properties("EQ_Rental_Fork_Truck_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8243; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8243; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Fork_Truck_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Fork_Truck_Quantity"
          Me.Properties("EQ_Rental_Fork_Truck_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8230; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8230; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Fork_Truck_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Fork_Truck_Total_Cost"
          Me.Properties("EQ_Rental_Fork_Truck_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8269; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8269; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Fork_Truck_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Fork_Truck_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Fork_Truck_Wkly_Rate"
          Me.Properties("EQ_Rental_Fork_Truck_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8256; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8256; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Fork_Truck_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Boom_Lift_Duration"
          Me.Properties("EQ_Rental_Large_Boom_Lift_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8240; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8240; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Boom_Lift_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Boom_Lift_Quantity"
          Me.Properties("EQ_Rental_Large_Boom_Lift_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8227; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8227; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Boom_Lift_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Boom_Lift_Total_Cost"
          Me.Properties("EQ_Rental_Large_Boom_Lift_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8266; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8266; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Boom_Lift_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Boom_Lift_Wkly_Rate"
          Me.Properties("EQ_Rental_Large_Boom_Lift_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8253; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8253; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Boom_Lift_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Scissor_Lift_Duration"
          Me.Properties("EQ_Rental_Large_Scissor_Lift_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8238; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8238; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Scissor_Lift_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Scissor_Lift_Quantity"
          Me.Properties("EQ_Rental_Large_Scissor_Lift_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8225; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8225; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Scissor_Lift_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Scissor_Lift_Total_Cost"
          Me.Properties("EQ_Rental_Large_Scissor_Lift_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8264; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8264; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Scissor_Lift_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Scissor_Lift_Wkly_Rate"
          Me.Properties("EQ_Rental_Large_Scissor_Lift_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8251; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8251; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Scissor_Lift_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Telehandler_Duration"
          Me.Properties("EQ_Rental_Large_Telehandler_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8242; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8242; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Telehandler_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Telehandler_Quantity"
          Me.Properties("EQ_Rental_Large_Telehandler_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8229; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8229; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Telehandler_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Telehandler_Total_Cost"
          Me.Properties("EQ_Rental_Large_Telehandler_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8268; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8268; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Telehandler_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Large_Telehandler_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Large_Telehandler_Wkly_Rate"
          Me.Properties("EQ_Rental_Large_Telehandler_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8255; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8255; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Large_Telehandler_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Porta_Johns_Duration"
          Me.Properties("EQ_Rental_Porta_Johns_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8249; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8249; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Porta_Johns_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Porta_Johns_Quantity"
          Me.Properties("EQ_Rental_Porta_Johns_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8236; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8236; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Porta_Johns_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Porta_Johns_Total_Cost"
          Me.Properties("EQ_Rental_Porta_Johns_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8275; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8275; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Porta_Johns_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Porta_Johns_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Porta_Johns_Wkly_Rate"
          Me.Properties("EQ_Rental_Porta_Johns_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8262; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8262; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Porta_Johns_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Site_Trailer_Duration"
          Me.Properties("EQ_Rental_Site_Trailer_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8247; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8247; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Site_Trailer_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Site_Trailer_Quantity"
          Me.Properties("EQ_Rental_Site_Trailer_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8234; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8234; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Site_Trailer_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Site_Trailer_Total_Cost"
          Me.Properties("EQ_Rental_Site_Trailer_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8273; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8273; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Site_Trailer_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Site_Trailer_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Site_Trailer_Wkly_Rate"
          Me.Properties("EQ_Rental_Site_Trailer_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8260; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8260; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Site_Trailer_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Boom_Lift_Duration"
          Me.Properties("EQ_Rental_Small_Boom_Lift_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8239; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8239; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Boom_Lift_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Boom_Lift_Quantity"
          Me.Properties("EQ_Rental_Small_Boom_Lift_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8226; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8226; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Boom_Lift_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Boom_Lift_Total_Cost"
          Me.Properties("EQ_Rental_Small_Boom_Lift_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8265; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8265; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Boom_Lift_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Boom_Lift_Wkly_Rate"
          Me.Properties("EQ_Rental_Small_Boom_Lift_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8252; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8252; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Boom_Lift_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Scissors_Lift_Duration"
          Me.Properties("EQ_Rental_Small_Scissors_Lift_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8237; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8237; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Scissors_Lift_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Scissors_Lift_Quantity"
          Me.Properties("EQ_Rental_Small_Scissors_Lift_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8224; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8224; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Scissors_Lift_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Scissors_Lift_Total_Cost"
          Me.Properties("EQ_Rental_Small_Scissors_Lift_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8263; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8263; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Scissors_Lift_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Scissors_Lift_Wkly_Rate"
          Me.Properties("EQ_Rental_Small_Scissors_Lift_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8250; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8250; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Scissors_Lift_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Telehandler_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Telehandler_Duration"
          Me.Properties("EQ_Rental_Small_Telehandler_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8241; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8241; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Telehandler_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Telehandler_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Telehandler_Total_Cost"
          Me.Properties("EQ_Rental_Small_Telehandler_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8267; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8267; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Telehandler_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_Telehandler_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_Telehandler_Wkly_Rate"
          Me.Properties("EQ_Rental_Small_Telehandler_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8254; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8254; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_Telehandler_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Small_TelehandlerQuantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Small_TelehandlerQuantity"
          Me.Properties("EQ_Rental_Small_TelehandlerQuantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8228; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8228; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_TelehandlerQuantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Small_TelehandlerQuantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Duration_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Welders_Duration"
          Me.Properties("EQ_Rental_Welders_Duration").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8246; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8246; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Duration_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Welders_Duration").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Quantity_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Welders_Quantity"
          Me.Properties("EQ_Rental_Welders_Quantity").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8233; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8233; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Quantity_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Welders_Quantity").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Welders_Total_Cost"
          Me.Properties("EQ_Rental_Welders_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8272; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8272; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Welders_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_EQ_Rental_Welders_Wkly_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "EQ_Rental_Welders_Wkly_Rate"
          Me.Properties("EQ_Rental_Welders_Wkly_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8259; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8259; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Wkly_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("EQ_Rental_Welders_Wkly_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Equipment_Rental_Dumpsters_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Equipment_Rental_Dumpsters_Cost"
          Me.Properties("Equipment_Rental_Dumpsters_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8404; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8404; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Dumpsters_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Equipment_Rental_Dumpsters_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Equipment_Rental_Porta_Johns_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Equipment_Rental_Porta_Johns_Cost"
          Me.Properties("Equipment_Rental_Porta_Johns_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8405; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8405; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Porta_Johns_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Equipment_Rental_Porta_Johns_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Air_Piping_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Factors_Air_Piping"
          Me.Properties("Factors_Air_Piping").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8334; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8334; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Air_Piping_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Factors_Air_Piping").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Customer_Spec_Difficulty_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Factors_Customer_Spec_Difficulty"
          Me.Properties("Factors_Customer_Spec_Difficulty").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8336; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8336; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Customer_Spec_Difficulty_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Factors_Customer_Spec_Difficulty").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Risk_Rating_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Factors_Risk_Rating"
          Me.Properties("Factors_Risk_Rating").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8333; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8333; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Risk_Rating_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Factors_Risk_Rating").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Factors_Seismic_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Factors_Seismic"
          Me.Properties("Factors_Seismic").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8335; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8335; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Seismic_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Factors_Seismic").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Commissioning_Support_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Commissioning_Support_Cost"
          Me.Properties("Installer_Commissioning_Support_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8401; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8401; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Commissioning_Support_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Commissioning_Support_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Commissioning_Support_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Commissioning_Support_Hours"
          Me.Properties("Installer_Commissioning_Support_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8394; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8394; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Commissioning_Support_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Commissioning_Support_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Demo_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Demo_Cost"
          Me.Properties("Installer_Demo_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8398; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8398; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Demo_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Demo_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Demo_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Demo_Hours"
          Me.Properties("Installer_Demo_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8391; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8391; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Demo_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Demo_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Install_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Install_Cost"
          Me.Properties("Installer_Install_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8396; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8396; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Install_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Install_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Install_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Install_Hours"
          Me.Properties("Installer_Install_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8389; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8389; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Install_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Install_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Misc_Install_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Misc_Install_Cost"
          Me.Properties("Installer_Misc_Install_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8399; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8399; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Misc_Install_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Misc_Install_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Misc_Install_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Misc_Install_Hours"
          Me.Properties("Installer_Misc_Install_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8392; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8392; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Misc_Install_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Misc_Install_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Platforms_Grid_Catwalk_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Platforms_Grid_Catwalk_Cost"
          Me.Properties("Installer_Platforms_Grid_Catwalk_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8397; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8397; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Platforms_Grid_Catwalk_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Platforms_Grid_Catwalk_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Platforms_Grid_Catwalk_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Platforms_Grid_Catwalk_Hours"
          Me.Properties("Installer_Platforms_Grid_Catwalk_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8390; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8390; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Platforms_Grid_Catwalk_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Platforms_Grid_Catwalk_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Rate"
          Me.Properties("Installer_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8403; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8403; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Stagnant_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Stagnant_Hours_Cost"
          Me.Properties("Installer_Stagnant_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8400; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8400; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Stagnant_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Stagnant_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Stagnant_Hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Stagnant_Hours_Hours"
          Me.Properties("Installer_Stagnant_Hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8393; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8393; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Stagnant_Hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Stagnant_Hours_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Working_Super_or_Lead_Deduct_Cost"
          Me.Properties("Installer_Working_Super_or_Lead_Deduct_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8402; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8402; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Working_Super_or_Lead_Deduct_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Working_Super_or_Lead_Deduct_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Installer_Working_Super_or_Lead_Deduct_Hours"
          Me.Properties("Installer_Working_Super_or_Lead_Deduct_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8395; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8395; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Working_Super_or_Lead_Deduct_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Installer_Working_Super_or_Lead_Deduct_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Current_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Intelligrated_Installer_Current_Rate"
          Me.Properties("Labor_Rate_Intelligrated_Installer_Current_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8308; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8308; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Current_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Intelligrated_Installer_Current_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_New_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Intelligrated_Installer_New_Rate"
          Me.Properties("Labor_Rate_Intelligrated_Installer_New_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8311; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8311; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_New_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Intelligrated_Installer_New_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Intelligrated_Installer_Percent_Adj"
          Me.Properties("Labor_Rate_Intelligrated_Installer_Percent_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8305; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8305; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Intelligrated_Installer_Percent_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj"
          Me.Properties("Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8314; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8314; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_Current_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Lead_Person_Current_Rate"
          Me.Properties("Labor_Rate_Lead_Person_Current_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8307; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8307; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Current_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Lead_Person_Current_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_New_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Lead_Person_New_Rate"
          Me.Properties("Labor_Rate_Lead_Person_New_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8310; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8310; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_New_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Lead_Person_New_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_Percent_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Lead_Person_Percent_Adj"
          Me.Properties("Labor_Rate_Lead_Person_Percent_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8304; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8304; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Percent_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Lead_Person_Percent_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Lead_Person_Tot_Cost_Adj"
          Me.Properties("Labor_Rate_Lead_Person_Tot_Cost_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8313; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8313; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Lead_Person_Tot_Cost_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_Current_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Superintendent_Current_Rate"
          Me.Properties("Labor_Rate_Superintendent_Current_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8306; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8306; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Current_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Superintendent_Current_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_New_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Superintendent_New_Rate"
          Me.Properties("Labor_Rate_Superintendent_New_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8309; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8309; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_New_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Superintendent_New_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_Percent_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Superintendent_Percent_Adj"
          Me.Properties("Labor_Rate_Superintendent_Percent_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8303; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8303; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Percent_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Superintendent_Percent_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Labor_Rate_Superintendent_Tot_Cost_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Labor_Rate_Superintendent_Tot_Cost_Adj"
          Me.Properties("Labor_Rate_Superintendent_Tot_Cost_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8312; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8312; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Tot_Cost_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Labor_Rate_Superintendent_Tot_Cost_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Commissioning_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Commissioning_Cost"
          Me.Properties("Lead_Person_Commissioning_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8387; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8387; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Commissioning_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Commissioning_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Commissioning_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Commissioning_Hours"
          Me.Properties("Lead_Person_Commissioning_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8384; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8384; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Commissioning_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Commissioning_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Install_Support_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Install_Support_Cost"
          Me.Properties("Lead_Person_Install_Support_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8385; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8385; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Install_Support_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Install_Support_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Install_Support_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Install_Support_Hours"
          Me.Properties("Lead_Person_Install_Support_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8382; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8382; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Install_Support_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Install_Support_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Rate"
          Me.Properties("Lead_Person_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8388; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8388; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Stagnant_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Stagnant_Hours_Cost"
          Me.Properties("Lead_Person_Stagnant_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8386; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8386; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Stagnant_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Stagnant_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Lead_Person_Stagnant_Hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Lead_Person_Stagnant_Hours_Hours"
          Me.Properties("Lead_Person_Stagnant_Hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8383; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8383; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Stagnant_Hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Lead_Person_Stagnant_Hours_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Air_Piping_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Air_Piping_Hours"
          Me.Properties("Metrics_Air_Piping_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8420; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8420; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Air_Piping_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Air_Piping_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Air_Piping_Hours_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Air_Piping_Hours_per_Foot"
          Me.Properties("Metrics_Air_Piping_Hours_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8421; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8421; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Air_Piping_Hours_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Air_Piping_Hours_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Catwalk_Hours_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Catwalk_Hours_per_Foot"
          Me.Properties("Metrics_Catwalk_Hours_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8418; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8418; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Catwalk_Hours_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Catwalk_Hours_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Cost_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Cost_per_Foot"
          Me.Properties("Metrics_Cost_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8425; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8425; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Cost_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Cost_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Demo_Hours_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Demo_Hours_per_Foot"
          Me.Properties("Metrics_Demo_Hours_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8419; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8419; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Demo_Hours_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Demo_Hours_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Pallet_Conveyor_Footage_ft_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Pallet_Conveyor_Footage_ft"
          Me.Properties("Metrics_Pallet_Conveyor_Footage_ft").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8422; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8422; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Pallet_Conveyor_Footage_ft_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Pallet_Conveyor_Footage_ft").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Pallet_Hours_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Pallet_Hours_per_Foot"
          Me.Properties("Metrics_Pallet_Hours_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8423; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8423; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Pallet_Hours_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Pallet_Hours_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Platform_Hours_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Platform_Hours_per_Foot"
          Me.Properties("Metrics_Platform_Hours_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8417; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8417; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Platform_Hours_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Platform_Hours_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Rental_Cost_per_Week_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Rental_Cost_per_Week"
          Me.Properties("Metrics_Rental_Cost_per_Week").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8427; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8427; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Rental_Cost_per_Week_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Rental_Cost_per_Week").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Commissioning_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Total_Commissioning_Cost"
          Me.Properties("Metrics_Total_Commissioning_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8426; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8426; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Commissioning_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Total_Commissioning_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Total_Cost"
          Me.Properties("Metrics_Total_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8424; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8424; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Total_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Footage_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Total_Footage"
          Me.Properties("Metrics_Total_Footage").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8415; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8415; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Footage_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Total_Footage").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Metrics_Total_Hours_per_Foot_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Metrics_Total_Hours_per_Foot"
          Me.Properties("Metrics_Total_Hours_per_Foot").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8416; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8416; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Hours_per_Foot_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Metrics_Total_Hours_per_Foot").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Miscellaneous_Cost"
          Me.Properties("Miscellaneous_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8413; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8413; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Miscellaneous_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Customer_Spec_Adder_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Miscellaneous_Customer_Spec_Adder"
          Me.Properties("Miscellaneous_Customer_Spec_Adder").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8371; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8371; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Customer_Spec_Adder_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Miscellaneous_Customer_Spec_Adder").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Elevation_Adder_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Miscellaneous_Elevation_Adder"
          Me.Properties("Miscellaneous_Elevation_Adder").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8372; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8372; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Elevation_Adder_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Miscellaneous_Elevation_Adder").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Miscellaneous_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Miscellaneous_Miscellaneous_Hours"
          Me.Properties("Miscellaneous_Miscellaneous_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8370; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8370; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Miscellaneous_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Miscellaneous_Miscellaneous_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_Shuttle_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Miscellaneous_Shuttle_Hours"
          Me.Properties("Miscellaneous_Shuttle_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8369; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8369; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Shuttle_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Miscellaneous_Shuttle_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Miscellaneous_System_Efficiency_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Miscellaneous_System_Efficiency_Hours"
          Me.Properties("Miscellaneous_System_Efficiency_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8368; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8368; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_System_Efficiency_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Miscellaneous_System_Efficiency_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Duration_Wks_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Other_Cost_Duration_Wks"
          Me.Properties("Other_Cost_Duration_Wks").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8280; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8280; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Duration_Wks_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Other_Cost_Duration_Wks").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Hrs_Per_Week_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Other_Cost_Hrs_Per_Week"
          Me.Properties("Other_Cost_Hrs_Per_Week").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8281; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8281; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Hrs_Per_Week_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Other_Cost_Hrs_Per_Week").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Onsite_Admin_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Other_Cost_Onsite_Admin"
          Me.Properties("Other_Cost_Onsite_Admin").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8279; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8279; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Onsite_Admin_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Other_Cost_Onsite_Admin").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Permit_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Other_Cost_Permit_Hours"
          Me.Properties("Other_Cost_Permit_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8278; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8278; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Permit_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Other_Cost_Permit_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Qty_Gang_Boxes_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Other_Cost_Qty_Gang_Boxes"
          Me.Properties("Other_Cost_Qty_Gang_Boxes").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8277; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8277; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Qty_Gang_Boxes_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Other_Cost_Qty_Gang_Boxes").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Other_Cost_Qty_Trucks_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Other_Cost_Qty_Trucks"
          Me.Properties("Other_Cost_Qty_Trucks").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8276; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8276; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Qty_Trucks_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Other_Cost_Qty_Trucks").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Peak_Crew_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Peak_Crew"
          Me.Properties("Peak_Crew").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8346; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8346; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Peak_Crew_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Peak_Crew").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Lead_Men_Working_Percent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Lead_Men_Working_Percent"
          Me.Properties("People_Needs_Lead_Men_Working_Percent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8355; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8355; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Lead_Men_Working_Percent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Lead_Men_Working_Percent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Installers_Comm_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Num_of_Installers_Comm"
          Me.Properties("People_Needs_Num_of_Installers_Comm").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8353; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8353; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Installers_Comm_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Num_of_Installers_Comm").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Installers_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Num_of_Installers_Install"
          Me.Properties("People_Needs_Num_of_Installers_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8350; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8350; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Installers_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Num_of_Installers_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Lead_Men_Comm_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Num_of_Lead_Men_Comm"
          Me.Properties("People_Needs_Num_of_Lead_Men_Comm").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8352; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8352; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Lead_Men_Comm_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Num_of_Lead_Men_Comm").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Lead_Men_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Num_of_Lead_Men_Install"
          Me.Properties("People_Needs_Num_of_Lead_Men_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8349; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8349; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Lead_Men_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Num_of_Lead_Men_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Superintendents_Comm_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Num_of_Superintendents_Comm"
          Me.Properties("People_Needs_Num_of_Superintendents_Comm").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8351; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8351; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Superintendents_Comm_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Num_of_Superintendents_Comm").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Num_of_Superintendents_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Num_of_Superintendents_Install"
          Me.Properties("People_Needs_Num_of_Superintendents_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8348; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8348; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Superintendents_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Num_of_Superintendents_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_People_Needs_Superintendents_Working_Percent_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "People_Needs_Superintendents_Working_Percent"
          Me.Properties("People_Needs_Superintendents_Working_Percent").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8354; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8354; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Superintendents_Working_Percent_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("People_Needs_Superintendents_Working_Percent").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Permits_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Permits_Cost"
          Me.Properties("Permits_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8411; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8411; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Permits_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Permits_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Customer_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Project_Info_Customer"
          Me.Properties("Project_Info_Customer").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8327; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8327; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Customer_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Project_Info_Customer").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Description_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Project_Info_Description"
          Me.Properties("Project_Info_Description").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8330; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8330; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Description_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Project_Info_Description").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Location_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Project_Info_Location"
          Me.Properties("Project_Info_Location").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8328; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8328; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Location_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Project_Info_Location").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_Number_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Project_Info_Number"
          Me.Properties("Project_Info_Number").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8329; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8329; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Number_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Project_Info_Number").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Info_QuoteDate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Project_Info_QuoteDate"
          Me.Properties("Project_Info_QuoteDate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8331; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8331; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_QuoteDate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Project_Info_QuoteDate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Project_Tier_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Project_Tier"
          Me.Properties("Project_Tier").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8332; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8332; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Tier_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Project_Tier").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_End_Mechanical_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Schedule_End_Mechanical_Install"
          Me.Properties("Schedule_End_Mechanical_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8338; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8338; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_End_Mechanical_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Schedule_End_Mechanical_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_End_Run_to_In_Level_5_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Schedule_End_Run_to_In_Level_5"
          Me.Properties("Schedule_End_Run_to_In_Level_5").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8339; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8339; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_End_Run_to_In_Level_5_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Schedule_End_Run_to_In_Level_5").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Revision_End_Mechanical_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Schedule_Revision_End_Mechanical_Install"
          Me.Properties("Schedule_Revision_End_Mechanical_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8341; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8341; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_End_Mechanical_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Schedule_Revision_End_Mechanical_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Revision_End_Run_to_In_Level_5_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Schedule_Revision_End_Run_to_In_Level_5"
          Me.Properties("Schedule_Revision_End_Run_to_In_Level_5").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8342; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8342; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_End_Run_to_In_Level_5_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Schedule_Revision_End_Run_to_In_Level_5").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Revision_Start_Mechanical_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Schedule_Revision_Start_Mechanical_Install"
          Me.Properties("Schedule_Revision_Start_Mechanical_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8340; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8340; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_Start_Mechanical_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Schedule_Revision_Start_Mechanical_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Schedule_Start_Mechanical_Install_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Schedule_Start_Mechanical_Install"
          Me.Properties("Schedule_Start_Mechanical_Install").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8337; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8337; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Start_Mechanical_Install_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Schedule_Start_Mechanical_Install").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_CATWALK_Feet_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Structures_CATWALK_Feet"
          Me.Properties("Structures_CATWALK_Feet").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8287; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8287; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_CATWALK_Feet_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Structures_CATWALK_Feet").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_CATWALK_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Structures_CATWALK_Hours"
          Me.Properties("Structures_CATWALK_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8290; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8290; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_CATWALK_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Structures_CATWALK_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_DEMO_Feet_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Structures_DEMO_Feet"
          Me.Properties("Structures_DEMO_Feet").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8285; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8285; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_DEMO_Feet_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Structures_DEMO_Feet").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_DEMO_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Structures_DEMO_Hours"
          Me.Properties("Structures_DEMO_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8288; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8288; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_DEMO_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Structures_DEMO_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_PLATFORM_Feet_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Structures_PLATFORM_Feet"
          Me.Properties("Structures_PLATFORM_Feet").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8286; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8286; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_PLATFORM_Feet_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Structures_PLATFORM_Feet").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Structures_PLATFORM_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Structures_PLATFORM_Hours"
          Me.Properties("Structures_PLATFORM_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8289; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8289; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_PLATFORM_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Structures_PLATFORM_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Commissioning_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Commissioning_Cost"
          Me.Properties("Superintendent_Commissioning_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8380; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8380; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Commissioning_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Commissioning_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Commissioning_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Commissioning_Hours"
          Me.Properties("Superintendent_Commissioning_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8377; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8377; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Commissioning_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Commissioning_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Install_Support_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Install_Support_Cost"
          Me.Properties("Superintendent_Install_Support_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8378; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8378; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Install_Support_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Install_Support_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Install_Support_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Install_Support_Hours"
          Me.Properties("Superintendent_Install_Support_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8375; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8375; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Install_Support_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Install_Support_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Rate"
          Me.Properties("Superintendent_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8381; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8381; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Stagnant_Hours_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Stagnant_Hours_Cost"
          Me.Properties("Superintendent_Stagnant_Hours_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8379; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8379; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Stagnant_Hours_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Stagnant_Hours_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Superintendent_Stagnant_Hours_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Superintendent_Stagnant_Hours_Hours"
          Me.Properties("Superintendent_Stagnant_Hours_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8376; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8376; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Stagnant_Hours_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Superintendent_Stagnant_Hours_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_All_Other_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Supplies_Consumables_All_Other_Cost"
          Me.Properties("Supplies_Consumables_All_Other_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8408; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8408; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_All_Other_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Supplies_Consumables_All_Other_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_Anchors_1USD_per_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Supplies_Consumables_Anchors_1USD_per_Cost"
          Me.Properties("Supplies_Consumables_Anchors_1USD_per_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8407; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8407; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Anchors_1USD_per_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Supplies_Consumables_Anchors_1USD_per_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Supplies_Consumables_Hardware_Air_Piping_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Supplies_Consumables_Hardware_Air_Piping_Cost"
          Me.Properties("Supplies_Consumables_Hardware_Air_Piping_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8406; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8406; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Hardware_Air_Piping_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Supplies_Consumables_Hardware_Air_Piping_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Total_Miscellaneous_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Total_Miscellaneous_Cost"
          Me.Properties("Total_Miscellaneous_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8374; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8374; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Total_Miscellaneous_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Total_Miscellaneous_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Total_Miscellaneous_Hours_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Total_Miscellaneous_Hours"
          Me.Properties("Total_Miscellaneous_Hours").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8373; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8373; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Total_Miscellaneous_Hours_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Total_Miscellaneous_Hours").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Installer_Per_Diem_Rates_Wkly"
          Me.Properties("Travel_Cost_Installer_Per_Diem_Rates_Wkly").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8293; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8293; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Installer_Per_Diem_Rates_Wkly").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Total_Mobilization_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Installer_Total_Mobilization"
          Me.Properties("Travel_Cost_Installer_Total_Mobilization").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8299; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8299; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Mobilization_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Installer_Total_Mobilization").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Total_Project_Per_Diem_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Installer_Total_Project_Per_Diem"
          Me.Properties("Travel_Cost_Installer_Total_Project_Per_Diem").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8296; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8296; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Project_Per_Diem_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Installer_Total_Project_Per_Diem").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Installer_Total_Travel_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Installer_Total_Travel_Cost"
          Me.Properties("Travel_Cost_Installer_Total_Travel_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8302; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8302; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Travel_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Installer_Total_Travel_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly"
          Me.Properties("Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8292; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8292; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Total_Mobilization_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Lead_Men_Total_Mobilization"
          Me.Properties("Travel_Cost_Lead_Men_Total_Mobilization").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8298; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8298; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Mobilization_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Lead_Men_Total_Mobilization").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Lead_Men_Total_Project_Per_Diem"
          Me.Properties("Travel_Cost_Lead_Men_Total_Project_Per_Diem").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8295; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8295; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Lead_Men_Total_Project_Per_Diem").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Lead_Men_Total_Travel_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Lead_Men_Total_Travel_Cost"
          Me.Properties("Travel_Cost_Lead_Men_Total_Travel_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8301; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8301; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Travel_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Lead_Men_Total_Travel_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Superintendent_Per_Diem_Rates_Wkly"
          Me.Properties("Travel_Cost_Superintendent_Per_Diem_Rates_Wkly").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8291; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8291; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Superintendent_Per_Diem_Rates_Wkly").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Total_Mobilization_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Superintendent_Total_Mobilization"
          Me.Properties("Travel_Cost_Superintendent_Total_Mobilization").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8297; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8297; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Mobilization_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Superintendent_Total_Mobilization").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Superintendent_Total_Prj_Per_Diem"
          Me.Properties("Travel_Cost_Superintendent_Total_Prj_Per_Diem").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8294; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8294; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Superintendent_Total_Prj_Per_Diem").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Cost_Superintendent_Total_Travel_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Cost_Superintendent_Total_Travel_Cost"
          Me.Properties("Travel_Cost_Superintendent_Total_Travel_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8300; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8300; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Travel_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Cost_Superintendent_Total_Travel_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Expense_Mobilization_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Expense_Mobilization_Cost"
          Me.Properties("Travel_Expense_Mobilization_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8410; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8410; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Mobilization_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Expense_Mobilization_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Travel_Expense_Per_Diem_Cost_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Travel_Expense_Per_Diem_Cost"
          Me.Properties("Travel_Expense_Per_Diem_Cost").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8409; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8409; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Per_Diem_Cost_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Travel_Expense_Per_Diem_Cost").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_Current_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Intelligrated_Installer_Current_Rate"
          Me.Properties("Union_Rate_Intelligrated_Installer_Current_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8320; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8320; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Current_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Intelligrated_Installer_Current_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_New_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Intelligrated_Installer_New_Rate"
          Me.Properties("Union_Rate_Intelligrated_Installer_New_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8323; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8323; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_New_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Intelligrated_Installer_New_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_Percent_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Intelligrated_Installer_Percent_Adj"
          Me.Properties("Union_Rate_Intelligrated_Installer_Percent_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8317; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8317; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Percent_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Intelligrated_Installer_Percent_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Intelligrated_Installer_Tot_Cost_Adj"
          Me.Properties("Union_Rate_Intelligrated_Installer_Tot_Cost_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8326; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8326; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Intelligrated_Installer_Tot_Cost_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_Current_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Lead_Person_Current_Rate"
          Me.Properties("Union_Rate_Lead_Person_Current_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8319; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8319; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Current_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Lead_Person_Current_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_New_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Lead_Person_New_Rate"
          Me.Properties("Union_Rate_Lead_Person_New_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8322; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8322; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_New_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Lead_Person_New_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_Percent_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Lead_Person_Percent_Adj"
          Me.Properties("Union_Rate_Lead_Person_Percent_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8316; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8316; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Percent_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Lead_Person_Percent_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Lead_Person_Tot_Cost_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Lead_Person_Tot_Cost_Adj"
          Me.Properties("Union_Rate_Lead_Person_Tot_Cost_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8325; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8325; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Tot_Cost_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Lead_Person_Tot_Cost_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_Current_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Superintendent_Current_Rate"
          Me.Properties("Union_Rate_Superintendent_Current_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8318; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8318; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Current_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Superintendent_Current_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_New_Rate_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Superintendent_New_Rate"
          Me.Properties("Union_Rate_Superintendent_New_Rate").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8321; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8321; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_New_Rate_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Superintendent_New_Rate").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_Percent_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Superintendent_Percent_Adj"
          Me.Properties("Union_Rate_Superintendent_Percent_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8315; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8315; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Percent_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Superintendent_Percent_Adj").ErrorReporting
          End Function
        
          '*****************************************************************************
          '   Copyright (C) 2024 Siemens. All rights reserved.
          '
          '   Changes to this procedure may only be made within formula comment blocks.
          '*****************************************************************************
          Public Function Formula_Union_Rate_Superintendent_Tot_Cost_Adj_CustomCheck() as Object
          
          Dim Result as Object
          Dim ctx as Object
          Dim PropertyName As String
          PropertyName = "Union_Rate_Superintendent_Tot_Cost_Adj"
          Me.Properties("Union_Rate_Superintendent_Tot_Cost_Adj").ClearCustomErrors()
          Try
          ctx = this
              '   BEGIN FORMULA; PROP ID:8324; TYPE:CC
              'Dim MyProp As PropertySF = Me.Properties("Replace Your Property Name")
'Choices For Severity ARE: VIA_ERROR, VIA_WARNING
'If MyProp.IsInvalid() Then 
' RS_CustomReportError(Me, PropertyName, VIA_ERROR/VIA_WARNING, "Replace Your Error Message")
'End If
              '   END FORMULA; PROP ID:8324; TYPE:CC
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Tot_Cost_Adj_CustomCheck", ex.Message)
          If ObjectManager.StopOnErrors Then Stop
          End Try
          Return Me.Properties("Union_Rate_Superintendent_Tot_Cost_Adj").ErrorReporting
          End Function
        
          Public Function Formula_Additional_Subcontractor_Services_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Additional_Subcontractor_Services_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Administrative_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Administrative_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Avg_Crew_Size_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Avg_Crew_Size_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Conveyor_above_8_ft_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_above_8_ft_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Conveyor_between_5_ft_to_8_ft_Footage_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_between_5_ft_to_8_ft_Footage_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Conveyor_Hours_Added_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Conveyor_Hours_Added_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Average_Hours_per_wk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Average_Hours_per_wk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Comm_Sppt_Hours_per_wk_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Comm_Sppt_Hours_per_wk_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Installer_Headcount_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Headcount_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Installer_Mobilization_Count_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Mobilization_Count_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Installer_Total_Mobilization_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Installer_Total_Mobilization_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Lead_Man_Headcount_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Headcount_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Lead_Man_Mobilization_Count_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Mobilization_Count_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Lead_Man_Total_Mobilization_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Lead_Man_Total_Mobilization_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Mobilization_Cost_per_person_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Mobilization_Cost_per_person_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Peak_Crew_Multiplier_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Peak_Crew_Multiplier_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Superintendent_Headcount_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Headcount_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Superintendent_Mobilization_Count_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Mobilization_Count_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Superintendent_Total_Mobilization_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Superintendent_Total_Mobilization_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Total_Headcount_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Total_Headcount_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Crew_Total_Mobilization_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Crew_Total_Mobilization_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Dumpsters_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Dumpsters_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Dumpsters_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Dumpsters_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Dumpsters_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Fork_Truck_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Fork_Truck_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Fork_Truck_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Fork_Truck_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Fork_Truck_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Telehandler_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Telehandler_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Telehandler_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Large_Telehandler_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Large_Telehandler_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Porta_Johns_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Porta_Johns_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Porta_Johns_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Porta_Johns_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Porta_Johns_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Site_Trailer_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Site_Trailer_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Site_Trailer_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Site_Trailer_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Site_Trailer_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Telehandler_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Telehandler_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_Telehandler_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_Telehandler_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Small_TelehandlerQuantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Small_TelehandlerQuantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Welders_Duration_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Duration_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Welders_Quantity_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Quantity_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Welders_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_EQ_Rental_Welders_Wkly_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_EQ_Rental_Welders_Wkly_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Equipment_Rental_Dumpsters_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Dumpsters_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Equipment_Rental_Porta_Johns_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Equipment_Rental_Porta_Johns_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Factors_Air_Piping_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Air_Piping_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Factors_Customer_Spec_Difficulty_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Customer_Spec_Difficulty_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Factors_Risk_Rating_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Risk_Rating_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Factors_Seismic_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Factors_Seismic_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Commissioning_Support_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Commissioning_Support_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Commissioning_Support_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Commissioning_Support_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Demo_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Demo_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Demo_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Demo_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Install_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Install_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Install_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Install_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Misc_Install_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Misc_Install_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Misc_Install_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Misc_Install_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Platforms_Grid_Catwalk_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Platforms_Grid_Catwalk_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Platforms_Grid_Catwalk_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Platforms_Grid_Catwalk_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Stagnant_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Stagnant_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Stagnant_Hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Stagnant_Hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Working_Super_or_Lead_Deduct_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Installer_Working_Super_or_Lead_Deduct_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Current_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Current_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Intelligrated_Installer_New_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_New_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Lead_Person_Current_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Current_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Lead_Person_New_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_New_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Lead_Person_Percent_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Percent_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Superintendent_Current_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Current_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Superintendent_New_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_New_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Superintendent_Percent_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Percent_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Labor_Rate_Superintendent_Tot_Cost_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Labor_Rate_Superintendent_Tot_Cost_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Commissioning_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Commissioning_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Commissioning_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Commissioning_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Install_Support_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Install_Support_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Install_Support_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Install_Support_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Stagnant_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Stagnant_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Lead_Person_Stagnant_Hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Lead_Person_Stagnant_Hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Air_Piping_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Air_Piping_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Air_Piping_Hours_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Air_Piping_Hours_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Catwalk_Hours_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Catwalk_Hours_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Cost_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Cost_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Demo_Hours_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Demo_Hours_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Pallet_Conveyor_Footage_ft_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Pallet_Conveyor_Footage_ft_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Pallet_Hours_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Pallet_Hours_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Platform_Hours_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Platform_Hours_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Rental_Cost_per_Week_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Rental_Cost_per_Week_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Total_Commissioning_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Commissioning_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Total_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Total_Footage_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Footage_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Metrics_Total_Hours_per_Foot_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Metrics_Total_Hours_per_Foot_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Miscellaneous_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Miscellaneous_Customer_Spec_Adder_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Customer_Spec_Adder_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Miscellaneous_Elevation_Adder_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Elevation_Adder_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Miscellaneous_Miscellaneous_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Miscellaneous_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Miscellaneous_Shuttle_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_Shuttle_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Miscellaneous_System_Efficiency_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Miscellaneous_System_Efficiency_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Other_Cost_Duration_Wks_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Duration_Wks_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Other_Cost_Hrs_Per_Week_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Hrs_Per_Week_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Other_Cost_Onsite_Admin_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Onsite_Admin_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Other_Cost_Permit_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Permit_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Other_Cost_Qty_Gang_Boxes_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Qty_Gang_Boxes_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Other_Cost_Qty_Trucks_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Other_Cost_Qty_Trucks_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Peak_Crew_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Peak_Crew_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Lead_Men_Working_Percent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Lead_Men_Working_Percent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Num_of_Installers_Comm_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Installers_Comm_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Num_of_Installers_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Installers_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Num_of_Lead_Men_Comm_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Lead_Men_Comm_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Num_of_Lead_Men_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Lead_Men_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Num_of_Superintendents_Comm_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Superintendents_Comm_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Num_of_Superintendents_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Num_of_Superintendents_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_People_Needs_Superintendents_Working_Percent_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_People_Needs_Superintendents_Working_Percent_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Permits_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Permits_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Project_Info_Customer_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Customer_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Project_Info_Description_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Description_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Project_Info_Location_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Location_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Project_Info_Number_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_Number_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Project_Info_QuoteDate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Info_QuoteDate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Project_Tier_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Project_Tier_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Schedule_End_Mechanical_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_End_Mechanical_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Schedule_End_Run_to_In_Level_5_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_End_Run_to_In_Level_5_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Schedule_Revision_End_Mechanical_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_End_Mechanical_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Schedule_Revision_End_Run_to_In_Level_5_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_End_Run_to_In_Level_5_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Schedule_Revision_Start_Mechanical_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Revision_Start_Mechanical_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Schedule_Start_Mechanical_Install_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Schedule_Start_Mechanical_Install_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Structures_CATWALK_Feet_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_CATWALK_Feet_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Structures_CATWALK_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_CATWALK_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Structures_DEMO_Feet_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_DEMO_Feet_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Structures_DEMO_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_DEMO_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Structures_PLATFORM_Feet_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_PLATFORM_Feet_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Structures_PLATFORM_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Structures_PLATFORM_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Commissioning_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Commissioning_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Commissioning_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Commissioning_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Install_Support_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Install_Support_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Install_Support_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Install_Support_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Stagnant_Hours_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Stagnant_Hours_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Superintendent_Stagnant_Hours_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Superintendent_Stagnant_Hours_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Supplies_Consumables_All_Other_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_All_Other_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Supplies_Consumables_Anchors_1USD_per_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Anchors_1USD_per_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Supplies_Consumables_Hardware_Air_Piping_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Supplies_Consumables_Hardware_Air_Piping_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Total_Miscellaneous_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Total_Miscellaneous_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Total_Miscellaneous_Hours_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Total_Miscellaneous_Hours_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Installer_Total_Mobilization_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Mobilization_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Installer_Total_Project_Per_Diem_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Project_Per_Diem_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Installer_Total_Travel_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Installer_Total_Travel_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Lead_Men_Total_Mobilization_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Mobilization_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Lead_Men_Total_Travel_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Lead_Men_Total_Travel_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Superintendent_Total_Mobilization_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Mobilization_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Cost_Superintendent_Total_Travel_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Cost_Superintendent_Total_Travel_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Expense_Mobilization_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Mobilization_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Travel_Expense_Per_Diem_Cost_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Travel_Expense_Per_Diem_Cost_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Intelligrated_Installer_Current_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Current_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Intelligrated_Installer_New_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_New_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Intelligrated_Installer_Percent_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Percent_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Lead_Person_Current_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Current_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Lead_Person_New_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_New_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Lead_Person_Percent_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Percent_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Lead_Person_Tot_Cost_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Lead_Person_Tot_Cost_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Superintendent_Current_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Current_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Superintendent_New_Rate_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_New_Rate_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Superintendent_Percent_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Percent_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
          Public Function Formula_Union_Rate_Superintendent_Tot_Cost_Adj_CustomCheckDependnacy() as Boolean
          Try
          Return True
          Catch ex As Exception
          ObjectManager.LogError("Application: " + Me.Application + " CAE_Conveyor_Costing.Formula_Union_Rate_Superintendent_Tot_Cost_Adj_CustomCheckDependnacy", ex.Message)
          End Try
          End Function
        
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Additional_Subcontractor_Services_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Administrative_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Avg_Crew_Size_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conveyor_above_8_ft_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conveyor_between_5_ft_to_8_ft_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conveyor_Hours_Added_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Average_Hours_per_wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Comm_Sppt_Hours_per_wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Installer_Headcount_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Installer_Mobilization_Count_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Installer_Total_Mobilization_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Lead_Man_Headcount_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Lead_Man_Mobilization_Count_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Lead_Man_Total_Mobilization_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Mobilization_Cost_per_person_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Peak_Crew_Multiplier_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Superintendent_Headcount_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Superintendent_Mobilization_Count_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Superintendent_Total_Mobilization_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Total_Headcount_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Total_Mobilization_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Telehandler_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Telehandler_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Telehandler_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_TelehandlerQuantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Duration_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Quantity_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Wkly_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Dumpsters_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Porta_Johns_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Porta_Johns_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Air_Piping_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Customer_Spec_Difficulty_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Risk_Rating_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Seismic_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Commissioning_Support_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Commissioning_Support_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Demo_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Demo_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Install_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Misc_Install_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Misc_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Platforms_Grid_Catwalk_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Platforms_Grid_Catwalk_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Stagnant_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Stagnant_Hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_Current_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_New_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_Current_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_New_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_Percent_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Percent_Adjustment_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_Current_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_New_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_Percent_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_Tot_Cost_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Tot_Cost_Adjustment_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Commissioning_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Install_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Install_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Commissioning_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Install_Support_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Install_Support_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Stagnant_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Stagnant_Hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Mech_Convyr_Inst_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Mech_Convyr_Installation_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Air_Piping_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Air_Piping_Hours_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Catwalk_Hours_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Cost_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Demo_Hours_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Pallet_Conveyor_Footage_ft_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Pallet_Hours_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Platform_Hours_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Rental_Cost_per_Week_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Footage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Hours_per_Foot_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Customer_Spec_Adder_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Customer_Spec_Adder_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Elevation_Adder_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Elevation_Adder_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_1_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_1_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_2_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_2_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Miscellaneous_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Miscellaneous_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Shuttle_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Shuttle_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_Percentage_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Duration_Wks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Hrs_Per_Week_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Onsite_Admin_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Permit_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Qty_Gang_Boxes_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Qty_Trucks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Peak_Crew_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Lead_Men_Working_Percent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Installers_Comm_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Installers_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Lead_Men_Comm_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Lead_Men_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Superintendents_Comm_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Superintendents_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Superintendents_Working_Percent_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Permits_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Customer_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Description_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Location_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Number_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_QuoteDate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Support_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Support_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Support_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Tier_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Tier_Value_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Commissioning_Duration_Weeks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_End_Mechanical_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_End_Run_to_In_Level_5_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Install_Duration_Weeks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Pre_Install_Duration_Weeks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Revision_End_Mechanical_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Revision_End_Run_to_In_Level_5_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Revision_Start_Mechanical_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Start_In_house_Engineering_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Start_Mechanical_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Total_Project_Duration_Weeks_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Turnover_to_Customer_Go_Live_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Site_Needs_Lead_Men_Commissioning_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Site_Needs_Lead_Men_Install_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_CATWALK_Feet_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_CATWALK_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_DEMO_Feet_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_DEMO_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_PLATFORM_Feet_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_PLATFORM_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Commissioning_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Commissioning_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Install_Support_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Install_Support_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Stagnant_Hours_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Stagnant_Hours_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Total_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_All_Other_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Anchors_1USD_per_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Hardware_Air_Piping_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Support_Lead_Men_Hrs_per_Wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Support_Project_Administrative_Hrs_per_Wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Support_Superintendent_Hrs_per_Wk_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Total_Miscellaneous_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Total_Miscellaneous_Hours_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Total_Mobilization_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Total_Project_Per_Diem_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Total_Travel_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Total_Mobilization_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Total_Travel_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Per_Diem_Range_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Total_Mobilization_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Total_Travel_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Mobilization_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Per_Diem_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Total_Cost_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_Current_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_New_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_Percent_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_Current_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_New_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_Percent_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_Tot_Cost_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Percent_Adjustment_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_Current_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_New_Rate_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_Percent_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_Tot_Cost_Adj_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Tot_Cost_Adjustment_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DisplayName_HIDE_CALCULATED_VALUE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Additional_Subcontractor_Services_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Administrative_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Avg_Crew_Size_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conveyor_above_8_ft_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conveyor_between_5_ft_to_8_ft_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Conveyor_Hours_Added_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Average_Hours_per_wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Comm_Sppt_Hours_per_wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Installer_Headcount_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Installer_Mobilization_Count_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Installer_Total_Mobilization_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Lead_Man_Headcount_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Lead_Man_Mobilization_Count_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Lead_Man_Total_Mobilization_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Mobilization_Cost_per_person_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Peak_Crew_Multiplier_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Superintendent_Headcount_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Superintendent_Mobilization_Count_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Superintendent_Total_Mobilization_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Total_Headcount_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Crew_Total_Mobilization_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Crane_Large_Outdoor_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Cranes_Small_indoors_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Dumpsters_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Fork_Truck_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Boom_Lift_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Scissor_Lift_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Large_Telehandler_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Porta_Johns_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Site_Trailer_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Boom_Lift_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Scissors_Lift_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Telehandler_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Telehandler_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_Telehandler_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Small_TelehandlerQuantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Duration_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Quantity_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_EQ_Rental_Welders_Wkly_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Dumpsters_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Porta_Johns_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Equipment_Rental_Porta_Johns_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Air_Piping_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Customer_Spec_Difficulty_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Risk_Rating_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Factors_Seismic_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Commissioning_Support_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Commissioning_Support_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Demo_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Demo_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Install_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Misc_Install_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Misc_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Platforms_Grid_Catwalk_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Platforms_Grid_Catwalk_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Stagnant_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Stagnant_Hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Installer_Working_Super_or_Lead_Deduct_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_Current_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_New_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_Percent_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Intelligrated_Installer_Tot_Cost_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_Current_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_New_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_Percent_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Lead_Person_Tot_Cost_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Percent_Adjustment_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_Current_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_New_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_Percent_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Superintendent_Tot_Cost_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Labor_Rate_Tot_Cost_Adjustment_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Commissioning_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Install_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Install_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Men_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Commissioning_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Install_Support_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Install_Support_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Stagnant_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Stagnant_Hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Lead_Person_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Mech_Convyr_Inst_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Mech_Convyr_Installation_Total_Cost_USERCHANGE() as Boolean
      Return False
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Air_Piping_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Air_Piping_Hours_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Catwalk_Hours_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Cost_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Demo_Hours_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Pallet_Conveyor_Footage_ft_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Pallet_Hours_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Platform_Hours_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Rental_Cost_per_Week_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Footage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Metrics_Total_Hours_per_Foot_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Customer_Spec_Adder_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Customer_Spec_Adder_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Elevation_Adder_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Elevation_Adder_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_1_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_1_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_2_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Misc_Item_2_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Miscellaneous_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Miscellaneous_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Shuttle_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_Shuttle_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Miscellaneous_System_Efficiency_Percentage_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Duration_Wks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Hrs_Per_Week_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Onsite_Admin_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Permit_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Qty_Gang_Boxes_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Other_Cost_Qty_Trucks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Peak_Crew_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Lead_Men_Working_Percent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Installers_Comm_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Installers_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Lead_Men_Comm_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Lead_Men_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Superintendents_Comm_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Num_of_Superintendents_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_People_Needs_Superintendents_Working_Percent_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Permits_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Customer_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Description_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Location_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_Number_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Info_QuoteDate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Support_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Support_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Support_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Tier_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Project_Tier_Value_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Commissioning_Duration_Weeks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_End_Mechanical_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_End_Run_to_In_Level_5_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Install_Duration_Weeks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Pre_Install_Duration_Weeks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Revision_End_Mechanical_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Revision_End_Run_to_In_Level_5_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Revision_Start_Mechanical_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Start_In_house_Engineering_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Start_Mechanical_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Total_Project_Duration_Weeks_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Schedule_Turnover_to_Customer_Go_Live_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Site_Needs_Lead_Men_Commissioning_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Site_Needs_Lead_Men_Install_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_CATWALK_Feet_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_CATWALK_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_DEMO_Feet_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_DEMO_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_PLATFORM_Feet_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Structures_PLATFORM_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Commissioning_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Commissioning_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Install_Support_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Install_Support_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Stagnant_Hours_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Stagnant_Hours_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Superintendent_Total_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_All_Other_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Anchors_1USD_per_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Hardware_Air_Piping_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Supplies_Consumables_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Support_Lead_Men_Hrs_per_Wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Support_Project_Administrative_Hrs_per_Wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Support_Superintendent_Hrs_per_Wk_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Total_Miscellaneous_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Total_Miscellaneous_Hours_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Per_Diem_Rates_Wkly_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Total_Mobilization_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Total_Project_Per_Diem_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Installer_Total_Travel_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Per_Diem_Rates_Wkly_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Total_Mobilization_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Total_Project_Per_Diem_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Lead_Men_Total_Travel_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Per_Diem_Range_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Per_Diem_Rates_Wkly_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Total_Mobilization_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Total_Prj_Per_Diem_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Cost_Superintendent_Total_Travel_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Mobilization_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Per_Diem_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Travel_Expense_Total_Cost_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_Current_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_New_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_Percent_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Intelligrated_Installer_Tot_Cost_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_Current_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_New_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_Percent_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Lead_Person_Tot_Cost_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Percent_Adjustment_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_Current_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_New_Rate_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_Percent_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Superintendent_Tot_Cost_Adj_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_Union_Rate_Tot_Cost_Adjustment_USERCHANGE() as Boolean
      Return True
      End Function
    
      '*****************************************************************************
      '   Copyright (C) 2024 Siemens. All rights reserved.
      '
      '   Changes to this procedure may only be made within formula comment blocks.
      '*****************************************************************************
      Public Function Formula_DisplayName_USERCHANGE() as Boolean
      Return False
      End Function
    

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Function GetRecordsetSQL(ByVal lngDBConID as Long) as String Implements RuleStream.IRsPartFormulas.GetRecordsetSQL
    Dim strSelectStmt As String = ""
    Return strSelectStmt
    End Function
    #End Region

    #Region "Event Handling "
    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub AddRsEventHandlerMappings()
    
    End Sub

    '*****************************************************************************
    '   Copyright (C) 2024 Siemens. All rights reserved.
    '
    '   Do not modify this procedure. Changes may render this application
    '   inoperable and will not be supported by Siemens Product Lifecycle Management Software Inc.
    '*****************************************************************************
    Public Overrides Sub RemoveRsEventHandlerMappings()
    
    End Sub
    #End Region

    End Class

  